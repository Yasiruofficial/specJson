{
  "openapi": "3.0.1",
  "info": {
    "title": "RamBase API",
    "description": "RamBase API resources which provided API client has permission to",
    "contact": { "email": "support@rambase.net" },
    "license": { "name": "RamBase Licence" },
    "version": "1.0.0"
  },
  "servers": [
    { "url": "https://api.rambase.net", "description": "Production server" }
  ],
  "paths": {
    "/sales/orders": {
      "get": {
        "tags": ["sales"],
        "summary": "List of sales orders",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=604&version=45"
        },
        "operationId": "sales_ListOrders",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include domain descriptions for fields using domain values. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$format",
            "in": "query",
            "description": "Format of the response",
            "required": true,
            "style": "form",
            "schema": { "enum": ["json", "xml"], "type": "string" }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limit the number of fields in the response",
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "$pageKey",
            "in": "query",
            "description": "Navigate to first-, previous, next- or last page in list",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$inlineCount",
            "in": "query",
            "description": "Set to 'allpages' to include total number of rows in the response.",
            "style": "form",
            "schema": { "enum": ["none", "allpages"], "type": "string" }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Order the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Specifies number of rows to return in each page.",
            "style": "form",
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Used to add fields to the response",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "SalesOrder.Assignee",
                  "SalesOrder.Management",
                  "SalesOrder.TotalsConverted",
                  "SalesOrder.HighlightedNotification"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "salesOrders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "salesOrderId": {
                            "type": "integer",
                            "description": "Sales order identifier",
                            "format": "int32"
                          },
                          "status": {
                            "type": "integer",
                            "description": "Status of sales order",
                            "format": "int32"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of sales order. "
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                          },
                          "registrationDate": {
                            "type": "string",
                            "description": "Date of registration",
                            "format": "date"
                          },
                          "sellersReferenceNumber": {
                            "type": "string",
                            "description": "Sellers reference number. "
                          },
                          "customersReference": {
                            "type": "string",
                            "description": "Customers reference. Typically a person."
                          },
                          "customersReferenceNumber": {
                            "type": "string",
                            "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
                          },
                          "assignee": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "integer",
                                "description": "User identifier",
                                "format": "int32"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the user"
                              },
                              "firstName": {
                                "type": "string",
                                "description": "First name of the user"
                              },
                              "userLink": {
                                "type": "string",
                                "description": "User reference"
                              }
                            },
                            "description": "User id of assignee. Indicates the next action user id."
                          },
                          "customer": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "integer",
                                "description": "Customer identifier",
                                "format": "int32"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                              },
                              "firstname": {
                                "type": "string",
                                "description": "Secondary name of a company or firstname of a person"
                              },
                              "customerLink": {
                                "type": "string",
                                "description": "Customer reference"
                              }
                            }
                          },
                          "initialSalesOrder": {
                            "type": "object",
                            "properties": {
                              "salesOrderId": {
                                "type": "integer",
                                "description": "Sales order identifier",
                                "format": "int32"
                              },
                              "salesOrderLink": {
                                "type": "string",
                                "description": "Sales order reference"
                              }
                            },
                            "description": "Reference to initial sales order"
                          },
                          "management": {
                            "type": "object",
                            "properties": {
                              "planner": {
                                "type": "object",
                                "properties": {
                                  "employeeId": {
                                    "type": "integer",
                                    "description": "Employee identifier",
                                    "format": "int32"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "description": "Last name of employee"
                                  },
                                  "firstName": {
                                    "type": "string",
                                    "description": "First name of employee"
                                  },
                                  "employeeLink": {
                                    "type": "string",
                                    "description": "Employee reference"
                                  }
                                },
                                "description": "Reference to the employee who is a production management planner."
                              },
                              "projectLeader": {
                                "type": "object",
                                "properties": {
                                  "employeeId": {
                                    "type": "integer",
                                    "description": "Employee identifier",
                                    "format": "int32"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "description": "Last name of employee"
                                  },
                                  "firstName": {
                                    "type": "string",
                                    "description": "First name of employee"
                                  },
                                  "employeeLink": {
                                    "type": "string",
                                    "description": "Employee reference"
                                  }
                                },
                                "description": "Reference to the employee who is a production management project leader."
                              },
                              "documentController": {
                                "type": "object",
                                "properties": {
                                  "employeeId": {
                                    "type": "integer",
                                    "description": "Employee identifier",
                                    "format": "int32"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "description": "Last name of employee"
                                  },
                                  "firstName": {
                                    "type": "string",
                                    "description": "First name of employee"
                                  },
                                  "employeeLink": {
                                    "type": "string",
                                    "description": "Employee reference"
                                  }
                                },
                                "description": "Reference to the employee who is a production management document controller."
                              }
                            },
                            "description": "Represents a group of users, which are assigned to particular management roles."
                          },
                          "totals": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Three character code following the ISO 4217 standard"
                              },
                              "freightAmount": {
                                "type": "number",
                                "description": "Freight amount in transaction document's currency",
                                "format": "double"
                              },
                              "feeAmount": {
                                "type": "number",
                                "description": "Fee amount in transaction document's currency",
                                "format": "double"
                              },
                              "subTotalAmount": {
                                "type": "number",
                                "description": "Total amount of the object in object currency, excluding VAT.",
                                "format": "double"
                              },
                              "vATAmount": {
                                "type": "number",
                                "description": "Total value added tax in object currency.",
                                "format": "double"
                              },
                              "totalAmount": {
                                "type": "number",
                                "description": "The total amount in object currency, including VAT",
                                "format": "double"
                              }
                            }
                          },
                          "totalsConverted": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
                              },
                              "subTotalAmount": {
                                "type": "number",
                                "description": "Total amount of the object in company currency, excluding VAT.",
                                "format": "double"
                              },
                              "totalAmount": {
                                "type": "number",
                                "description": "The total amount in company currency, including VAT.",
                                "format": "double"
                              }
                            }
                          },
                          "highlightedNotification": {
                            "type": "object",
                            "properties": {
                              "notificationId": {
                                "type": "integer",
                                "description": "Notification identifier",
                                "format": "int32"
                              },
                              "status": {
                                "type": "integer",
                                "description": "Status of the notification",
                                "format": "int32"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date and time of creation",
                                "format": "date-time"
                              },
                              "message": {
                                "type": "string",
                                "description": "The message from the notification definition, expanded with parameters."
                              },
                              "translatedMessage": {
                                "type": "string",
                                "description": "The translated message from the notification definition, expanded with parameters."
                              },
                              "notificationType": {
                                "type": "object",
                                "properties": {
                                  "notificationTypeId": {
                                    "type": "string",
                                    "description": "Notification type identifier"
                                  },
                                  "category": {
                                    "type": "string",
                                    "description": "Category of notification type (warning, information etc)"
                                  },
                                  "notificationTypeLink": {
                                    "type": "string",
                                    "description": "Notification type reference"
                                  }
                                }
                              },
                              "notificationLink": {
                                "type": "string",
                                "description": "Notification reference"
                              }
                            }
                          },
                          "salesOrderLink": {
                            "type": "string",
                            "description": "Sales order reference"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Number of elements in the list, as defined in $top. Default is 10.",
                          "format": "int32"
                        },
                        "position": {
                          "type": "integer",
                          "description": "Position of the first element in the list",
                          "format": "int32"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Page index",
                          "format": "int32"
                        },
                        "firstPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to the first page in the list"
                        },
                        "firstPage": {
                          "type": "string",
                          "description": "Link to the first page in the list. $pageKey is set to FirstPageKey."
                        },
                        "previousPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to previous page in the list"
                        },
                        "previousPage": {
                          "type": "string",
                          "description": "Link to the previous page in the list. $pageKey is set to PreviousPageKey."
                        },
                        "nextPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to next page in the list"
                        },
                        "nextPage": {
                          "type": "string",
                          "description": "Link to the next page in the list. $pageKey is set to NextPageKey."
                        },
                        "lastPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to last page in the list"
                        },
                        "lastPage": {
                          "type": "string",
                          "description": "Link to the last page in the list. $pageKey is set to LastPageKey."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Total number of records in the list. Use $inlinecount=allpages in the request uri to include this",
                          "format": "int32"
                        }
                      },
                      "description": "Detailed paging information for this list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["sales"],
        "summary": "Resource for creating new sales orders. Note that only customer is required.",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=1868&version=18"
        },
        "operationId": "sales_PostOrders",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "salesOrder": {
                    "required": ["customer","shippingAddress","currency"],
                    "type": "object",
                    "properties": {
                      "type": {
                        "pattern": "",
                        "type": "string",
                        "description": "Type of sales order. "
                      },
                      "customersReference": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers reference. Typically a person."
                      },
                      "customersReferenceNumber": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
                      },
                      "volumePriceAgreement": {
                        "pattern": "",
                        "type": "string",
                        "description": "Special price agreement related to the quantity beeing ordered. "
                      },
                      "exchangeRateFluctuationAgreement": {
                        "pattern": "",
                        "type": "string",
                        "description": "When a sales order is issued, RamBase stores the current exchange rate and the currency the product normally is purchased in. The exchange rate might have changed when the invoice is issued. The exchange rate fluctuation agreement specifies how to handle these differences. The agreement has the format AAA/BBB, where AAA is a percentage of the total invoice, and BBB is the exchange rate fluctuation percentage. E.g. 100/3.0 means that if the rate of exchange on the date a sales order is forwarded to an invoice has changed more than +/- 3% from the rate of exchange, 100% of the invoice amount will be adjusted."
                      },
                      "currency": {
                        "pattern": "^[A-Z]{3}$",
                        "type": "string",
                        "description": "Three character code following the ISO 4217 standard"
                      },
                      "note": {
                        "pattern": "",
                        "type": "string",
                        "description": "Additional information regarding the object (free text). This note might be visible to customers/suppliers."
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "locationId": {
                            "minimum": 10000,
                            "pattern": "",
                            "type": "integer",
                            "description": "Location identifier",
                            "format": "int32"
                          }
                        },
                        "description": "Location of general ledger posting item."
                      },
                      "customer": {
                        "required": ["customerId"],
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "minimum": 10000,
                            "pattern": "",
                            "type": "integer",
                            "description": "Customer identifier",
                            "format": "int32"
                          }
                        },
                        "description": "The customer the bid is placed for"
                      },
                      "shippingAddress": {
                        "required": ["addressId"],
                        "type": "object",
                        "properties": {
                          "addressId": {
                            "minimum": 1,
                            "pattern": "",
                            "type": "integer",
                            "description": "Address identifier",
                            "format": "int32"
                          }
                        }
                      },
                      "shipment": {
                        "required": ["deliveryTerms"],
                        "type": "object",
                        "properties": {
                          "deliveryTerms": {
                            "type": "string",
                            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
                          },
                          "deliveryTermPlace": {
                            "type": "string",
                            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
                          },
                          "shippingService": {
                            "type": "object",
                            "properties": {
                              "shippingServiceId": {
                                "type": "integer",
                                "description": "Shipping service identifier",
                                "format": "int32"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of shipping service"
                              },
                              "shippingServiceLink": {
                                "type": "string",
                                "description": "Shipping service reference"
                              }
                            }
                          }
                        }
                      },
                      "payment": {
                        "type": "object",
                        "properties": {
                          "paymentTerms": {
                            "type": "string",
                            "description": "Terms of payment. Defaut value is retrieved from the customer. The due date of the sales order and sales invoice is calculated based on this field."
                          },
                          "paymentMethod": {
                            "type": "string",
                            "description": "Method of payment. Default value is retrieved from the customer. "
                          }
                        }
                      },
                      "vATDetails": {
                        "type": "object",
                        "properties": {
                          "vATHandling": {
                            "type": "string",
                            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "OK" } }
      }
    },
    "/human-resources/work-periods": {
      "get": {
        "tags": ["humanResources"],
        "summary": "List of all work periods across all employees",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=2145&version=16"
        },
        "operationId": "humanResources_ListWorkPeriods",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include domain descriptions for fields using domain values. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$format",
            "in": "query",
            "description": "Format of the response",
            "required": true,
            "style": "form",
            "schema": { "enum": ["json", "xml"], "type": "string" }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limit the number of fields in the response",
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "$pageKey",
            "in": "query",
            "description": "Navigate to first-, previous, next- or last page in list",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$inlineCount",
            "in": "query",
            "description": "Set to 'allpages' to include total number of rows in the response.",
            "style": "form",
            "schema": { "enum": ["none", "allpages"], "type": "string" }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Order the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Specifies number of rows to return in each page.",
            "style": "form",
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "workPeriods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "workPeriodId": {
                            "type": "integer",
                            "description": "Work period identifier",
                            "format": "int32"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "integer",
                            "description": "Status of work period, allowance or adjustment ",
                            "format": "int32"
                          },
                          "isIn": {
                            "type": "boolean",
                            "description": "Type of work period, allowance or adjustment."
                          },
                          "date": {
                            "type": "string",
                            "description": "Date of the work period, allowance or adjustment . This date might differ from the date of the workday if the period is across midnight.",
                            "format": "date"
                          },
                          "note": {
                            "type": "string",
                            "description": "Note/comment of the work period, allowance or adjustment "
                          },
                          "timeType": {
                            "type": "object",
                            "properties": {
                              "timeTypeId": {
                                "type": "integer",
                                "description": "Time type identifier",
                                "format": "int32"
                              },
                              "overtimePercent": {
                                "type": "integer",
                                "description": "Overtime percentage",
                                "format": "int32"
                              },
                              "category": {
                                "type": "integer",
                                "description": "Category of the time type",
                                "format": "int32"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the time type"
                              },
                              "timeTypeLink": {
                                "type": "string",
                                "description": "Reference to the time type"
                              }
                            }
                          },
                          "start": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "time",
                                "description": "Start time of work period or allowance"
                              },
                              "site": {
                                "type": "string",
                                "description": "Site at start time of work period"
                              }
                            }
                          },
                          "end": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "time",
                                "description": "End time of work period or allowance"
                              },
                              "site": {
                                "type": "string",
                                "description": "Site at end time of work period"
                              }
                            }
                          },
                          "workDay": {
                            "type": "object",
                            "properties": {
                              "workDayId": {
                                "type": "integer",
                                "description": "Workday identifier",
                                "format": "int32"
                              },
                              "employee": {
                                "type": "object",
                                "properties": {
                                  "employeeId": {
                                    "type": "integer",
                                    "description": "Employee identifier",
                                    "format": "int32"
                                  },
                                  "employeeLink": {
                                    "type": "string",
                                    "description": "Employee reference"
                                  }
                                },
                                "description": "The employee who received the course diploma"
                              },
                              "workDayLink": {
                                "type": "string",
                                "description": "Work hour log reference"
                              }
                            }
                          },
                          "shortTermAbsence": {
                            "type": "object",
                            "properties": {
                              "shortTermAbsenceId": {
                                "type": "integer",
                                "description": "Short-term absence identifier",
                                "format": "int32"
                              },
                              "shortTermAbsenceLink": {
                                "type": "string",
                                "description": "Short-term absence reference"
                              }
                            }
                          },
                          "workPeriodLink": {
                            "type": "string",
                            "description": "Work period, allowance or adjustment reference"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Number of elements in the list, as defined in $top. Default is 10.",
                          "format": "int32"
                        },
                        "position": {
                          "type": "integer",
                          "description": "Position of the first element in the list",
                          "format": "int32"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Page index",
                          "format": "int32"
                        },
                        "firstPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to the first page in the list"
                        },
                        "firstPage": {
                          "type": "string",
                          "description": "Link to the first page in the list. $pageKey is set to FirstPageKey."
                        },
                        "previousPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to previous page in the list"
                        },
                        "previousPage": {
                          "type": "string",
                          "description": "Link to the previous page in the list. $pageKey is set to PreviousPageKey."
                        },
                        "nextPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to next page in the list"
                        },
                        "nextPage": {
                          "type": "string",
                          "description": "Link to the next page in the list. $pageKey is set to NextPageKey."
                        },
                        "lastPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to last page in the list"
                        },
                        "lastPage": {
                          "type": "string",
                          "description": "Link to the last page in the list. $pageKey is set to LastPageKey."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Total number of records in the list. Use $inlinecount=allpages in the request uri to include this",
                          "format": "int32"
                        }
                      },
                      "description": "Detailed paging information for this list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["humanResources"],
        "summary": "Create new work period. If the period goes over midnight, it will be split into two periods and will return the last one.",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=3702&version=9"
        },
        "operationId": "humanResources_PostWorkPeriods",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "workPeriod": {
                    "required": ["note", "isIn", "date","employeeId", "isInText", "timeType", "start", "end"],
                    "type": "object",
                    "properties": {
                      "source": {
                        "pattern": "",
                        "type": "string",
                        "description": "Source of the period data"
                      },
                      "note": {
                        "pattern": "",
                        "type": "string",
                        "description": "Note/comment of the work period, allowance or adjustment "
                      },
                      "isIn": {
                        "pattern": "",
                        "type": "boolean",
                        "description": "Type of work period, allowance or adjustment."
                      },
                      "date": {
                        "pattern": "",
                        "type": "string",
                        "description": "Date of the work period, allowance or adjustment . This date might differ from the date of the workday if the period is across midnight.",
                        "format": "date"
                      },
                      "timeType": {
                        "required": ["timeTypeId"],
                        "type": "object",
                        "properties": {
                          "timeTypeId": {
                            "pattern": "",
                            "type": "integer",
                            "description": "Time type identifier",
                            "format": "int32"
                          }
                        }
                      },
                      "start": {
                        "required": ["time"],
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "time",
                            "description": "Start time of work period or allowance"
                          },
                          "site": {
                            "type": "string",
                            "description": "Site at start time of work period"
                          }
                        }
                      },
                      "end": {
                        "required": ["time"],
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "time",
                            "description": "End time of work period or allowance"
                          },
                          "site": {
                            "type": "string",
                            "description": "Site at end time of work period"
                          }
                        }
                      },
                      "employeeId": {
                        "minimum": 100,
                        "pattern": "",
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "OK" } }
      }
    },
    "/sales/customers": {
      "get": {
        "tags": ["sales"],
        "summary": "List of all customers",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=293&version=56"
        },
        "operationId": "sales_ListCustomers",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include domain descriptions for fields using domain values. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$format",
            "in": "query",
            "description": "Format of the response",
            "required": true,
            "style": "form",
            "schema": { "enum": ["json", "xml"], "type": "string" }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limit the number of fields in the response",
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "$pageKey",
            "in": "query",
            "description": "Navigate to first-, previous, next- or last page in list",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$inlineCount",
            "in": "query",
            "description": "Set to 'allpages' to include total number of rows in the response.",
            "style": "form",
            "schema": { "enum": ["none", "allpages"], "type": "string" }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Order the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Specifies number of rows to return in each page.",
            "style": "form",
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Used to add fields to the response",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Customer.Sales.PriceList",
                  "Customer.Invoicing",
                  "Customer.Shipment"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "type": "integer",
                            "description": "Customer identifier",
                            "format": "int32"
                          },
                          "status": {
                            "type": "integer",
                            "description": "Status of the customer. 1:New, 2:Pending internal approvement, 4:Active, 9:Obsolete",
                            "format": "int32"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                          },
                          "isCompany": {
                            "type": "boolean",
                            "description": "Indicator if a customer is private entity or a company"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Secondary name of a company or firstname of a person"
                          },
                          "internalNote": {
                            "type": "string",
                            "description": "Internal note/notice of the customer. Should not be visible to the customer."
                          },
                          "externalReference": {
                            "type": "string",
                            "description": "External customer reference/identifier. Can be used in external systems."
                          },
                          "legalEntityIdentifier": {
                            "type": "string",
                            "description": "The customers unique enterprise/organization number."
                          },
                          "vATRegistrationNumber": {
                            "type": "string",
                            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "utcdatetime",
                            "description": "Date and time of update"
                          },
                          "classification": {
                            "type": "string",
                            "description": "Classification of the customer"
                          },
                          "accounting": {
                            "type": "object",
                            "properties": {
                              "billingYTDAmount": {
                                "type": "number",
                                "description": "Total amount of invoices and credit notes that has been invoiced this year (to current date)",
                                "format": "double"
                              }
                            }
                          },
                          "sales": {
                            "type": "object",
                            "properties": {
                              "blockSalesOrderRegistration": {
                                "type": "boolean",
                                "description": "True if sales orders for this customer should be blocked/denied/rejected registration. A notification of type \"Stop\" will also be added to sales orders for this customer."
                              },
                              "priceList": {
                                "type": "object",
                                "properties": {
                                  "priceListId": {
                                    "type": "integer",
                                    "description": "Price list identifier",
                                    "format": "int32"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the price list"
                                  },
                                  "priceListLink": {
                                    "type": "string",
                                    "description": "Price list reference"
                                  }
                                }
                              }
                            }
                          },
                          "invoicing": {
                            "type": "object",
                            "properties": {
                              "defaultInvoiceAddress": {
                                "type": "object",
                                "properties": {
                                  "addressId": {
                                    "type": "integer",
                                    "description": "Address identifier",
                                    "format": "int32"
                                  },
                                  "addressLine1": {
                                    "type": "string",
                                    "description": "First address line"
                                  },
                                  "addressLine2": {
                                    "type": "string",
                                    "description": "Second address line"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "description": "Postalcode/Postcode/ZIP"
                                  },
                                  "city": {
                                    "type": "string",
                                    "description": "City/town/village"
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Region/province/state"
                                  },
                                  "countryCode": {
                                    "type": "string",
                                    "description": "Two-character code (ISO 3166) identifying the country."
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "English name of country."
                                  }
                                }
                              }
                            }
                          },
                          "shipment": {
                            "type": "object",
                            "properties": {
                              "defaultShippingAddress": {
                                "type": "object",
                                "properties": {
                                  "addressId": {
                                    "type": "integer",
                                    "description": "Address identifier",
                                    "format": "int32"
                                  },
                                  "addressLine1": {
                                    "type": "string",
                                    "description": "First address line"
                                  },
                                  "addressLine2": {
                                    "type": "string",
                                    "description": "Second address line"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "description": "Postalcode/Postcode/ZIP"
                                  },
                                  "city": {
                                    "type": "string",
                                    "description": "City/town/village"
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Region/province/state"
                                  },
                                  "countryCode": {
                                    "type": "string",
                                    "description": "Two-character code (ISO 3166) identifying the country."
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "English name of country."
                                  },
                                  "addressLink": {
                                    "type": "string",
                                    "description": "Address reference"
                                  }
                                }
                              }
                            }
                          },
                          "customerLink": {
                            "type": "string",
                            "description": "Customer reference"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Number of elements in the list, as defined in $top. Default is 10.",
                          "format": "int32"
                        },
                        "position": {
                          "type": "integer",
                          "description": "Position of the first element in the list",
                          "format": "int32"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Page index",
                          "format": "int32"
                        },
                        "firstPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to the first page in the list"
                        },
                        "firstPage": {
                          "type": "string",
                          "description": "Link to the first page in the list. $pageKey is set to FirstPageKey."
                        },
                        "previousPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to previous page in the list"
                        },
                        "previousPage": {
                          "type": "string",
                          "description": "Link to the previous page in the list. $pageKey is set to PreviousPageKey."
                        },
                        "nextPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to next page in the list"
                        },
                        "nextPage": {
                          "type": "string",
                          "description": "Link to the next page in the list. $pageKey is set to NextPageKey."
                        },
                        "lastPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to last page in the list"
                        },
                        "lastPage": {
                          "type": "string",
                          "description": "Link to the last page in the list. $pageKey is set to LastPageKey."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Total number of records in the list. Use $inlinecount=allpages in the request uri to include this",
                          "format": "int32"
                        }
                      },
                      "description": "Detailed paging information for this list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["sales"],
        "summary": "Creates a new customer",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=1820&version=21"
        },
        "operationId": "sales_PostCustomers",
        "parameters": [
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer": {
                    "required": ["name", "firstName", "isCompany"],
                    "type": "object",
                    "properties": {
                      "name": {
                        "pattern": "",
                        "type": "string",
                        "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                      },
                      "isCompany": {
                        "pattern": "",
                        "type": "boolean",
                        "description": "Indicator if a customer is private entity or a company. If A business or Company the value should be 'true'. Otherwise it should be false"
                      },
                      "firstName": {
                        "pattern": "",
                        "type": "string",
                        "description": "Secondary name of a company or firstname of a person"
                      },
                      "preferredLanguage": {
                        "pattern": "^[a-z]{3}$",
                        "type": "string",
                        "description": "Preferred language for the customer. Is used in prints etc.\r\n"
                      },
                      "website": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers website/homepage/webpage"
                      },
                      "phone": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers main phone number"
                      },
                      "fax": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers main fax number"
                      },
                      "email": {
                        "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
                        "type": "string",
                        "description": "Customers main email"
                      },
                      "externalReference": {
                        "pattern": "",
                        "type": "string",
                        "description": "External customer reference/identifier. Can be used in external systems."
                      },
                      "internalNote": {
                        "pattern": "",
                        "type": "string",
                        "description": "Internal note/notice of the customer. Should not be visible to the customer."
                      },
                      "isRelatedBusinessEntity": {
                        "pattern": "",
                        "type": "boolean",
                        "description": "Identify if a customer is related business entity to the company"
                      },
                      "legalEntityIdentifier": {
                        "pattern": "",
                        "type": "string",
                        "description": "The customers unique enterprise/organization number."
                      },
                      "vATRegistrationNumber": {
                        "pattern": "",
                        "type": "string",
                        "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
                      },
                      "currencies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "type": "string",
                              "description": "Three character code following the ISO 4217 standard"
                            }
                          }
                        },
                        "description": "Currencies used by the customer"
                      },
                      "sales": {
                        "type": "object",
                        "properties": {
                          "salesDistrict": {
                            "pattern": "",
                            "type": "string",
                            "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
                          },
                          "sector": {
                            "pattern": "",
                            "type": "string",
                            "description": "The sector the customer belongs to."
                          },
                          "marketSegment": {
                            "pattern": "",
                            "type": "string",
                            "description": "Market segment of the customer"
                          },
                          "minimumGrossMargin": {
                            "maxLength": 99,
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "The minimum gross margin in percent for the customer",
                            "format": "double"
                          },
                          "vATHandling": {
                            "pattern": "",
                            "type": "string",
                            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
                          },
                          "warrantyPeriod": {
                            "minimum": 0,
                            "pattern": "",
                            "type": "integer",
                            "description": "Agreement of default warranty period in months ",
                            "format": "int32"
                          },
                          "feeAmount": {
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "This is an amount, in the companies local currency, that by default will be added as fee when a sales order is created for this customer.",
                            "format": "double"
                          },
                          "volumePriceAgreement": {
                            "pattern": "",
                            "type": "string",
                            "description": "Special price agreement related to the quantity beeing ordered. "
                          },
                          "exchangeRateFluctuationAgreement": {
                            "pattern": "",
                            "type": "string",
                            "description": "When a sales order is issued, RamBase stores the current exchange rate and the currency the product normally is purchased in. The exchange rate might have changed when the invoice is issued. The exchange rate fluctuation agreement specifies how to handle these differences. The agreement has the format AAA/BBB, where AAA is a percentage of the total invoice, and BBB is the exchange rate fluctuation percentage. E.g. 100/3.0 means that if the rate of exchange on the date a sales order is forwarded to an invoice has changed more than +/- 3% from the rate of exchange, 100% of the invoice amount will be adjusted."
                          },
                          "salesAssistant": {
                            "type": "object",
                            "properties": {
                              "employeeId": {
                                "minimum": 100,
                                "pattern": "",
                                "type": "integer",
                                "description": "Employee identifier",
                                "format": "int32"
                              }
                            },
                            "description": "Reference to the employee who is sales assistant for the customer."
                          },
                          "accountManager": {
                            "type": "object",
                            "properties": {
                              "employeeId": {
                                "minimum": 100,
                                "pattern": "",
                                "type": "integer",
                                "description": "Employee identifier",
                                "format": "int32"
                              }
                            },
                            "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
                          }
                        }
                      },
                      "shipment": {
                        "type": "object",
                        "properties": {
                          "onlyShipEntireSalesOrders": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "True if all items of a sales order should be shipped together. The items of a sales order should never be split into several shipments."
                          },
                          "onlyShipEntireSalesOrderItems": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "True if the total quantity of a sales order item always should be shipped together. The quantity should never be split into several shipments. "
                          },
                          "shipBasedOnConfirmedDeliveryDate": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "If true, will sheduled shipping date on each item be calculated based on confirmed date rather than requested date."
                          },
                          "freightForEachShipment": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "If unchecked there will only be calculated freight on one shipping advice if the particular sales order has serveral shipments."
                          },
                          "shippingDay": {
                            "pattern": "",
                            "type": "string",
                            "description": "Specifies when the goods should be shipped. This is used to calculate the scheduled shipping date for each item."
                          },
                          "consolidateShippingAdvices": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "If true, sales orders will be consolidated when creating shipping advices via the \"Prepare for picking\" process  the . If false, each sales order will result in seperate shipping advice. The field to use when consolidating is specified in the ShippingAdviceConsolidationField. "
                          },
                          "shippingAdviceConsolidationField": {
                            "pattern": "",
                            "type": "string",
                            "description": "Field to use when consolidating sales order items into shipping advices in the \"Prepare for picking\" process."
                          },
                          "shippingAdviceItemSortBy": {
                            "pattern": "",
                            "type": "string",
                            "description": "Items in consolidated shipping advices will be sorted by this fields when they are created in the 'Prepare for picking' process"
                          },
                          "requireApprovalIfOverdue": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "True if  shipments need approval if there are sales invoices with overdue amount. Default value is retireved from setting: DefaultCreateValueCUSFieldDUEAPPROVE"
                          },
                          "specialHandling": {
                            "type": "object",
                            "properties": {
                              "specialHandlingId": {
                                "minimum": 100000,
                                "pattern": "",
                                "type": "integer",
                                "description": "Special handling identifier",
                                "format": "int32"
                              }
                            },
                            "description": "Special handling for departing shipments (to this supplier)"
                          }
                        }
                      },
                      "invoicing": {
                        "type": "object",
                        "properties": {
                          "interestRate": {
                            "maxLength": 1000,
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "Interest rate used for sales invoices past duedate",
                            "format": "double"
                          },
                          "interestFeeAmount": {
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "Fixed interest fee used for the customer.",
                            "format": "double"
                          },
                          "salesInvoiceConsolidation": {
                            "pattern": "",
                            "type": "string",
                            "description": "Specifies whether or how often shipping advices that origins from this sales order will be consolidated when creating sales invoices."
                          },
                          "salesInvoiceConsolidationField": {
                            "pattern": "",
                            "type": "string",
                            "description": "Field name to group by when consolidating shipping advice items into sales invoices."
                          },
                          "salesInvoiceItemSortBy": {
                            "pattern": "",
                            "type": "string",
                            "description": "Field name to sort by when creating sales invoice items."
                          },
                          "sendReminders": {
                            "pattern": "",
                            "type": "boolean",
                            "description": "Set to false if reminder are not be sent to this customer. Default value is retireved from setting: DefaultCreateValueCUSFieldREMINDER"
                          }
                        }
                      },
                      "payment": {
                        "type": "object",
                        "properties": {
                          "paymentMethod": {
                            "pattern": "",
                            "type": "string",
                            "description": "Default payment method for the customer"
                          }
                        }
                      },
                      "accounting": {
                        "type": "object",
                        "properties": {
                          "creditLimit": {
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "The maximum amount that the customer may charge on a credit card or borrow from a financial institution.",
                            "format": "double"
                          },
                          "creditInsuranceAmount": {
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "Credit amount insured for the customer",
                            "format": "double"
                          },
                          "creditInsuranceCompany": {
                            "pattern": "",
                            "type": "string",
                            "description": "Insurance company used by the customer for credit insurance"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "OK" } }
      }
    },
    "/sales/orders/{salesOrderId}/items": {
      "get": {
        "tags": ["sales"],
        "summary": "List of all order items for specified sales order",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=1811&version=36"
        },
        "operationId": "sales_ListItemsForOrderById",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "description": "Sales order identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "minimum": 100000,
              "pattern": "",
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include domain descriptions for fields using domain values. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          },
          {
            "name": "$format",
            "in": "query",
            "description": "Format of the response",
            "required": true,
            "style": "form",
            "schema": { "enum": ["json", "xml"], "type": "string" }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limit the number of fields in the response",
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "$pageKey",
            "in": "query",
            "description": "Navigate to first-, previous, next- or last page in list",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$inlineCount",
            "in": "query",
            "description": "Set to 'allpages' to include total number of rows in the response.",
            "style": "form",
            "schema": { "enum": ["none", "allpages"], "type": "string" }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "Order the result",
            "style": "form",
            "schema": { "type": "string" }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Specifies number of rows to return in each page.",
            "style": "form",
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Used to add fields to the response",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": ["SalesOrderItem.EndCustomer"],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "salesOrderItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "salesOrderItemId": {
                            "type": "integer",
                            "description": "Sales order item identifier",
                            "format": "int32"
                          },
                          "type": {
                            "type": "integer",
                            "description": "Item type",
                            "format": "int32"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "description": "Line- or sequence number of the item. The LineNumber is used for sorting items in applications, prints, reports etc.",
                            "format": "int32"
                          },
                          "status": {
                            "type": "integer",
                            "description": "Status of the sales order item (0-9).",
                            "format": "int32"
                          },
                          "requestedDeliveryDate": {
                            "type": "string",
                            "description": "The delivery date as requested by the customer.",
                            "format": "date"
                          },
                          "confirmedDeliveryDate": {
                            "type": "string",
                            "description": "Confirmed date of delivery. Date of which the customer can expect the arriving goods",
                            "format": "date"
                          },
                          "customersReferenceNumber": {
                            "type": "string",
                            "description": "Customers item reference number. Typically to the customers internal system."
                          },
                          "customersProductName": {
                            "type": "string",
                            "description": "Customers internal name of the product. Retrieved from the product."
                          },
                          "productDescription": {
                            "type": "string",
                            "description": "Description of the item. If not specified, the description is by default copied from the product."
                          },
                          "note": {
                            "type": "string",
                            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
                          },
                          "discountPercent": {
                            "type": "number",
                            "description": "The discount in percent for this item.",
                            "format": "double"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "Number of units ordered",
                            "format": "double"
                          },
                          "remainingQuantity": {
                            "type": "number",
                            "description": "Remaining number of units to be forwarded.",
                            "format": "double"
                          },
                          "endCustomer": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "integer",
                                "description": "Customer identifier",
                                "format": "int32"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                              },
                              "firstName": {
                                "type": "string",
                                "description": "Secondary name of a company or firstname of a person"
                              },
                              "vATRegistrationNumber": {
                                "type": "string",
                                "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
                              },
                              "customerLink": {
                                "type": "string",
                                "description": "Customer reference"
                              }
                            },
                            "description": "End customer"
                          },
                          "price": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Three character code following the ISO 4217 standard"
                              },
                              "grossPrice": {
                                "type": "number",
                                "description": "Represents the price per unit before any discounting is applied.",
                                "format": "double"
                              },
                              "netPrice": {
                                "type": "number",
                                "description": "Final price per unit after deducting all discounts etc.",
                                "format": "double"
                              }
                            }
                          },
                          "totals": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Three character code following the ISO 4217 standard"
                              },
                              "grossAmount": {
                                "type": "number",
                                "description": "Represents the item amount before any discounts etc. is applied.",
                                "format": "double"
                              },
                              "netAmount": {
                                "type": "number",
                                "description": "Final item amount after deducting all discounts etc.",
                                "format": "double"
                              }
                            }
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "productId": {
                                "type": "integer",
                                "description": "Product identifier",
                                "format": "int32"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the product"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of product"
                              },
                              "manufacturer": {
                                "type": "object",
                                "properties": {
                                  "manufacturerId": {
                                    "type": "integer",
                                    "description": "Manufacturer identifier",
                                    "format": "int32"
                                  },
                                  "manufacturerLink": {
                                    "type": "string",
                                    "description": "Manufacturer reference"
                                  }
                                }
                              },
                              "productLink": {
                                "type": "string",
                                "description": "Product reference"
                              }
                            }
                          },
                          "recurringInvoicing": {
                            "type": "object",
                            "properties": {
                              "priceChangeAgreement": {
                                "type": "integer",
                                "description": "Defines if and how the recurring price can be updated",
                                "format": "int32"
                              },
                              "startDate": {
                                "type": "string",
                                "description": "Start date of subscription or rental item",
                                "format": "date"
                              },
                              "expectedEndDate": {
                                "type": "string",
                                "description": "Expected end date of subscription or rental item",
                                "format": "date"
                              },
                              "recurringPrice": {
                                "type": "object",
                                "properties": {
                                  "recurringPriceId": {
                                    "type": "integer",
                                    "description": "Recurring price indentifier",
                                    "format": "int32"
                                  },
                                  "recurringPriceLink": {
                                    "type": "string",
                                    "description": "Recurring price reference"
                                  }
                                }
                              }
                            }
                          },
                          "salesOrderItemLink": {
                            "type": "string",
                            "description": "Reference to the order item."
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Number of elements in the list, as defined in $top. Default is 10.",
                          "format": "int32"
                        },
                        "position": {
                          "type": "integer",
                          "description": "Position of the first element in the list",
                          "format": "int32"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Page index",
                          "format": "int32"
                        },
                        "firstPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to the first page in the list"
                        },
                        "firstPage": {
                          "type": "string",
                          "description": "Link to the first page in the list. $pageKey is set to FirstPageKey."
                        },
                        "previousPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to previous page in the list"
                        },
                        "previousPage": {
                          "type": "string",
                          "description": "Link to the previous page in the list. $pageKey is set to PreviousPageKey."
                        },
                        "nextPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to next page in the list"
                        },
                        "nextPage": {
                          "type": "string",
                          "description": "Link to the next page in the list. $pageKey is set to NextPageKey."
                        },
                        "lastPageKey": {
                          "type": "string",
                          "description": "Page key to use for navigating to last page in the list"
                        },
                        "lastPage": {
                          "type": "string",
                          "description": "Link to the last page in the list. $pageKey is set to LastPageKey."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Total number of records in the list. Use $inlinecount=allpages in the request uri to include this",
                          "format": "int32"
                        }
                      },
                      "description": "Detailed paging information for this list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["sales"],
        "summary": "Creates a new item in provided sales order.\r\n\r\nNote that Discount will be ignored when DiscountPercent is provided. \r\nNote also that Discount, DiscountPercent and GrossPrice will be ignored when GrossMargin is provided.",
        "externalDocs": {
          "url": "https://api.rambase.net/documentation?resourceno=1903&version=27"
        },
        "operationId": "sales_PostItemsForOrderById",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "description": "Sales order identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "minimum": 100000,
              "pattern": "",
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$db",
            "in": "query",
            "description": "Database of the company to request",
            "style": "form",
            "schema": { "maximum": 5, "type": "string" }
          },
          {
            "name": "$showCustomFields",
            "in": "query",
            "description": "Set to true to include/use custom fields. Default value is false.",
            "style": "form",
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "salesOrderItem": {
                    "required": ["quantity"],
                    "type": "object",
                    "properties": {
                      "type": {
                        "pattern": "",
                        "type": "integer",
                        "description": "Item type",
                        "format": "int32"
                      },
                      "requestedDeliveryDate": {
                        "pattern": "",
                        "type": "string",
                        "description": "The delivery date as requested by the customer.",
                        "format": "date"
                      },
                      "customersReferenceNumber": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers item reference number. Typically to the customers internal system."
                      },
                      "customersProductName": {
                        "pattern": "",
                        "type": "string",
                        "description": "Customers internal name of the product. Retrieved from the product."
                      },
                      "equivalentProductName": {
                        "pattern": "",
                        "type": "string",
                        "description": "Name of product with equivalent behavior and attributes. Can be used for same purpose. "
                      },
                      "requestedProductStructureRevision": {
                        "pattern": "",
                        "type": "string",
                        "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
                      },
                      "productDescription": {
                        "pattern": "",
                        "type": "string",
                        "description": "Description of the item. If not specified, the description is by default copied from the product."
                      },
                      "note": {
                        "pattern": "",
                        "type": "string",
                        "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
                      },
                      "grossMargin": {
                        "maxLength": 100,
                        "pattern": "",
                        "type": "number",
                        "description": "Gross margin of the item.",
                        "format": "double"
                      },
                      "discountPercent": {
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "",
                        "type": "number",
                        "description": "The discount in percent for this item.",
                        "format": "double"
                      },
                      "quantity": {
                        "minLength": 0,
                        "pattern": "",
                        "type": "number",
                        "description": "Number of units ordered",
                        "format": "double"
                      },
                      "warranty": {
                        "type": "object",
                        "properties": {
                          "warrantyExpirationDate": {
                            "pattern": "",
                            "type": "string",
                            "description": "Date of warranty expiration.",
                            "format": "date"
                          }
                        }
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "grossPrice": {
                            "pattern": "",
                            "type": "number",
                            "description": "Represents the price per unit before any discounting is applied.",
                            "format": "double"
                          },
                          "discount": {
                            "minLength": 0,
                            "pattern": "",
                            "type": "number",
                            "description": "The discount for the item.",
                            "format": "double"
                          }
                        }
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "locationId": {
                            "minimum": 10000,
                            "pattern": "",
                            "type": "integer",
                            "description": "Location identifier",
                            "format": "int32"
                          }
                        },
                        "description": "Location of general ledger posting item."
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "employeeId": {
                            "minimum": 100,
                            "pattern": "",
                            "type": "integer",
                            "description": "Employee identifier",
                            "format": "int32"
                          }
                        },
                        "description": "Reference to the seller of the item"
                      },
                      "product": {
                        "required": ["productId"],
                        "type": "object",
                        "properties": {
                          "productId": {
                            "pattern": "",
                            "type": "integer",
                            "description": "Product identifier",
                            "format": "int32"
                          }
                        }
                      },
                      "landedCost": {
                        "type": "object",
                        "properties": {
                          "purchaseCurrency": {
                            "pattern": "",
                            "type": "string",
                            "description": "Purchase currency is the currency this product normally is purchased in. This is also the base currency used in the gross margin calculation. By default the purchase currency is retrieved from the product."
                          },
                          "purchaseExchangeRate": {
                            "pattern": "",
                            "type": "number",
                            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
                            "format": "double"
                          },
                          "derivedFrom": {
                            "type": "object",
                            "properties": {
                              "purchaseQuoteItemId": {
                                "minimum": 1,
                                "pattern": "",
                                "type": "integer",
                                "description": "Purchase quote item identifier",
                                "format": "int32"
                              },
                              "purchaseQuote": {
                                "type": "object",
                                "properties": {
                                  "purchaseQuoteId": {
                                    "minimum": 100000,
                                    "pattern": "",
                                    "type": "integer",
                                    "description": "Purchase quote identifier",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "recurringInvoicing": {
                        "type": "object",
                        "properties": {
                          "priceChangeAgreement": {
                            "type": "integer",
                            "description": "Defines if and how the recurring price can be updated",
                            "format": "int32"
                          },
                          "startDate": {
                            "type": "string",
                            "description": "Start date of subscription or rental item",
                            "format": "date"
                          },
                          "estimatedEndDate": {
                            "type": "string",
                            "description": "Expected end date of subscription or rental item",
                            "format": "date"
                          },
                          "recurringPrice": {
                            "type": "object",
                            "properties": {
                              "recurringPriceId": {
                                "type": "integer",
                                "description": "Recurring price indentifier",
                                "format": "int32"
                              },
                              "recurringPriceLink": {
                                "type": "string",
                                "description": "Recurring price reference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "OK" } }
      }
    }
  },
  "components": {
    "schemas": {
      "Paging": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "Number of elements in the list, as defined in $top. Default is 10.",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "description": "Position of the first element in the list",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Page index",
            "format": "int32"
          },
          "firstPageKey": {
            "type": "string",
            "description": "Page key to use for navigating to the first page in the list"
          },
          "firstPage": {
            "type": "string",
            "description": "Link to the first page in the list. $pageKey is set to FirstPageKey."
          },
          "previousPageKey": {
            "type": "string",
            "description": "Page key to use for navigating to previous page in the list"
          },
          "previousPage": {
            "type": "string",
            "description": "Link to the previous page in the list. $pageKey is set to PreviousPageKey."
          },
          "nextPageKey": {
            "type": "string",
            "description": "Page key to use for navigating to next page in the list"
          },
          "nextPage": {
            "type": "string",
            "description": "Link to the next page in the list. $pageKey is set to NextPageKey."
          },
          "lastPageKey": {
            "type": "string",
            "description": "Page key to use for navigating to last page in the list"
          },
          "lastPage": {
            "type": "string",
            "description": "Link to the last page in the list. $pageKey is set to LastPageKey."
          },
          "size": {
            "type": "integer",
            "description": "Total number of records in the list. Use $inlinecount=allpages in the request uri to include this",
            "format": "int32"
          }
        },
        "description": "Detailed paging information for this list."
      },
      "Price": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "startingBid": {
            "type": "number",
            "description": "The lowest opening bid that will be accepted.",
            "format": "double"
          },
          "currentBid": {
            "type": "number",
            "description": "Current bid/price",
            "format": "double"
          },
          "estimated": {
            "type": "number",
            "description": "Appraisal/estimation of price",
            "format": "double"
          }
        }
      },
      "BiddingPeriod": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "string",
            "description": "Start time of bidding. Can be earlier than podium start time.",
            "format": "date-time"
          },
          "podiumBiddingEstimatedAt": {
            "type": "string",
            "description": "Estimated start time of podium bidding",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "description": "End time of bidding on this lot",
            "format": "date-time"
          }
        }
      },
      "MainImage": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "string",
            "description": "File identifier"
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File reference"
          }
        },
        "description": "Main image of lot. Other images can be found in the details view."
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Catalog the lot can be found in"
          },
          "itemNumber": {
            "type": "integer",
            "description": "The item number the product has in the catalog",
            "format": "int32"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        },
        "description": "The supplier/owner/seller of the lot."
      },
      "Customer": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "SalesOrderItem": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "salesOrderId": {
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          },
          "salesOrderLink": {
            "type": "string",
            "description": "Sales order reference"
          },
          "itemId": {
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          },
          "itemLink": {
            "type": "string",
            "description": "Reference to the order item."
          }
        }
      },
      "Bidder": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "The person placing the bid. Either a contact related to the customer, or an employee",
            "format": "int32"
          },
          "objectType": {
            "type": "string",
            "description": "The person placing the bid. Either a contact related to the customer, or an employee"
          },
          "lastname": {
            "type": "string",
            "description": "Lastname of the bidder"
          },
          "firstname": {
            "type": "string",
            "description": "Firstname of the bidder"
          },
          "objectLink": {
            "type": "string",
            "description": "The person placing the bid. Either a contact related to the customer, or an employee"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "description": "Country identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of country" },
          "countryCode": {
            "type": "string",
            "description": "Country code the postal code belongs to"
          },
          "countryLink": {
            "type": "string",
            "description": "Country reference"
          }
        }
      },
      "InventoryOwnership": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        },
        "description": "The company which is having complete legal control of the inventory.\r\n"
      },
      "PublicHoliday": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Country code of the day detail item"
          },
          "name": {
            "type": "string",
            "description": "Value of the day detail item"
          }
        }
      },
      "AssociatedCompanySettingDefintion": {
        "type": "object",
        "properties": {
          "companySettingDefinitionId": {
            "type": "integer",
            "description": "Company setting definition identifier",
            "format": "int32"
          },
          "companySettingDefinitionLink": {
            "type": "string",
            "description": "Company setting definition reference"
          }
        },
        "description": "Company setting definition associated with the notification definiton. Through the company setting, you might be able to disable this kind of notifications."
      },
      "SubModule": {
        "type": "object",
        "properties": {
          "subModuleId": {
            "type": "integer",
            "description": "Submodule identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the submodule" },
          "module": {
            "type": "object",
            "properties": {
              "moduleId": {
                "type": "integer",
                "description": "Module identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the module" },
              "moduleLink": {
                "type": "string",
                "description": "Module reference"
              }
            }
          },
          "subModuleLink": {
            "type": "string",
            "description": "Submodule reference"
          }
        }
      },
      "ParentCompanySettingDefinition": {
        "type": "object",
        "properties": {
          "companySettingDefinitionId": {
            "type": "integer",
            "description": "Company setting definition identifier",
            "format": "int32"
          },
          "companySettingDefinitionLink": {
            "type": "string",
            "description": "Company setting definition reference"
          }
        }
      },
      "DomainValueList": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Object/archive/context of the DOV"
          },
          "field": { "type": "string", "description": "Fieldname of the DOV" }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "moduleId": {
            "type": "integer",
            "description": "Module identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the module" },
          "translatedName": {
            "type": "string",
            "description": "Translated name of the module. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
          },
          "description": {
            "type": "string",
            "description": "Descrtiption of the module"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Translated description of the module. The language used is specified either in $lang or by user settings. If translated description doesn't exist in desired language, english will be used."
          },
          "moduleLink": { "type": "string", "description": "Module reference" }
        }
      },
      "ViewPermission": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission identifier. Optional. Set this if the setting is secret, e.g. not visible for customers. NOTE: If the setting is read in an application the user must have this permission if assigned.",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the permission" },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        }
      },
      "UpdatePermission": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission identifier. Required for active settings. User must have this permission to be allowed to update the value of this setting.",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the permission" },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        }
      },
      "CompanySetting": {
        "type": "object",
        "properties": {
          "companySettingId": {
            "type": "integer",
            "description": "Company setting identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the company setting value",
            "format": "int32"
          },
          "value": { "type": "string", "description": "Company setting value" },
          "companySettingDefinition": {
            "type": "object",
            "properties": {
              "companySettingDefinitionId": {
                "type": "integer",
                "description": "Company setting definition identifier",
                "format": "int32"
              },
              "key": {
                "type": "string",
                "description": "Setting name used to reference the setting"
              },
              "name": {
                "type": "string",
                "description": "Short name/description of the setting definition"
              },
              "translatedName": {
                "type": "string",
                "description": "Name translated to selected language. If no translation exists for the given langauage, english name will show."
              },
              "description": {
                "type": "string",
                "description": "Descrtiption of the setting definition"
              },
              "translatedDescription": {
                "type": "string",
                "description": "Description translated to selected language. If no translation exists for the given langauage, english description will show."
              },
              "defaultValue": {
                "type": "string",
                "description": "Default value if setting not set for company"
              },
              "dataType": {
                "type": "string",
                "description": "Allowed values for setting. Used for validation of input from user."
              },
              "minimumValue": {
                "type": "number",
                "description": "For data type integer or decimal a minimum value can be specified, e.g. if a value range is allowed.",
                "format": "double"
              },
              "maximumValue": {
                "type": "number",
                "description": "For data type integer or decimal a maximum value can be specified, e.g. if a value range is allowed.",
                "format": "double"
              },
              "isRequired": {
                "type": "boolean",
                "description": "Flag if setting is required/must be set before using system. If this is a sub-setting, this settings must be set when the parent setting is turned on. The user must activate this setting (a company setting value must exist for this setting). If a default value is also specified, that will actually be a suggested value, the setting must still be activated."
              },
              "numberOfChildSettings": {
                "type": "integer",
                "description": "Number of company setting definitions this setting is parent for.",
                "format": "int32"
              },
              "subModule": {
                "type": "object",
                "properties": {
                  "subModuleId": {
                    "type": "integer",
                    "description": "Submodule identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the submodule"
                  },
                  "module": {
                    "type": "object",
                    "properties": {
                      "moduleId": {
                        "type": "integer",
                        "description": "Module identifier",
                        "format": "int32"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the module"
                      },
                      "moduleLink": {
                        "type": "string",
                        "description": "Module reference"
                      }
                    }
                  },
                  "subModuleLink": {
                    "type": "string",
                    "description": "Submodule reference"
                  }
                }
              },
              "parentCompanySettingDefinition": {
                "type": "object",
                "properties": {
                  "companySettingDefinitionId": {
                    "type": "integer",
                    "description": "Company setting definition identifier",
                    "format": "int32"
                  },
                  "companySettingDefinitionLink": {
                    "type": "string",
                    "description": "Company setting definition reference"
                  }
                }
              },
              "domainValueList": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "description": "Object/archive/context of the DOV"
                  },
                  "field": {
                    "type": "string",
                    "description": "Fieldname of the DOV"
                  }
                }
              },
              "companySettingDefinitionLink": {
                "type": "string",
                "description": "Company setting definition link"
              }
            }
          }
        }
      },
      "PrintConnector": {
        "type": "object",
        "properties": {
          "printConnectorId": {
            "type": "integer",
            "description": "Print connector identifier",
            "format": "int32"
          },
          "printConnectorLink": {
            "type": "string",
            "description": "Reference to the print connector"
          }
        }
      },
      "Submodule": {
        "type": "object",
        "properties": {
          "submoduleId": {
            "type": "integer",
            "description": "Submodule identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the submodule",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the submodule" },
          "translatedName": {
            "type": "string",
            "description": "Translated name of the submodule. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
          },
          "description": {
            "type": "string",
            "description": "Description of the submodule"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Translated description of the submodule. The language used is specified either in $lang or by user settings. If translated description doesn't exist in desired language, english will be used."
          },
          "module": {
            "type": "object",
            "properties": {
              "moduleId": {
                "type": "integer",
                "description": "Module identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the module" },
              "translatedName": {
                "type": "string",
                "description": "Translated name of the module. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
              },
              "description": {
                "type": "string",
                "description": "Descrtiption of the module"
              },
              "translatedDescription": {
                "type": "string",
                "description": "Translated description of the module. The language used is specified either in $lang or by user settings. If translated description doesn't exist in desired language, english will be used."
              },
              "moduleLink": {
                "type": "string",
                "description": "Module reference"
              }
            }
          },
          "submoduleLink": {
            "type": "string",
            "description": "Submodule reference"
          }
        }
      },
      "ApproverAssignment": {
        "type": "object",
        "properties": {
          "approverAssignmentId": {
            "type": "integer",
            "description": "Approver identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Approver assignment status",
            "format": "int32"
          },
          "isDefaultApprover": {
            "type": "boolean",
            "description": "Is default approver"
          },
          "description": {
            "type": "string",
            "description": "Name of user or role"
          },
          "comment": {
            "type": "string",
            "description": "Comment why the user/role has been assigned to the approval rule"
          },
          "validity": {
            "type": "object",
            "properties": {
              "effectiveDate": {
                "type": "string",
                "description": "Valid from",
                "format": "date"
              },
              "expirationDate": {
                "type": "string",
                "description": "Valid to",
                "format": "date"
              }
            }
          },
          "approver": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            },
            "description": "Link to approver role or user"
          }
        }
      },
      "FileType": {
        "type": "object",
        "properties": {
          "fileTypeId": {
            "type": "integer",
            "description": "Reference to the file type this requirement will be fulfilled by.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Strong typed name for a file type"
          },
          "fileTypeLink": {
            "type": "string",
            "description": "Full doc reference to the FileType id"
          }
        }
      },
      "CreatedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
      },
      "ResponsibleRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the role" },
          "description": {
            "type": "string",
            "description": "Description of the role"
          },
          "roleLink": { "type": "string", "description": "Role reference" }
        },
        "description": "Role (department etc.) responsible for a task"
      },
      "AssignedTo": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The userId of the person this task is assigned to (responsible for doing the work)"
      },
      "DefaultEmail": {
        "type": "object",
        "properties": {
          "emailId": {
            "type": "integer",
            "description": "Email identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "type": { "type": "string", "description": "Type of email" },
          "address": { "type": "string", "description": "The email address" },
          "emailLink": { "type": "string", "description": "Email reference" }
        }
      },
      "DefaultPhone": {
        "type": "object",
        "properties": {
          "phoneId": {
            "type": "integer",
            "description": "Phone identifier",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number"
          },
          "type": { "type": "string", "description": "Type of phone " },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "phoneLink": { "type": "string", "description": "Phone reference" }
        }
      },
      "Privacy": {
        "type": "object",
        "properties": {
          "hasAcceptedPrivacyPolicy": {
            "type": "boolean",
            "description": "Privacy policy accepted. Yes or no value."
          },
          "legalBasisForDataProcessing": {
            "type": "integer",
            "description": "The legal basis for processing contact's data",
            "format": "int32"
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "description": "Consent to marketing. Yes or no value."
          }
        }
      },
      "Regarding": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "name": {
            "type": "string",
            "description": "Name of the customer/supplier, or last name if it is a person. "
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer/supplier"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The customer/supplier of the relationship"
      },
      "Sender": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "Email address of the sender"
          },
          "description": {
            "type": "string",
            "description": "Description of sender"
          },
          "objectReference": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            },
            "description": "Reference to the contact/supplier/employee/customer who sent the email"
          }
        },
        "description": "Reference to the contact/supplier/employee/customer who sent the email"
      },
      "FileFolder": {
        "type": "object",
        "properties": {
          "fileFolderId": {
            "type": "integer",
            "description": "File folder id for a spesific file container or forlder.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Verbose folder text in english."
          },
          "status": {
            "type": "integer",
            "description": "The current status of this folder . Statuses can be: Edit, protected or obsolete ",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when the folder was created",
            "format": "date-time"
          },
          "fileFolderType": {
            "type": "object",
            "properties": {
              "fileFolderTypeId": {
                "type": "integer",
                "description": "Unique identificator for a folder type",
                "format": "int32"
              },
              "isReadOnly": {
                "type": "boolean",
                "description": "The type of folder. Folder types differs in system owned which are read only, and work folders. Work folders are the type of open folders for temporary storing files in."
              },
              "fileFolderTypeLink": {
                "type": "string",
                "description": "Unique identificator for a folder type"
              }
            },
            "description": "The type of folder. Folder types differs in system owned which are read only, and work folders. Work folders are the type of open folders for temporary storing files in."
          },
          "parentFileFolder": {
            "type": "object",
            "properties": {
              "fileFolderId": {
                "type": "integer",
                "description": "File folders can be nested. The parent folderid is used to place the current folder in relation to its parent.",
                "format": "int32"
              },
              "fileFolderLink": {
                "type": "string",
                "description": "File folder id for a spesific file container or forlder."
              }
            }
          },
          "owner": {
            "type": "object",
            "properties": {
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          },
          "fileFolderLink": {
            "type": "string",
            "description": "File folder id for a spesific file container or forlder."
          }
        }
      },
      "ChangedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "EmployeeId of the employee making the change"
      },
      "Regarding1": {
        "type": "object",
        "properties": {
          "objectType": { "type": "string", "description": "Type of object" },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        },
        "description": "Owning object. Used to link a requirement to a operations or other objects that has documentation requirements."
      },
      "Context": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            },
            "description": "Requirement is based on matching ARTIT. If this field is used, a file linked to SSA.ITM must be matching this artit."
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Requirement is based on matching OPRNO. If this field is used, a file linked to PWO with this OPR in kit item must be matching this OPRNO."
          },
          "purchaseOrderItem": {
            "type": "object",
            "properties": {
              "purchaseOrderItemId": {
                "type": "integer",
                "description": "Item-/line-number of the purchase order",
                "format": "int32"
              },
              "purchaseOrder": {
                "type": "object",
                "properties": {
                  "purchaseOrderId": {
                    "type": "integer",
                    "description": "Purchase order identifier",
                    "format": "int32"
                  },
                  "purchaseOrderLink": {
                    "type": "string",
                    "description": "Purchase order reference"
                  }
                },
                "description": "Value set from originating purchase ORDERID"
              },
              "purchaseOrderItemLink": {
                "type": "string",
                "description": "Purchase order item reference"
              }
            },
            "description": "Value set from originating purchase ORDERITEMID"
          },
          "salesOrderItem": {
            "type": "object",
            "properties": {
              "salesOrderItemId": {
                "type": "integer",
                "description": "Sales order item identifier",
                "format": "int32"
              },
              "salesOrder": {
                "type": "object",
                "properties": {
                  "salesOrderId": {
                    "type": "integer",
                    "description": "Sales order identifier",
                    "format": "int32"
                  },
                  "salesOrderLink": {
                    "type": "string",
                    "description": "Sales order reference"
                  }
                },
                "description": "Value set from the originating sales order ORDERID"
              },
              "salesOrderItemLink": {
                "type": "string",
                "description": "Reference to the order item."
              }
            },
            "description": "Value set from the originating sales order item ORDERITMID"
          }
        }
      },
      "StopEvent": {
        "type": "object",
        "properties": {
          "eventTypeId": {
            "type": "integer",
            "description": "RamBase event type identifier",
            "format": "int32"
          },
          "eventTypeLink": {
            "type": "string",
            "description": "RamBase event type reference"
          }
        },
        "description": "Optional event type which requires file requirement to be met (ProductionOperationCompleted, ProductActivated). DOV"
      },
      "File": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of file"
          },
          "searchTag": {
            "type": "string",
            "description": "Search words that can be used to find and recognize files in search"
          },
          "revision": {
            "type": "string",
            "description": "The file revision is a freetext field and can be used in production for drawings and procedures etc. The revision field can only be set when creating a file, and never changed. If a file gets a new revision, a new file should be uploaded."
          },
          "fileType": {
            "type": "object",
            "properties": {
              "fileTypeId": {
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Strong typed name for a file type"
              },
              "fileTypeLink": {
                "type": "string",
                "description": "Full doc reference to the FileType id"
              }
            }
          },
          "highestFileVersion": {
            "type": "object",
            "properties": {
              "fileVersionId": {
                "type": "integer",
                "description": "Version of the file ",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of file version",
                "format": "int32"
              },
              "filename": {
                "type": "string",
                "description": "Filename to display for the file version. Will be used when downloading the file."
              },
              "fileExtension": {
                "type": "string",
                "description": "Extension of the file (ex. jpg)"
              },
              "changeDescription": {
                "type": "string",
                "description": "Version description of the file version"
              },
              "createdAt": {
                "type": "string",
                "description": "Date and time when this version was created",
                "format": "date-time"
              },
              "hashCode": {
                "type": "string",
                "description": "Unique hash to identify and verify a file"
              },
              "internalPath": {
                "type": "string",
                "description": "Physical file storage path."
              },
              "fileVersionLink": {
                "type": "string",
                "description": "File version reference"
              }
            }
          },
          "fileLink": { "type": "string", "description": "File reference" }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "noteId": {
            "type": "integer",
            "description": "Note identifier",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "description": "The subject and title of a note"
          },
          "status": {
            "type": "integer",
            "description": "The status of a note. 1 = edit, 4 = main, 9 = obsolete",
            "format": "int32"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "True if a note is private for the person who created it"
          },
          "lastChangedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The person a note was last changed by"
          },
          "lastChangedAt": {
            "type": "string",
            "description": "The date this note was last changed",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time this note was created",
            "format": "date-time"
          },
          "text": { "type": "string", "description": "The text body of a note" }
        }
      },
      "CompletedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "The user who completed the task"
      },
      "CreatedInCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        },
        "description": "The compnay the task was created in"
      },
      "Process": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "integer",
            "description": "Unique identifier for Process",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of this process"
          },
          "deadlineAt": {
            "type": "string",
            "description": "Date and time for all the Tasks under a process to be completed",
            "format": "date-time"
          },
          "processLink": {
            "type": "string",
            "description": "Task-process reference "
          }
        },
        "description": "Information about the process this task belongs to."
      },
      "TaskTemplate": {
        "type": "object",
        "properties": {
          "taskTemplateId": {
            "type": "integer",
            "description": "TaskTemplate unique identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of a task template",
            "format": "int32"
          },
          "deadlineOffset": {
            "type": "integer",
            "description": "Days offset to the Process DEADLINE. If this is set to 4 (just an example), the deadline of this task will be calculated to 4 days before the process deadline.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the task template"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "-True if the task template is only for the owner"
          },
          "priority": {
            "type": "integer",
            "description": "The task template priority",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title of a task template"
          },
          "type": { "type": "string", "description": "The type of the task" },
          "assignedTo": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The userId of the person this task is assigned to (responsible for doing the work)"
          },
          "taskProcessTemplate": {
            "type": "object",
            "properties": {
              "taskProcessTemplateId": {
                "type": "integer",
                "description": "Unique identifier for task process template",
                "format": "int32"
              },
              "taskProcessTemplateLink": {
                "type": "string",
                "description": "Unique identifier for task process template"
              }
            },
            "description": "refers to the process template this task template belongs to"
          },
          "responsibleRole": {
            "type": "object",
            "properties": {
              "roleId": {
                "type": "integer",
                "description": "Role identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the role" },
              "description": {
                "type": "string",
                "description": "Description of the role"
              },
              "roleLink": { "type": "string", "description": "Role reference" }
            },
            "description": "Role (department etc.) responsible for a task"
          },
          "taskTemplateLink": {
            "type": "string",
            "description": "Reference to the task template"
          }
        }
      },
      "ObjectReference": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the object reference"
          },
          "object": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "status": {
                "type": "integer",
                "description": "Status of the object",
                "format": "int32"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "objectLink": {
                "type": "string",
                "description": "Object that is connected/referencing the contact. Typically a customer or a supplier."
              }
            }
          }
        }
      },
      "ObjectReference1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "Reference to the contact/supplier/employee/customer who sent the email"
      },
      "Translation": {
        "type": "object",
        "properties": {
          "translationId": {
            "type": "integer",
            "description": "Translation identifier",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language of the translation"
          },
          "name": {
            "type": "string",
            "description": "Translation of the name"
          },
          "description": {
            "type": "string",
            "description": "Translation of the description"
          },
          "translationLink": {
            "type": "string",
            "description": "Reference to the translation of the company setting definition"
          }
        }
      },
      "Assignee": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "User id of assignee. Indicates the next action user id."
      },
      "Approval": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status will indicate the current level of approval and general readiness of a file\r\n4: Pending review.\r\n5: Partially approved.\r\n7: Declined approval\r\n8: All required approvals done.\r\n9: No approvals needed.",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "description": "Deadline date for a file to be approved",
            "format": "date"
          },
          "documentController": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "User id of document controller"
          }
        }
      },
      "ExternalOwner": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "firstName": {
            "type": "string",
            "description": "First name of the customer/supplier"
          },
          "name": {
            "type": "string",
            "description": "Name of the customer/supplier, or last name if it is a person. "
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "CurrentUserPermissions": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "description": "Permission to view the contents of a file. This permission does not inhibit accessibility to see metadata for a file, such as filename, searchtags etc."
          },
          "canWrite": {
            "type": "boolean",
            "description": "Permission to make a new version of a file. This permission deos not inhibit a user from updating a files metadata such as filename and searhtags etc"
          },
          "canDetach": {
            "type": "boolean",
            "description": "Permission to detach a file from its RamBase Object."
          }
        }
      },
      "Certification": {
        "type": "object",
        "properties": {
          "issuedCertificateId": {
            "type": "integer",
            "description": "Issued certificate item identifier",
            "format": "int32"
          },
          "numberOfAttachments": {
            "type": "integer",
            "description": "The number of attachments this object has.",
            "format": "int32"
          },
          "certificate": {
            "type": "object",
            "properties": {
              "certificateId": {
                "type": "integer",
                "description": "Certificate identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of certificate"
              },
              "issuer": {
                "type": "string",
                "description": "Issuer of certificate"
              },
              "certificateLink": {
                "type": "string",
                "description": "Certificate reference"
              }
            }
          },
          "issuedCertificateLink": {
            "type": "string",
            "description": "Acquired certificate item link"
          }
        },
        "description": "Reference to the certificate of the uploader"
      },
      "File1": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of file"
          },
          "searchTag": {
            "type": "string",
            "description": "Search words that can be used to find and recognize files in search"
          },
          "revision": {
            "type": "string",
            "description": "The file revision is a freetext field and can be used in production for drawings and procedures etc. The revision field can only be set when creating a file, and never changed. If a file gets a new revision, a new file should be uploaded."
          },
          "fileType": {
            "type": "object",
            "properties": {
              "fileTypeId": {
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Strong typed name for a file type"
              },
              "fileTypeLink": {
                "type": "string",
                "description": "Full doc reference to the FileType id"
              }
            }
          },
          "fileLink": { "type": "string", "description": "File reference" }
        }
      },
      "Entity": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
      },
      "Employee": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "Company setting definition tag identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Setting definition tag. String reference to value of a domain value."
          },
          "tagLink": {
            "type": "string",
            "description": "Fulle record reference to a company setting definition and a tag"
          }
        }
      },
      "Entity1": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of a role or user" },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The entity holding the permission. Can be either role (ROT) or employee (PER). "
      },
      "Company": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        }
      },
      "TaskProcessTemplate": {
        "type": "object",
        "properties": {
          "taskProcessTemplateId": {
            "type": "integer",
            "description": "Unique identifier for task process template",
            "format": "int32"
          },
          "taskProcessTemplateLink": {
            "type": "string",
            "description": "Unique identifier for task process template"
          }
        },
        "description": "refers to the process template this task template belongs to"
      },
      "Communication": {
        "type": "object",
        "properties": {
          "communicationId": {
            "type": "integer",
            "description": "Communication identifier",
            "format": "int32"
          },
          "communicationType": {
            "type": "string",
            "description": "Communication type (EMAIL or PHONE)"
          },
          "communicationDescription": {
            "type": "string",
            "description": "Description of communication type. Ex. PRIVATE, HOME, BUSINESS"
          },
          "communicationDetails": {
            "type": "string",
            "description": "Details of the email or phone"
          }
        }
      },
      "SharedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "PID for the person who created the share"
      },
      "FilePermission": {
        "type": "object",
        "properties": {
          "filePermissionId": {
            "type": "integer",
            "description": "Uniqe identificator for a file type permission.",
            "format": "int32"
          },
          "entityDescription": {
            "type": "string",
            "description": "Descriptive name for the permission entity"
          },
          "entity": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canRead": {
            "type": "boolean",
            "description": "Permission to view the contents of a file. This permission does not inhibit accessibility to see metadata for a file, such as filename, searchtags etc."
          },
          "canWrite": {
            "type": "boolean",
            "description": "Permission to make a new version of a file. This permission deos not inhibit a user from updating a files metadata such as filename and searhtags etc"
          },
          "canDetach": {
            "type": "boolean",
            "description": "Permission to detach a file from its RamBase Object."
          },
          "filePermissionLink": {
            "type": "string",
            "description": "Full id reference and object name to this permission"
          }
        }
      },
      "FileVersion": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "integer",
            "description": "Version of the file ",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of file version",
            "format": "int32"
          },
          "filename": {
            "type": "string",
            "description": "Filename to display for the file version. Will be used when downloading the file."
          },
          "fileExtension": {
            "type": "string",
            "description": "Extension of the file (ex. jpg)"
          },
          "documentReference": {
            "type": "string",
            "description": "This field is a freetext field that is maintained by user input and is intended to reflect the file contents identification reference for better document recognition purposes."
          },
          "internalFilename": {
            "type": "string",
            "description": "The internal filename is created automatically based on the ruleset defined for the FileType. The ruleset consists of text and data macros that are combined to create an internal filename when a file is first uploaded. Data macros are only included in the filename if the connected file object matches the object types specified in the filetype ruleset."
          },
          "changeDescription": {
            "type": "string",
            "description": "Version description of the file version"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when this version was created",
            "format": "date-time"
          },
          "hashCode": {
            "type": "string",
            "description": "Unique hash to identify and verify a file"
          },
          "fileSize": {
            "type": "integer",
            "description": "Size of the file in bytes",
            "format": "int32"
          },
          "internalPath": {
            "type": "string",
            "description": "Physical file storage path."
          },
          "pdfInternalPath": {
            "type": "string",
            "description": "Physical file storage path for the pdf shadow file."
          },
          "downloadUri": {
            "type": "string",
            "description": "The url to download a file"
          },
          "pdfDownloadUri": {
            "type": "string",
            "description": "The url to download the pdf shadow file"
          },
          "isInternal": {
            "type": "boolean",
            "description": "Flag to indicate that a file is for inhouse use only. Not to be sent to customers or suppliers."
          },
          "assignee": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "User id of assignee. Indicates the next action user id."
          },
          "approval": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "Status will indicate the current level of approval and general readiness of a file\r\n4: Pending review.\r\n5: Partially approved.\r\n7: Declined approval\r\n8: All required approvals done.\r\n9: No approvals needed.",
                "format": "int32"
              },
              "deadline": {
                "type": "string",
                "description": "Deadline date for a file to be approved",
                "format": "date"
              },
              "documentController": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "description": "User identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the user"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user"
                  },
                  "userLink": {
                    "type": "string",
                    "description": "User reference"
                  }
                },
                "description": "User id of document controller"
              }
            }
          },
          "externalOwner": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "firstName": {
                "type": "string",
                "description": "First name of the customer/supplier"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer/supplier, or last name if it is a person. "
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "currentUserPermissions": {
            "type": "object",
            "properties": {
              "canRead": {
                "type": "boolean",
                "description": "Permission to view the contents of a file. This permission does not inhibit accessibility to see metadata for a file, such as filename, searchtags etc."
              },
              "canWrite": {
                "type": "boolean",
                "description": "Permission to make a new version of a file. This permission deos not inhibit a user from updating a files metadata such as filename and searhtags etc"
              },
              "canDetach": {
                "type": "boolean",
                "description": "Permission to detach a file from its RamBase Object."
              }
            }
          },
          "certification": {
            "type": "object",
            "properties": {
              "issuedCertificateId": {
                "type": "integer",
                "description": "Issued certificate item identifier",
                "format": "int32"
              },
              "numberOfAttachments": {
                "type": "integer",
                "description": "The number of attachments this object has.",
                "format": "int32"
              },
              "certificate": {
                "type": "object",
                "properties": {
                  "certificateId": {
                    "type": "integer",
                    "description": "Certificate identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of certificate"
                  },
                  "issuer": {
                    "type": "string",
                    "description": "Issuer of certificate"
                  },
                  "certificateLink": {
                    "type": "string",
                    "description": "Certificate reference"
                  }
                }
              },
              "issuedCertificateLink": {
                "type": "string",
                "description": "Acquired certificate item link"
              }
            },
            "description": "Reference to the certificate of the uploader"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "file": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "description": "Description of file"
              },
              "searchTag": {
                "type": "string",
                "description": "Search words that can be used to find and recognize files in search"
              },
              "revision": {
                "type": "string",
                "description": "The file revision is a freetext field and can be used in production for drawings and procedures etc. The revision field can only be set when creating a file, and never changed. If a file gets a new revision, a new file should be uploaded."
              },
              "fileType": {
                "type": "object",
                "properties": {
                  "fileTypeId": {
                    "type": "integer",
                    "description": "Reference to the file type this requirement will be fulfilled by.",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Strong typed name for a file type"
                  },
                  "fileTypeLink": {
                    "type": "string",
                    "description": "Full doc reference to the FileType id"
                  }
                }
              },
              "fileLink": { "type": "string", "description": "File reference" }
            }
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File version reference"
          }
        }
      },
      "ChecklistItem": {
        "type": "object",
        "properties": {
          "checklistItemId": {
            "type": "integer",
            "description": "Unique identifier for a file type approval checklist",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time this checkpoint bullet or approval type was created",
            "format": "date-time"
          },
          "descripton": {
            "type": "string",
            "description": "Descriptive checklist bulletpoint"
          },
          "exclusivelyFor": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "firstName": {
                "type": "string",
                "description": "First name of the customer/supplier"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer/supplier, or last name if it is a person. "
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "checklistItemLink": {
            "type": "string",
            "description": "Check list or approval type full docid reference"
          }
        }
      },
      "FileRequirementTrigger": {
        "type": "object",
        "properties": {
          "fileRequirementTriggerId": {
            "type": "integer",
            "description": "item identificator for requirements",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of file requirement template. Will be copied when creating file requirements and planned file requirements"
          },
          "createdAt": {
            "type": "string",
            "description": "Create stamp",
            "format": "date-time"
          },
          "requiredForMRB": {
            "type": "boolean",
            "description": "Required in manufacturing record book (MRB)\r\n"
          },
          "triggerEvent": {
            "type": "object",
            "properties": {
              "eventTypeId": {
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              },
              "eventTypeLink": {
                "type": "string",
                "description": "RamBase event type reference"
              }
            },
            "description": "Event type which trigger creation of file requirement (ProductionWorkOrderCreated, ProductCreated, etc). DOV"
          },
          "triggerRestrictions": {
            "type": "object",
            "properties": {
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "References ART for creating RQMs (requirements) in a production structure"
              },
              "productionOperation": {
                "type": "object",
                "properties": {
                  "productionOperationId": {
                    "type": "integer",
                    "description": "Production operation identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of production operation"
                  },
                  "productionOperationLink": {
                    "type": "string",
                    "description": "Production operation reference"
                  }
                },
                "description": "Operation id that will create a requirement for this file type"
              },
              "productionResource": {
                "type": "object",
                "properties": {
                  "productionResourceId": {
                    "type": "integer",
                    "description": "Production resource identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of  production resource"
                  },
                  "productionResourceLink": {
                    "type": "string",
                    "description": "Production resource reference"
                  }
                }
              }
            }
          },
          "stopEvent": {
            "type": "object",
            "properties": {
              "eventTypeId": {
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              },
              "eventTypeLink": {
                "type": "string",
                "description": "RamBase event type reference"
              }
            },
            "description": "Optional event type which requires file requirement to be met (ProductionOperationCompleted, ProductActivated). DOV"
          },
          "fileRequirementLink": {
            "type": "string",
            "description": "Full docid for the requirement item"
          }
        }
      },
      "Translation1": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Time and date when the file type was first defined",
            "format": "date-time"
          },
          "translationId": {
            "type": "integer",
            "description": "Unique identifier for a file type translation",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language for this translation id"
          },
          "name": {
            "type": "string",
            "description": "Translated strong typed name for a file type."
          },
          "description": {
            "type": "string",
            "description": "Translated description of a file type"
          },
          "translationLink": {
            "type": "string",
            "description": "Full object reference for this translation id"
          }
        }
      },
      "CheckedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "User that ticked off a task checklist item."
      },
      "CommentedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Tag1": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "Tag object item id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "A multipurpose tag to put on a task. Could be an object reference or a custom label"
          },
          "type": {
            "type": "integer",
            "description": "Defines the tag is System tag or User tag",
            "format": "int32"
          },
          "tagLink": {
            "type": "string",
            "description": "Refers to the tag of a task"
          }
        }
      },
      "WorkPeriod": {
        "type": "object",
        "properties": {
          "workPeriodId": {
            "type": "integer",
            "description": "Registered time unique id",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "description": "Description for the registered time"
          },
          "startedAt": {
            "type": "string",
            "description": "Date and time of when the task item was registered",
            "format": "date-time"
          },
          "registeredHours": {
            "type": "number",
            "description": "Duration of the work period\r\n",
            "format": "double"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The person who registered hours for this task"
          }
        }
      },
      "NotificationType": {
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "type": "integer",
            "description": "The different levels of approval types a file will undergo to be fully approved, eg: Internal, external, document controller",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "Category of notification type (warning, information etc)"
          },
          "priority": {
            "type": "string",
            "description": "Priority of notification with this notification type."
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "notificationTypeLink": {
            "type": "string",
            "description": "Notification type reference"
          }
        }
      },
      "LastChangedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Last name of employee" },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The person a note was last changed by"
      },
      "Response": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment made by reviewer"
          },
          "reviewedAt": {
            "type": "string",
            "description": "The time the approval type was done",
            "format": "date-time"
          },
          "reviewedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The userid that approved or declined the approvaltype"
          }
        }
      },
      "Note1": {
        "type": "object",
        "properties": {
          "noteId": {
            "type": "integer",
            "description": "Note identifier",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "description": "The subject and title of a note"
          },
          "status": {
            "type": "integer",
            "description": "The status of a note. 1 = edit, 4 = main, 9 = obsolete",
            "format": "int32"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "True if a note is private for the person who created it"
          },
          "sortIndex": {
            "type": "integer",
            "description": "Sort index to determine the order of notes in a notebook section",
            "format": "int32"
          },
          "lastChangedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The person a note was last changed by"
          },
          "lastChangedAt": {
            "type": "string",
            "description": "The date this note was last changed",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time this note was created",
            "format": "date-time"
          },
          "text": { "type": "string", "description": "The text body of a note" }
        }
      },
      "AccountingPeriod": {
        "type": "object",
        "properties": {
          "accountingPeriodId": {
            "type": "integer",
            "description": "Accounting period identifier",
            "format": "int32"
          },
          "period": {
            "type": "integer",
            "description": "Accounting period",
            "format": "int32"
          },
          "accountingPeriodLink": {
            "type": "string",
            "description": "Accounting period reference"
          }
        }
      },
      "ShippingAddress": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          }
        }
      },
      "InvoiceAddress": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          }
        }
      },
      "Intercompany": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Intercompany database the supplier belongs to."
          }
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "Totals": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total value added tax in object currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          }
        }
      },
      "TotalsConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Value added tax amount in company currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount in company currency.",
            "format": "double"
          }
        }
      },
      "Validity": {
        "type": "object",
        "properties": {
          "effectivePeriod": {
            "type": "integer",
            "description": "Effective period of the finance asset",
            "format": "int32"
          },
          "expirationPeriod": {
            "type": "integer",
            "description": "Expiration period of the finance asset",
            "format": "int32"
          }
        }
      },
      "BalanceAccount": {
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of general ledger account"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the general ledger account"
          },
          "generalLedgerAccountLink": {
            "type": "string",
            "description": "General ledger account reference"
          }
        }
      },
      "DepreciationAccount": {
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of general ledger account"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the general ledger account"
          },
          "generalLedgerAccountLink": {
            "type": "string",
            "description": "General ledger account reference"
          }
        }
      },
      "BudgetAccount": {
        "type": "object",
        "properties": {
          "budgetAccountId": {
            "type": "integer",
            "description": "Budget account identifier",
            "format": "int32"
          },
          "budgetAccountLink": {
            "type": "string",
            "description": "Budget reference"
          }
        }
      },
      "GeneralLedgerAccount": {
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of general ledger account"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the general ledger account"
          },
          "generalLedgerAccountLink": {
            "type": "string",
            "description": "General ledger account reference"
          }
        }
      },
      "Supplier1": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Totals1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          }
        }
      },
      "Responsible": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "CreatedBy1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The person who registered hours for this task"
      },
      "Source": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "registrationDate": {
                "type": "string",
                "description": "Date of registration",
                "format": "date"
              },
              "issueDate": {
                "type": "string",
                "description": "Date when the document was issued.",
                "format": "date"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "GeneralLedgerPosting": {
        "type": "object",
        "properties": {
          "generalLedgerPostingId": {
            "type": "integer",
            "description": "General ledger posting identifier",
            "format": "int32"
          },
          "generalLedgerPostingLink": {
            "type": "string",
            "description": "General ledger posting reference"
          }
        }
      },
      "TotalsConverted1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount in company currency.",
            "format": "double"
          }
        }
      },
      "SAFTStandardCode": {
        "type": "object",
        "properties": {
          "sAFTStandardCodeId": {
            "type": "integer",
            "description": "SAF-T standard code identifier",
            "format": "int32"
          },
          "code": { "type": "string", "description": "SAF-T standard code" },
          "translatedName": {
            "type": "string",
            "description": "Name of SAF-T standard code"
          },
          "sAFTStandardCodeLink": {
            "type": "string",
            "description": "SAF-T standard code reference"
          }
        }
      },
      "Accounting": {
        "type": "object",
        "properties": {
          "accountingPeriod": {
            "type": "integer",
            "description": "The accounting period the object belongs to",
            "format": "int32"
          }
        }
      },
      "Supplier2": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The suppliers unique enterprise/organization number."
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Customer1": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The customers unique enterprise/organization number."
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "Total": {
        "type": "object",
        "properties": {
          "convertedVATAmount": {
            "type": "number",
            "description": "Amount/{SYSCUR}",
            "format": "double"
          },
          "convertedAmount": {
            "type": "number",
            "description": "Amount/{SYSCUR}",
            "format": "double"
          }
        }
      },
      "MinimumAmount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "integer",
            "description": "Amount limit of depreciation rule",
            "format": "int32"
          }
        }
      },
      "Repository": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "description": "Scope of the object. GLOBAL objects is available in all RamBase systems. LOCAL objects is only available in current RamBase system."
          },
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change"
          },
          "isPendingDeployment": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and is ready to be deployed from the Repository"
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "description": "Department identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of department" },
          "departmentLink": {
            "type": "string",
            "description": "Finance department reference"
          }
        },
        "description": "The department related to the budget account item."
      },
      "FinanceProject": {
        "type": "object",
        "properties": {
          "financeProjectId": {
            "type": "integer",
            "description": "Finance project identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of finance project "
          },
          "financeProjectLink": {
            "type": "string",
            "description": "Finance project reference"
          }
        },
        "description": "The project related to the budget account item."
      },
      "Balance": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "number",
            "description": "Balance of fixed asset",
            "format": "double"
          }
        }
      },
      "VATPosting": {
        "type": "object",
        "properties": {
          "vATPostingId": {
            "type": "integer",
            "description": "VAT Posting identifier",
            "format": "int32"
          },
          "vATPostingLink": {
            "type": "string",
            "description": "VAT Posting reference"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Full error message/description. The message is generated from the specified ErrorMessage object, expanded with the given parameter(s)."
          },
          "translatedMessage": {
            "type": "string",
            "description": "Full translated error description. The language used is specified either in $lang or by user settings. If error message don't exist in desired language, english will be used."
          },
          "errorMessage": {
            "type": "object",
            "properties": {
              "errorMessageId": {
                "type": "integer",
                "description": "Error message identifier",
                "format": "int32"
              },
              "errorMessageLink": {
                "type": "string",
                "description": "Error message reference"
              }
            }
          },
          "parameters": {
            "type": "object",
            "properties": {
              "parameter": {
                "type": "object",
                "properties": {
                  "index": {
                    "type": "integer",
                    "description": "Error Key",
                    "format": "int32"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the error parameter"
                  }
                }
              }
            }
          }
        },
        "description": "Error message of the general ledger posting"
      },
      "Children": {
        "type": "object",
        "properties": {
          "hasChildren": {
            "type": "boolean",
            "description": "True if general ledger account has any child accounts"
          },
          "numberOfChildren": {
            "type": "integer",
            "description": "Number of general ledger account children",
            "format": "int32"
          }
        }
      },
      "DefaultVATCodeDefinition": {
        "type": "object",
        "properties": {
          "vATCode": {
            "type": "string",
            "description": "Code that determines VAT rules used for VAT calculations."
          },
          "description": {
            "type": "string",
            "description": "Description of VAT Code definition"
          }
        }
      },
      "GeneralLedgerAccountGroup": {
        "type": "object",
        "properties": {
          "generalLedgerAccountGroupId": {
            "type": "integer",
            "description": "General ledger account group identifier",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Code of general ledger account group"
          },
          "name": {
            "type": "string",
            "description": "Name of general ledger account group"
          },
          "generalLedgerAccountGroupLink": {
            "type": "string",
            "description": "General ledger account group reference"
          }
        }
      },
      "DimensionRequirement": {
        "type": "object",
        "properties": {
          "requirement": {
            "type": "string",
            "description": "Specifies how the dimension should be used for the specific account."
          },
          "dimensionDefinition": {
            "type": "object",
            "properties": {
              "dimensionDefinitionId": {
                "type": "integer",
                "description": "Dimension identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of dimension" },
              "description": {
                "type": "string",
                "description": "Description of dimension"
              },
              "valueSource": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "description": "Type of source" }
                },
                "description": "Where the value is selected from."
              },
              "dimensionDefinitionLink": {
                "type": "string",
                "description": "Dimension reference"
              }
            }
          }
        }
      },
      "Totals2": {
        "type": "object",
        "properties": {
          "accountingPeriod": {
            "type": "object",
            "properties": {
              "accountingPeriodId": {
                "type": "integer",
                "description": "Accounting period identifier",
                "format": "int32"
              },
              "period": {
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              },
              "accountingPeriodLink": {
                "type": "string",
                "description": "Accounting period reference"
              }
            }
          },
          "periodAmounts": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Total amount.",
                "format": "double"
              }
            }
          },
          "yearToDateAmounts": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Total amount.",
                "format": "double"
              }
            }
          }
        },
        "description": "Total amounts from the general ledger postings for a specific period"
      },
      "GeneralLedgerAccountAssignment": {
        "type": "object",
        "properties": {
          "generalLedgerAccountAssignmentId": {
            "type": "integer",
            "description": "General ledger account assignment identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of general ledger default account assignment",
            "format": "int32"
          },
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of general ledger account"
              },
              "accountNumber": {
                "type": "string",
                "description": "The account number of the general ledger account"
              },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "country": {
            "type": "object",
            "properties": {
              "countryId": {
                "type": "integer",
                "description": "Country identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of country" },
              "countryCode": {
                "type": "string",
                "description": "Country code the postal code belongs to"
              },
              "countryLink": {
                "type": "string",
                "description": "Country reference"
              }
            }
          },
          "generalLedgerDefaultAccount": {
            "type": "object",
            "properties": {
              "generalLedgerDefaultAccountId": {
                "type": "integer",
                "description": "General ledger default account identifier",
                "format": "int32"
              },
              "key": { "type": "string", "description": "Account default key" },
              "translatedName": {
                "type": "string",
                "description": "Name of account default "
              },
              "generalLedgerDefaultAccountLink": {
                "type": "string",
                "description": "Default account reference"
              }
            }
          },
          "generalLedgerAccountAssignmentLink": {
            "type": "string",
            "description": "Default account assignment reference"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product reference",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "manufacturer": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Shortname/code of the manufacturer "
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Bank": {
        "type": "object",
        "properties": {
          "bankId": {
            "type": "integer",
            "description": "Bank account identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of bank account" },
          "bankLink": { "type": "string", "description": "Bank reference" }
        }
      },
      "ClosedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Balances": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "customerAmount": {
            "type": "number",
            "description": "Customer balance amount",
            "format": "double"
          },
          "supplierAmount": {
            "type": "number",
            "description": "Supplier balance amount",
            "format": "double"
          },
          "stock": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Inventory balance amount",
                "format": "double"
              },
              "importDate": {
                "type": "string",
                "description": "Inventory balance imported date",
                "format": "date"
              }
            }
          },
          "workInProgress": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Work in progress balance amount",
                "format": "double"
              },
              "importDate": {
                "type": "string",
                "description": "Work in progress balance imported date",
                "format": "date"
              }
            }
          },
          "stockAccrual": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Product balance amount",
                "format": "double"
              },
              "importDate": {
                "type": "string",
                "description": "Product balance imported date",
                "format": "date"
              }
            }
          }
        }
      },
      "FixedAssetsDepreciation": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "description": "Depreciation status" },
          "amount": {
            "type": "number",
            "description": "Depreciation amount",
            "format": "double"
          }
        }
      },
      "InterCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "name": { "type": "string", "description": "Name of company" },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The company's unique enterprise/organization number."
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        }
      },
      "Totals3": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount",
            "format": "double"
          },
          "totalCreditAmount": {
            "type": "number",
            "description": "Total debit amount.",
            "format": "double"
          },
          "totalDebitAmount": {
            "type": "number",
            "description": "Total credit amount.",
            "format": "double"
          }
        }
      },
      "TotalsConverted2": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount in company currency.",
            "format": "double"
          },
          "totalCreditAmount": {
            "type": "number",
            "description": "Total debit amount in company currency.",
            "format": "double"
          },
          "totalDebitAmount": {
            "type": "number",
            "description": "Total credit amount in company currency.",
            "format": "double"
          }
        }
      },
      "VATDetails": {
        "type": "object",
        "properties": {
          "vATType": {
            "type": "string",
            "description": "Type of value added tax "
          },
          "vATHandling": {
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "The suppliers unique enterprise/organization number."
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "totalAmount": {
                "type": "number",
                "description": "Total amount",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "exchangeRate": {
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              },
              "totalAmount": {
                "type": "number",
                "description": "Total amount in company currency.",
                "format": "double"
              }
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          },
          "shortName": {
            "type": "string",
            "description": "Unique abbreviation/short name of the location"
          },
          "address": {
            "type": "object",
            "properties": {
              "country": { "type": "string", "description": "Name of country" },
              "countryCode": {
                "type": "string",
                "description": "Two-character code (ISO 3166) identifying the country."
              }
            }
          },
          "locationLink": {
            "type": "string",
            "description": "Location reference"
          }
        }
      },
      "ShipmentCountry": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of country" },
          "countryCode": {
            "type": "string",
            "description": "Country code of shipment destination"
          }
        }
      },
      "InvoiceCountry": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of country" },
          "countryCode": {
            "type": "string",
            "description": "Country code for invoice address"
          }
        }
      },
      "Total1": {
        "type": "object",
        "properties": {
          "convertedAmount": {
            "type": "number",
            "description": "Amount/{SYSCUR}",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          }
        }
      },
      "GeneralLedgerAccountRange": {
        "type": "object",
        "properties": {
          "firstAccountNumber": {
            "type": "string",
            "description": "The first account number in the range"
          },
          "lastAccountNumber": {
            "type": "string",
            "description": "The last account number in the range"
          }
        }
      },
      "Totals4": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in object currency, excluding VAT.",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total value added tax in object currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in object currency, including VAT",
            "format": "double"
          }
        }
      },
      "TotalsConverted3": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netAmount": {
            "type": "number",
            "description": "Total net amount for all VAT codes",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total VAT amount for all VAT codes",
            "format": "double"
          },
          "vATRoundOffAmount": {
            "type": "number",
            "description": "Total round off amount for all VAT codes",
            "format": "double"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "accounting": {
                "type": "object",
                "properties": {
                  "accountingPeriod": {
                    "type": "integer",
                    "description": "The accounting period the object belongs to",
                    "format": "int32"
                  }
                }
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "transactionEntity": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer/supplier, or last name if it is a person. "
              },
              "vATRegistrationNumber": {
                "type": "string",
                "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "LatestReport": {
        "type": "object",
        "properties": {
          "reportedDate": {
            "type": "string",
            "description": "Date of latest VAT reporting",
            "format": "date"
          },
          "reportedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Employee who stated that latest reporting was completed"
          }
        }
      },
      "PaymentItem": {
        "type": "object",
        "properties": {
          "paymentItemId": {
            "type": "integer",
            "description": "Item-/line-number of the payment.",
            "format": "int32"
          },
          "payment": {
            "type": "object",
            "properties": {
              "paymentId": {
                "type": "integer",
                "description": "Payment identifier",
                "format": "int32"
              },
              "issueDate": {
                "type": "string",
                "description": "Date when the document was issued.",
                "format": "date"
              },
              "registrationDate": {
                "type": "string",
                "description": "Date of registration",
                "format": "date"
              },
              "accountingPeriod": {
                "type": "object",
                "properties": {
                  "accountingPeriodId": {
                    "type": "integer",
                    "description": "Accounting period identifier",
                    "format": "int32"
                  },
                  "period": {
                    "type": "integer",
                    "description": "Accounting period",
                    "format": "int32"
                  },
                  "accountingPeriodLink": {
                    "type": "string",
                    "description": "Accounting period reference"
                  }
                }
              },
              "paymentLink": {
                "type": "string",
                "description": "Payment reference"
              }
            }
          },
          "paymentItemLink": {
            "type": "string",
            "description": "Payment item reference"
          }
        }
      },
      "AccountingPeriodSummary": {
        "type": "object",
        "properties": {
          "lowestGeneralLedgerPostingStatus": {
            "type": "integer",
            "description": "Status of general ledger posting",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "balancePeriodAmount": {
            "type": "number",
            "description": "Total balance amount of the period",
            "format": "double"
          },
          "resultPeriodAmount": {
            "type": "number",
            "description": "Total result amount of the period",
            "format": "double"
          },
          "balanceYearToDateAmount": {
            "type": "number",
            "description": "Total balance amount of the year to this period",
            "format": "double"
          },
          "resultYearToDateAmount": {
            "type": "number",
            "description": "Total result amount of the year to this period",
            "format": "double"
          },
          "accumulatedResultAmount": {
            "type": "number",
            "description": "The accumulated result amount from the first posting",
            "format": "double"
          },
          "accountingPeriod": {
            "type": "object",
            "properties": {
              "accountingPeriodId": {
                "type": "integer",
                "description": "Accounting period identifier",
                "format": "int32"
              },
              "period": {
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              },
              "accountingPeriodLink": {
                "type": "string",
                "description": "Accounting period reference"
              }
            }
          }
        }
      },
      "AccountingYearSummary": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount of the fiscal year",
            "format": "double"
          },
          "balanceAmount": {
            "type": "number",
            "description": "Total balance amount of the fiscal year",
            "format": "double"
          },
          "resultAmount": {
            "type": "number",
            "description": "Total result amount of the fiscal year",
            "format": "double"
          },
          "accountingPeriodYear": {
            "type": "object",
            "properties": {
              "year": {
                "type": "integer",
                "description": "Year of accounting period",
                "format": "int32"
              }
            }
          }
        }
      },
      "AccountDimensions": {
        "type": "object",
        "properties": {
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "accountNumber": {
                "type": "string",
                "description": "The account number of the general ledger account"
              },
              "name": {
                "type": "string",
                "description": "Name of general ledger account"
              },
              "type": { "type": "string", "description": "Type of account" },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value for this dimension defintion."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the dimension value."
                },
                "dimensionDefinition": {
                  "type": "object",
                  "properties": {
                    "dimensionDefinitionId": {
                      "type": "integer",
                      "description": "Dimension identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of dimension"
                    },
                    "dimensionDefinitionLink": {
                      "type": "string",
                      "description": "Dimension reference"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          }
        },
        "description": "Address of the bank associated with the bank account"
      },
      "Totals5": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "number",
            "description": "Total amount.",
            "format": "double"
          },
          "debitAmount": {
            "type": "number",
            "description": "Total debit amount.",
            "format": "double"
          },
          "creditAmount": {
            "type": "number",
            "description": "Total credit amount.",
            "format": "double"
          }
        }
      },
      "TotalsConverted4": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Total amount in company currency.",
            "format": "double"
          },
          "debitAmount": {
            "type": "number",
            "description": "Total debit amount in company currency.",
            "format": "double"
          },
          "creditAmount": {
            "type": "number",
            "description": "Total credit amount in company currency.",
            "format": "double"
          }
        }
      },
      "GeneralLedgerAccount1": {
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the general ledger account"
          },
          "name": {
            "type": "string",
            "description": "Name of general ledger account"
          },
          "type": { "type": "string", "description": "Type of account" },
          "generalLedgerAccountLink": {
            "type": "string",
            "description": "General ledger account reference"
          }
        }
      },
      "GeneralLedgerAccountAssignment1": {
        "type": "object",
        "properties": {
          "generalLedgerAccountAssignmentId": {
            "type": "integer",
            "description": "General ledger account assignment identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of general ledger default account assignment",
            "format": "int32"
          },
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of general ledger account"
              },
              "accountNumber": {
                "type": "string",
                "description": "The account number of the general ledger account"
              },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "country": {
            "type": "object",
            "properties": {
              "countryId": {
                "type": "integer",
                "description": "Country identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of country" },
              "countryCode": {
                "type": "string",
                "description": "Country code the postal code belongs to"
              },
              "countryLink": {
                "type": "string",
                "description": "Country reference"
              }
            }
          },
          "generalLedgerAccountAssignmentLink": {
            "type": "string",
            "description": "Default account assignment reference"
          }
        },
        "description": "General ledger account assignment for a given country, default is the company country"
      },
      "VATCodeDefinition": {
        "type": "object",
        "properties": {
          "vATCode": {
            "type": "string",
            "description": "Code that determines VAT rules used for VAT calculations."
          },
          "vATPercent": {
            "type": "number",
            "description": "Value added tax percent",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "Description of VAT Code definition"
          }
        }
      },
      "AccountingLine": {
        "type": "object",
        "properties": {
          "accountingLineId": {
            "type": "integer",
            "description": "Accounting line identifier of the payable journal entry ",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the accounting line",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "description": "Source of the receivable ledger specification item."
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              },
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              },
              "address": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "Name of country"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Two-character code (ISO 3166) identifying the country."
                  }
                }
              },
              "locationLink": {
                "type": "string",
                "description": "Location reference"
              }
            }
          },
          "fixedAsset": {
            "type": "object",
            "properties": {
              "fixedAssetId": {
                "type": "integer",
                "description": "Fixed asset identifier",
                "format": "int32"
              },
              "fixedAssetLink": {
                "type": "string",
                "description": "Link to Fixed asset document"
              }
            }
          },
          "generalLedgerPostingItem": {
            "type": "object",
            "properties": {
              "generalLedgerPostingItemId": {
                "type": "integer",
                "description": "General ledger posting item identifier.",
                "format": "int32"
              },
              "generalLedgerPosting": {
                "type": "object",
                "properties": {
                  "generalLedgerPostingId": {
                    "type": "integer",
                    "description": "General ledger posting identifier",
                    "format": "int32"
                  },
                  "generalLedgerPostingLink": {
                    "type": "string",
                    "description": "General ledger posting reference"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "generalLedgerPostingItemLink": {
                "type": "string",
                "description": "General ledger posting reference"
              }
            }
          },
          "accountDimensions": {
            "type": "object",
            "properties": {
              "generalLedgerAccount": {
                "type": "object",
                "properties": {
                  "generalLedgerAccountId": {
                    "type": "integer",
                    "description": "General ledger account identifier",
                    "format": "int32"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "The account number of the general ledger account"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of general ledger account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of account"
                  },
                  "generalLedgerAccountLink": {
                    "type": "string",
                    "description": "General ledger account reference"
                  }
                }
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value for this dimension defintion."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the dimension value."
                    },
                    "dimensionDefinition": {
                      "type": "object",
                      "properties": {
                        "dimensionDefinitionId": {
                          "type": "integer",
                          "description": "Dimension identifier",
                          "format": "int32"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of dimension"
                        },
                        "dimensionDefinitionLink": {
                          "type": "string",
                          "description": "Dimension reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "vATPercent": {
                "type": "number",
                "description": "Value added tax percent",
                "format": "double"
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount.",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "exchangeRate": {
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount in company currency.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount in company currency.",
                "format": "double"
              }
            }
          },
          "accountingLineLink": {
            "type": "string",
            "description": "Accounting line reference"
          }
        }
      },
      "VATCodeDefinition1": {
        "type": "object",
        "properties": {
          "vATCode": {
            "type": "string",
            "description": "Code that determines VAT rules used for VAT calculations."
          },
          "description": {
            "type": "string",
            "description": "Description of VAT Code definition"
          }
        }
      },
      "Location1": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          },
          "shortName": {
            "type": "string",
            "description": "Unique abbreviation/short name of the location"
          },
          "name": {
            "type": "string",
            "description": "Name of warehouse location"
          },
          "address": {
            "type": "object",
            "properties": {
              "countryCode": {
                "type": "string",
                "description": "Two-character code (ISO 3166) identifying the country."
              }
            },
            "description": "Address of the bank associated with the bank account"
          },
          "locationLink": {
            "type": "string",
            "description": "Location reference"
          }
        },
        "description": "Location of general ledger posting item."
      },
      "Translation2": {
        "type": "object",
        "properties": {
          "translationId": {
            "type": "integer",
            "description": "Translation identifier",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language of the translation"
          },
          "name": {
            "type": "string",
            "description": "Translation of the name"
          },
          "description": {
            "type": "string",
            "description": "Translation of the description"
          }
        }
      },
      "FixedAsset": {
        "type": "object",
        "properties": {
          "fixedAssetId": {
            "type": "integer",
            "description": "Fixed asset identifier",
            "format": "int32"
          },
          "fixedAssetLink": {
            "type": "string",
            "description": "Link to Fixed asset document"
          }
        }
      },
      "GeneralLedgerPostingItem": {
        "type": "object",
        "properties": {
          "generalLedgerPostingItemId": {
            "type": "integer",
            "description": "General ledger posting item identifier.",
            "format": "int32"
          },
          "generalLedgerPosting": {
            "type": "object",
            "properties": {
              "generalLedgerPostingId": {
                "type": "integer",
                "description": "General ledger posting identifier",
                "format": "int32"
              },
              "generalLedgerPostingLink": {
                "type": "string",
                "description": "General ledger posting reference"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "generalLedgerPostingItemLink": {
            "type": "string",
            "description": "General ledger posting reference"
          }
        }
      },
      "Totals6": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "debitAmount": {
            "type": "number",
            "description": "Total debit amount.",
            "format": "double"
          },
          "creditAmount": {
            "type": "number",
            "description": "Total credit amount.",
            "format": "double"
          }
        }
      },
      "TotalsConverted5": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "debitAmount": {
            "type": "number",
            "description": "Total debit amount in company currency.",
            "format": "double"
          },
          "creditAmount": {
            "type": "number",
            "description": "Total credit amount in company currency.",
            "format": "double"
          }
        }
      },
      "GeneralLedgerAccountSummary": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "periodAmount": {
            "type": "number",
            "description": "Total amount of the period",
            "format": "double"
          },
          "yearToDateAmount": {
            "type": "number",
            "description": "Total amount of the year to this period",
            "format": "double"
          },
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "accountNumber": {
                "type": "string",
                "description": "The account number of the general ledger account"
              },
              "name": {
                "type": "string",
                "description": "Name of general ledger account"
              },
              "type": { "type": "string", "description": "Type of account" },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          }
        }
      },
      "AccountsReceivableTransaction": {
        "type": "object",
        "properties": {
          "accountsReceivableTransactionId": {
            "type": "integer",
            "description": "Accounts receivable transaction identifier",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "description": "Date the object is due to be paid",
            "format": "date"
          },
          "source": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  },
                  "itemId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  }
                }
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "totalAmount": {
                "type": "number",
                "description": "Total amount",
                "format": "double"
              }
            }
          },
          "accountsReceivableTransactionLink": {
            "type": "string",
            "description": "Accounts receivable transaction reference"
          }
        }
      },
      "CreatedBy2": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "APIResource": {
        "type": "object",
        "properties": {
          "aPIResourceId": {
            "type": "integer",
            "description": "API resource identifier",
            "format": "int32"
          }
        }
      },
      "APIClient": {
        "type": "object",
        "properties": {
          "aPIClientId": {
            "type": "integer",
            "description": "Automatic incrementing unique client number for the client id.",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of the client record",
            "format": "int32"
          },
          "clientId": {
            "type": "string",
            "description": "API client identifier"
          },
          "name": {
            "type": "string",
            "description": "The descriptive name of the client. Can be anything."
          },
          "ownerSystem": {
            "type": "string",
            "description": "The owner RamBase system"
          },
          "responsible": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Contains information about who is responsible for the software that uses this client"
              },
              "email": {
                "type": "string",
                "description": "Email to the responsible person / owner of the client. This email is used to inform the owner of changes to the api."
              },
              "company": {
                "type": "string",
                "description": "Name of the responsible company of the API client. This company name might be presented during authorization, depending on the authorization flow."
              }
            }
          }
        }
      },
      "Responsible1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contains information about who is responsible for the software that uses this client"
          },
          "email": {
            "type": "string",
            "description": "Email to the responsible person / owner of the client. This email is used to inform the owner of changes to the api."
          },
          "company": {
            "type": "string",
            "description": "Name of the responsible company of the API client. This company name might be presented during authorization, depending on the authorization flow."
          }
        }
      },
      "APIDocumentationTreeNode": {
        "type": "object",
        "properties": {
          "aPIDocumentationTreeNodeId": {
            "type": "integer",
            "description": "The identifier of the tree node.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of the tree node"
          },
          "description": {
            "type": "string",
            "description": "Description of the documentation tree node"
          },
          "iconName": {
            "type": "string",
            "description": "Icon name that is used for the node"
          },
          "treePath": {
            "type": "string",
            "description": "Documentation tree path of the node"
          },
          "parent": {
            "type": "object",
            "properties": {
              "aPIDocumentationTreeNodeId": {
                "type": "integer",
                "description": "The identifier of the tree node.",
                "format": "int32"
              }
            },
            "description": "Identifier of the node that this node will be placed under"
          }
        }
      },
      "APIResourceVersion": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "Version of the resource",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the resource version",
            "format": "int32"
          },
          "programType": {
            "type": "string",
            "description": "Program type behind the resource. Either COS, DOV og LIB"
          },
          "programId": {
            "type": "integer",
            "description": "Identifier of the program behind the resource",
            "format": "int32"
          },
          "aPIResource": {
            "type": "object",
            "properties": {
              "aPIResourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "APIClient1": {
        "type": "object",
        "properties": {
          "aPIClientId": {
            "type": "integer",
            "description": "Automatic incrementing unique client number for the client id.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The descriptive name of the client. Can be anything."
          },
          "clientId": {
            "type": "string",
            "description": "API client identifier"
          }
        }
      },
      "RamBaseSystem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the rambasesystem."
          }
        },
        "description": "Target that was used for the request"
      },
      "User": {
        "type": "object",
        "properties": {
          "authentication": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The users login name"
              }
            }
          }
        }
      },
      "APIResource1": {
        "type": "object",
        "properties": {
          "aPIResourceId": {
            "type": "integer",
            "description": "API resource identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the resource",
            "format": "int32"
          },
          "testUserIds": {
            "type": "string",
            "description": "Pids that are allowed to run the resource test versions"
          },
          "category": {
            "type": "integer",
            "description": "Category of API resource",
            "format": "int32"
          },
          "logLevel": {
            "type": "string",
            "description": "Level of logging for the resource. Possible values are: all, none, errors."
          },
          "maxTop": {
            "type": "integer",
            "description": "Maximum number of records that can be fetched using the resource (only relvant for list resources)",
            "format": "int32"
          },
          "highestVersion": {
            "type": "object",
            "properties": {
              "aPIResourceVersionId": {
                "type": "integer",
                "description": "Version of the resource",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the resource version",
                "format": "int32"
              },
              "verb": {
                "type": "string",
                "description": "Verb of the resource version"
              },
              "uri": {
                "type": "string",
                "description": "Uri of the resource version"
              }
            }
          }
        }
      },
      "CodeReview": {
        "type": "object",
        "properties": {
          "codeReviewId": {
            "type": "integer",
            "description": "Code review identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of code review",
            "format": "int32"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference of code review"
          },
          "requestedAt": {
            "type": "utcdatetime",
            "description": "Date and time code review was requested"
          },
          "startedAt": {
            "type": "utcdatetime",
            "description": "Date and time the code review started"
          },
          "completedAt": {
            "type": "utcdatetime",
            "description": "Date and time the code review was completed"
          },
          "requestedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "reviewer": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "reviewOf": {
            "type": "object",
            "properties": {
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              }
            }
          },
          "latestComment": {
            "type": "object",
            "properties": {
              "codeReviewCommentId": {
                "type": "integer",
                "description": "Identifier of code review comment",
                "format": "int32"
              },
              "codeReference": {
                "type": "string",
                "description": "Reference to code line"
              },
              "comment": {
                "type": "string",
                "description": "The code review comment"
              },
              "sentAt": {
                "type": "utcdatetime",
                "description": "Date and time the comment was sent"
              },
              "sentBy": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "description": "User identifier",
                    "format": "int32"
                  },
                  "userLink": {
                    "type": "string",
                    "description": "User reference"
                  }
                }
              }
            }
          }
        }
      },
      "DevelopmentProject": {
        "type": "object",
        "properties": {
          "developmentProjectId": {
            "type": "integer",
            "description": "Development project identifier",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Status of the development project"
          },
          "name": {
            "type": "string",
            "description": "Name of the development project"
          },
          "description": {
            "type": "string",
            "description": "Description of the development project"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date and time the development project was last updated",
            "format": "date-time"
          },
          "uri": {
            "type": "string",
            "description": "Reference URI for the development project (ex a wiki page)"
          },
          "isShared": {
            "type": "boolean",
            "description": "True if project is shared and anyone can add themselves to it"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "BaseCurrency": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "description": "Currency identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name/description of currency"
          },
          "code": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "currencyLink": {
            "type": "string",
            "description": "Currency reference"
          }
        }
      },
      "OTPException": {
        "type": "object",
        "properties": {
          "oTPExceptionId": {
            "type": "integer",
            "description": "A one-time-password-exception id",
            "format": "int32"
          },
          "iPAddress": {
            "type": "string",
            "description": "The ip-address of the otp-exception"
          },
          "description": {
            "type": "string",
            "description": "Description of otp-exception"
          },
          "createdAt": {
            "type": "string",
            "description": "Time and date when entry was made",
            "format": "date-time"
          },
          "lastUsedAt": {
            "type": "string",
            "description": "Time and date when this IP address was lastly logged in with",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Status of exception. 4=active, 9=inactive",
            "format": "int32"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "The user Id for the user who created otp exception"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "UserId of the last person that changed this IP entry"
          },
          "ramBaseSystem": {
            "type": "object",
            "properties": {
              "ramBaseSystemId": {
                "type": "integer",
                "description": "RamBase system that the OTP-exception affects",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The name of the rambasesystem."
              }
            }
          }
        }
      },
      "RamBaseSystem1": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "type": "integer",
            "description": "RamBase system identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the rambasesystem."
          },
          "type": {
            "type": "integer",
            "description": "Type of RamBase system",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the rambasesytem."
          },
          "isTestSystem": {
            "type": "boolean",
            "description": "A boolean that indicates if the system is a test-system."
          },
          "isUsingInvoiceImportIntegration": {
            "type": "boolean",
            "description": "True if RamBase system has activated the import of supplier invoice integeration"
          },
          "ramBaseServer": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Address of RamBase server"
              }
            }
          }
        }
      },
      "User1": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "If logintype is CNT, then LoginPid will be the server pid to use for login to RamBase."
      },
      "RamBaseSystemJob": {
        "type": "object",
        "properties": {
          "ramBaseSystemJobId": {
            "type": "integer",
            "description": "RamBase system job identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "RamBase System setup job state.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the system that RamBase Automated System Setup is setting up."
          },
          "createdAt": {
            "type": "string",
            "description": "RamBase Automated System Setup jobs datetime of creation.",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "description": "RamBase Automated System Setup jobs start datetime.",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "description": "RamBase Automated System Setup job completion datetime.",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "HighestVersion": {
        "type": "object",
        "properties": {
          "aPIResourceVersionId": {
            "type": "integer",
            "description": "Version of the resource",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the resource version",
            "format": "int32"
          },
          "verb": {
            "type": "string",
            "description": "Verb of the resource version"
          },
          "uri": {
            "type": "string",
            "description": "Uri of the resource version"
          }
        }
      },
      "Translation3": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the translation"
          },
          "fieldName": {
            "type": "string",
            "description": "Translation of field name"
          },
          "description": {
            "type": "string",
            "description": "Translated description"
          }
        }
      },
      "APIResourceVersion1": {
        "type": "object",
        "properties": {
          "aPIResourceVersionId": {
            "type": "integer",
            "description": "Version of the resource",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the resource version",
            "format": "int32"
          },
          "verb": {
            "type": "string",
            "description": "Verb of the resource version"
          },
          "uri": {
            "type": "string",
            "description": "Uri of the resource version"
          },
          "aPIResource": {
            "type": "object",
            "properties": {
              "aPIResourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "SentBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "ProjectFolder": {
        "type": "object",
        "properties": {
          "projectFolderId": {
            "type": "integer",
            "description": "Project folder identifier",
            "format": "int32"
          }
        }
      },
      "Change": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "description": "External reference for the changes made in this resource version"
          },
          "description": {
            "type": "string",
            "description": "Description of the changes done in this resource version"
          }
        }
      },
      "CodeReviewComment": {
        "type": "object",
        "properties": {
          "codeReviewCommentId": {
            "type": "integer",
            "description": "Identifier of code review comment",
            "format": "int32"
          },
          "codeReference": {
            "type": "string",
            "description": "Reference to code line"
          },
          "comment": {
            "type": "string",
            "description": "The code review comment"
          },
          "isPinned": {
            "type": "boolean",
            "description": "True if comment is pinned"
          },
          "sentAt": {
            "type": "utcdatetime",
            "description": "Date and time the comment was sent"
          },
          "sentBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "ProjectFolder1": {
        "type": "object",
        "properties": {
          "projectFolderId": {
            "type": "integer",
            "description": "Project folder identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of project folder" },
          "parentFolder": {
            "type": "object",
            "properties": {
              "projectFolderId": {
                "type": "integer",
                "description": "Project folder identifier",
                "format": "int32"
              }
            }
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "ProjectItem": {
        "type": "object",
        "properties": {
          "projectItemId": {
            "type": "integer",
            "description": "Project item identifier",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of the project item"
          },
          "type": { "type": "string", "description": "Type of project item" },
          "identifier": {
            "type": "string",
            "description": "Key identifier for the project item"
          },
          "description": {
            "type": "string",
            "description": "Description of the project item"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "projectFolder": {
            "type": "object",
            "properties": {
              "projectFolderId": {
                "type": "integer",
                "description": "Project folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "description": "Currency identifier",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "name": {
            "type": "string",
            "description": "Name/description of currency"
          },
          "currencyLink": {
            "type": "string",
            "description": "Currency reference"
          }
        }
      },
      "APIClient2": {
        "type": "object",
        "properties": {
          "aPIClientId": {
            "type": "integer",
            "description": "Automatic incrementing unique client number for the client id.",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of the client record",
            "format": "int32"
          },
          "clientId": {
            "type": "string",
            "description": "API client identifier"
          },
          "name": {
            "type": "string",
            "description": "The descriptive name of the client. Can be anything."
          },
          "responsible": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Contains information about who is responsible for the software that uses this client"
              },
              "email": {
                "type": "string",
                "description": "Email to the responsible person / owner of the client. This email is used to inform the owner of changes to the api."
              },
              "company": {
                "type": "string",
                "description": "Name of the responsible company of the API client. This company name might be presented during authorization, depending on the authorization flow."
              }
            }
          }
        }
      },
      "APIDescriptionTemplate": {
        "type": "object",
        "properties": {
          "aPIDescriptionTemplateId": {
            "type": "string",
            "description": "API description template identifier"
          },
          "description": {
            "type": "string",
            "description": "Description for template"
          },
          "availableTranslations": {
            "type": "string",
            "description": "Commalist of available translaction languages"
          }
        }
      },
      "Company1": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of company. 1 : Not activated, 4 : Active, 9 : Obsolete\r\n \r\n",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of company" },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The company's unique enterprise/organization number."
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        }
      },
      "ParentCompetence": {
        "type": "object",
        "properties": {
          "competenceId": {
            "type": "integer",
            "description": "Competence identifier",
            "format": "int32"
          },
          "competenceLink": {
            "type": "string",
            "description": "Competence reference"
          }
        },
        "description": "The category or subcategory a competence is divided into."
      },
      "Employee1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The employee who received the course diploma"
      },
      "Validity1": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "Valid from",
            "format": "date"
          },
          "expirationDate": {
            "type": "string",
            "description": "Valid to",
            "format": "date"
          }
        }
      },
      "TimeType": {
        "type": "object",
        "properties": {
          "timeTypeId": {
            "type": "integer",
            "description": "Time type identifier",
            "format": "int32"
          },
          "category": {
            "type": "integer",
            "description": "Category of the time type",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the time type"
          },
          "timeTypeLink": {
            "type": "string",
            "description": "Reference to the time type"
          }
        }
      },
      "SelfCertification": {
        "type": "object",
        "properties": {
          "selfCertificationId": {
            "type": "integer",
            "description": "Self certificate identifier",
            "format": "int32"
          },
          "selfCertificationLink": {
            "type": "string",
            "description": "Self certificate reference"
          }
        }
      },
      "Total2": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "number",
            "description": "Total time, in hours, of the work allowance",
            "format": "double"
          },
          "time": {
            "type": "time",
            "description": "Total time, in hours and minutes, of the work allowance"
          }
        }
      },
      "ShortTermAbsence": {
        "type": "object",
        "properties": {
          "shortTermAbsenceId": {
            "type": "integer",
            "description": "Short-term absence identifier",
            "format": "int32"
          },
          "shortTermAbsenceLink": {
            "type": "string",
            "description": "Short-term absence reference"
          }
        }
      },
      "TimeType1": {
        "type": "object",
        "properties": {
          "timeTypeId": {
            "type": "integer",
            "description": "Time type identifier",
            "format": "int32"
          },
          "overtime": {
            "type": "integer",
            "description": "Overtime percentage",
            "format": "int32"
          },
          "category": {
            "type": "integer",
            "description": "Category of the time type",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the time type"
          },
          "timeTypeLink": {
            "type": "string",
            "description": "Reference to the time type"
          }
        }
      },
      "WorkDay": {
        "type": "object",
        "properties": {
          "workDayId": {
            "type": "integer",
            "description": "Workday identifier",
            "format": "int32"
          },
          "employee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The employee who received the course diploma"
          },
          "selfCertification": {
            "type": "object",
            "properties": {
              "selfCertificationId": {
                "type": "integer",
                "description": "Self certificate identifier",
                "format": "int32"
              },
              "selfCertificationLink": {
                "type": "string",
                "description": "Self certificate reference"
              }
            }
          },
          "workDayLink": {
            "type": "string",
            "description": "Work hour log reference"
          }
        }
      },
      "ItemSpecifics": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "time",
            "description": "Start time of work period or allowance"
          },
          "endTime": {
            "type": "time",
            "description": "End time of work period or allowance"
          },
          "totalHours": {
            "type": "number",
            "description": "Total time, in hours, of the work period, allowance or adjustment. Calculated by subtracting the start time from the end time.",
            "format": "double"
          },
          "totalDays": {
            "type": "number",
            "description": "Total number of days of the adjustment",
            "format": "double"
          },
          "isIn": {
            "type": "boolean",
            "description": "Boolean value saying whether specific work period is IN or OUT type"
          },
          "shortTermAbsence": {
            "type": "object",
            "properties": {
              "shortTermAbsenceId": {
                "type": "integer",
                "description": "Short-term absence identifier",
                "format": "int32"
              },
              "shortTermAbsenceLink": {
                "type": "string",
                "description": "Short-term absence reference"
              }
            }
          }
        }
      },
      "TimeType2": {
        "type": "object",
        "properties": {
          "timeTypeId": {
            "type": "integer",
            "description": "Time type identifier",
            "format": "int32"
          },
          "overtimePercent": {
            "type": "integer",
            "description": "Overtime percentage",
            "format": "int32"
          },
          "category": {
            "type": "integer",
            "description": "Category of the time type",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the time type"
          },
          "timeTypeLink": {
            "type": "string",
            "description": "Reference to the time type"
          }
        }
      },
      "Start": {
        "type": "object",
        "properties": {
          "time": {
            "type": "time",
            "description": "Start time of work period or allowance"
          },
          "site": {
            "type": "string",
            "description": "Site at start time of work period"
          }
        }
      },
      "End": {
        "type": "object",
        "properties": {
          "time": {
            "type": "time",
            "description": "End time of work period or allowance"
          },
          "site": {
            "type": "string",
            "description": "Site at end time of work period"
          }
        }
      },
      "WorkDay1": {
        "type": "object",
        "properties": {
          "workDayId": {
            "type": "integer",
            "description": "Workday identifier",
            "format": "int32"
          },
          "employee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The employee who received the course diploma"
          },
          "workDayLink": {
            "type": "string",
            "description": "Work hour log reference"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "description": "Course identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of course",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "name": { "type": "string", "description": "Name of course" },
          "courseProvider": {
            "type": "string",
            "description": "Name of the provider of the course"
          },
          "length": {
            "type": "string",
            "description": "Length of the course in hours"
          },
          "description": {
            "type": "string",
            "description": "Description of the course"
          },
          "exclusivelyForCompany": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "integer",
                "description": "Company identifier",
                "format": "int32"
              },
              "database": {
                "type": "string",
                "description": "Abbreviation/code to identify the company"
              },
              "companyLink": {
                "type": "string",
                "description": "Company reference"
              }
            },
            "description": "Company this course belongs to"
          },
          "courseLink": { "type": "string", "description": "Course reference" }
        }
      },
      "Company2": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of company" },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        }
      },
      "Superior": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Superior of the employee "
      },
      "Period": {
        "type": "object",
        "properties": {
          "startedAt": {
            "type": "string",
            "description": "Start time of the short-term absence",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "description": "End time of the short-term absence",
            "format": "date-time"
          }
        }
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "regarding": {
            "type": "string",
            "description": "Related entity which initiated the reason for the absence"
          },
          "type": {
            "type": "string",
            "description": "Type of the appointment"
          },
          "time": { "type": "time", "description": "Time of the appointment" },
          "location": {
            "type": "string",
            "description": "Location of the appointment"
          }
        }
      },
      "ExternalCodes": {
        "type": "object",
        "properties": {
          "salaryCodeForHourlyPaid": {
            "type": "string",
            "description": "External salary code for hourly paid"
          },
          "salaryCodeForMonthlyPaid": {
            "type": "string",
            "description": "External salary code for montly payments"
          },
          "absenceCodeForHourlyPaid": {
            "type": "string",
            "description": "External absence code for hourly paid"
          },
          "absenceCodeForMonthlyPaid": {
            "type": "string",
            "description": "External absence code for monthly payments"
          }
        }
      },
      "Totals7": {
        "type": "object",
        "properties": {
          "numberOfAllowances": {
            "type": "integer",
            "description": "Total number of allowances in this work hour log.",
            "format": "int32"
          },
          "numberOfAdjustments": {
            "type": "integer",
            "description": "Total number of adjustments in this work hour log.",
            "format": "int32"
          },
          "numberOfPeriods": {
            "type": "integer",
            "description": "Total number of periods in this work hour log.",
            "format": "int32"
          },
          "scheduledWorkingHours": {
            "type": "number",
            "description": "Total scheduled/expected hours for the employee at given date. These hours is extracted from the work arrangement.  ",
            "format": "double"
          },
          "workHours": {
            "type": "number",
            "description": "Total hours of actual work hours for the work hour log. Sum of ordinary work, overtime and paid leave.",
            "format": "double"
          },
          "regularHours": {
            "type": "number",
            "description": "Total work time, in hours, for all periods in this work hour log. ",
            "format": "double"
          },
          "overtimeHours": {
            "type": "number",
            "description": "Total overtime, in hours, of all periods in this work hour log.",
            "format": "double"
          },
          "unpaidAbscenceHours": {
            "type": "number",
            "description": "Total unpaid leave/absence, in hours, for all periods in this work hour log. Ex. day off or unpaid short time leave. ",
            "format": "double"
          },
          "paidAbscenceHours": {
            "type": "number",
            "description": "Total paid leave/absence, in hours, for all periods in this work hour log. Ex. vacation, paid sick leave and/or parental leave. ",
            "format": "double"
          },
          "lunchHours": {
            "type": "number",
            "description": "Total unpaid lunch, in hours, for all periods in this work hour log. Note that unpaid lunch is only calculated if the sum of work time, overtime and paid leave exceeds 5.5 hours.",
            "format": "double"
          },
          "flexHours": {
            "type": "number",
            "description": "Change/difference in flextime account. Calculated by substracting ordinary work and paid- and unpaid absence from scheduled hours. Will only be set if status is 4 or more, and work arrangement allows flexitime. Will not be set if work hour log contains any periods with partial- or graded sick leave.",
            "format": "double"
          }
        }
      },
      "TotalsIncludingUnapproved": {
        "type": "object",
        "properties": {
          "workHours": {
            "type": "number",
            "description": "Total hours of actual work hours for the work hour log. Sum of ordinary work, overtime and paid leave.",
            "format": "double"
          },
          "regularHours": {
            "type": "number",
            "description": "Total work time, in hours, for all periods in this work hour log. ",
            "format": "double"
          },
          "overtimeHours": {
            "type": "number",
            "description": "Total overtime, in hours, of all periods in this work hour log.",
            "format": "double"
          },
          "unpaidAbscenceHours": {
            "type": "number",
            "description": "Total unpaid leave/absence, in hours, for all periods in this work hour log. Ex. day off or unpaid short time leave. ",
            "format": "double"
          },
          "paidAbscenceHours": {
            "type": "number",
            "description": "Total paid leave/absence, in hours, for all periods in this work hour log. Ex. vacation, paid sick leave and/or parental leave. ",
            "format": "double"
          },
          "lunchHours": {
            "type": "number",
            "description": "Total unpaid lunch, in hours, for all periods in this work hour log. Note that unpaid lunch is only calculated if the sum of work time, overtime and paid leave exceeds 5.5 hours.",
            "format": "double"
          },
          "flexHours": {
            "type": "number",
            "description": "Change/difference in flextime account. Calculated by substracting ordinary work and paid- and unpaid absence from scheduled hours. Will only be set if status is 4 or more, and work arrangement allows flexitime. Will not be set if work hour log contains any periods with partial- or graded sick leave.",
            "format": "double"
          }
        }
      },
      "WorkMonth": {
        "type": "object",
        "properties": {
          "workMonthId": {
            "type": "integer",
            "description": "Work month identifier",
            "format": "int32"
          },
          "workMonthLink": {
            "type": "string",
            "description": "Work month reference"
          }
        }
      },
      "WorkPeriod1": {
        "type": "object",
        "properties": {
          "workPeriodId": {
            "type": "integer",
            "description": "Work period, allowance or adjustment  identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Status of work period, allowance or adjustment "
          },
          "isIn": {
            "type": "boolean",
            "description": "Type of work period, allowance or adjustment."
          },
          "timeType": {
            "type": "object",
            "properties": {
              "timeTypeId": {
                "type": "integer",
                "description": "Time type identifier",
                "format": "int32"
              },
              "overtimePercent": {
                "type": "integer",
                "description": "Overtime percentage",
                "format": "int32"
              },
              "category": {
                "type": "integer",
                "description": "Category of the time type",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "description": "Description of the time type"
              },
              "timeTypeLink": {
                "type": "string",
                "description": "Reference to the time type"
              }
            }
          },
          "source": {
            "type": "string",
            "description": "Source of the period data"
          },
          "note": {
            "type": "string",
            "description": "Note/comment of the work period, allowance or adjustment "
          },
          "date": {
            "type": "string",
            "description": "Date of the work period, allowance or adjustment . This date might differ from the date of the workday if the period is across midnight.",
            "format": "date"
          },
          "start": {
            "type": "object",
            "properties": {
              "time": {
                "type": "time",
                "description": "Start time of work period or allowance"
              },
              "site": {
                "type": "string",
                "description": "Site at start time of work period"
              }
            }
          },
          "end": {
            "type": "object",
            "properties": {
              "time": {
                "type": "time",
                "description": "End time of work period or allowance"
              },
              "site": {
                "type": "string",
                "description": "Site at end time of work period"
              }
            }
          },
          "total": {
            "type": "object",
            "properties": {
              "hours": {
                "type": "number",
                "description": "Total time, in hours, of the work allowance",
                "format": "double"
              },
              "time": {
                "type": "time",
                "description": "Total time, in hours and minutes, of the work allowance"
              }
            }
          },
          "shortTermAbsence": {
            "type": "object",
            "properties": {
              "shortTermAbsenceId": {
                "type": "integer",
                "description": "Short-term absence identifier",
                "format": "int32"
              },
              "shortTermAbsenceLink": {
                "type": "string",
                "description": "Short-term absence reference"
              }
            }
          },
          "workPeriodLink": {
            "type": "string",
            "description": "Work period, allowance or adjustment reference"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the role" },
          "roleLink": { "type": "string", "description": "Role reference" }
        }
      },
      "Object": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "Approver": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Product1": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "certificateId": {
            "type": "integer",
            "description": "Certificate identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of certificate",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of certificate" },
          "issuer": {
            "type": "string",
            "description": "Issuer of certificate"
          },
          "certificateLink": {
            "type": "string",
            "description": "Certificate reference"
          }
        }
      },
      "RoleExpectation": {
        "type": "object",
        "properties": {
          "roleExpectationId": {
            "type": "integer",
            "description": "Role expectation identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "expectedScore": {
            "type": "integer",
            "description": "The score that is expected for this competence on this role",
            "format": "int32"
          },
          "role": {
            "type": "object",
            "properties": {
              "roleId": {
                "type": "integer",
                "description": "Role identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the role" },
              "roleLink": { "type": "string", "description": "Role reference" }
            }
          },
          "roleExpectationLink": {
            "type": "string",
            "description": "Competence role expectation link"
          }
        }
      },
      "CourseDiploma": {
        "type": "object",
        "properties": {
          "courseDiplomaId": {
            "type": "integer",
            "description": "Course diplomas identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time this diploma was created",
            "format": "date"
          },
          "startDate": {
            "type": "string",
            "description": "Date the course started",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Date the course ended",
            "format": "date"
          },
          "numberOfAttachments": {
            "type": "integer",
            "description": "Attachments/files linked to this object",
            "format": "int32"
          },
          "employee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The employee who received the course diploma"
          },
          "course": {
            "type": "object",
            "properties": {
              "courseId": {
                "type": "integer",
                "description": "Course identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of course" },
              "courseProvider": {
                "type": "string",
                "description": "Name of the provider of the course"
              },
              "courseLink": {
                "type": "string",
                "description": "Course reference"
              }
            }
          },
          "courseDiplomaLink": {
            "type": "string",
            "description": "Course diploma item link"
          }
        }
      },
      "ParentBookmark": {
        "type": "object",
        "properties": {
          "parentBookmarkId": {
            "type": "integer",
            "description": "A reference to the parent bookmark id. Will contain the BookmarkId of the parent bookmark.",
            "format": "int32"
          },
          "parentBookmarkLink": {
            "type": "string",
            "description": "An parent object reference. Will link to the parent bookmark"
          }
        }
      },
      "RootBookmark": {
        "type": "object",
        "properties": {
          "rootBookmarkId": {
            "type": "integer",
            "description": "A reference to the root bookmark item (the root of the tree). Will contain the BookmarkId of the bookmark at the root of the tree.",
            "format": "int32"
          },
          "rootBookmarkLink": {
            "type": "string",
            "description": "A root object reference. Will link to the bookmark at the root of the tree."
          }
        }
      },
      "CompetenceScore": {
        "type": "object",
        "properties": {
          "competenceScoreId": {
            "type": "integer",
            "description": "Employee competence score identifier",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "description": "The evaluated score for the competence",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Comment made for the evaluation of the competence for the employee"
          },
          "approvedAt": {
            "type": "string",
            "description": "Date the competence was approved",
            "format": "date-time"
          },
          "approvedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "string",
                "description": "Employee identifier"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Name of person that approved the competence"
          },
          "competence": {
            "type": "object",
            "properties": {
              "competenceId": {
                "type": "integer",
                "description": "Competence identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of competence",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the competence"
              },
              "description": {
                "type": "string",
                "description": "A detailed description of the competence."
              },
              "isCategory": {
                "type": "boolean",
                "description": "Indicates if a competence is functioning as a category of competencies"
              },
              "hasChildren": {
                "type": "boolean",
                "description": "Indicates if a competence is a category and has children"
              },
              "parentCompetence": {
                "type": "object",
                "properties": {
                  "competenceId": {
                    "type": "integer",
                    "description": "Competence identifier",
                    "format": "int32"
                  },
                  "competenceLink": {
                    "type": "string",
                    "description": "Competence reference"
                  }
                },
                "description": "The category or subcategory a competence is divided into."
              },
              "competenceLink": {
                "type": "string",
                "description": "Competence reference"
              }
            }
          },
          "competenceScoreLink": {
            "type": "string",
            "description": "Employee competence score link"
          }
        }
      },
      "Degree": {
        "type": "object",
        "properties": {
          "degreeId": {
            "type": "integer",
            "description": "Employee education degree identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the education" },
          "type": {
            "type": "string",
            "description": "The diploma description"
          },
          "description": {
            "type": "string",
            "description": "Description of the education"
          },
          "graduationDate": {
            "type": "string",
            "description": "Date of graduation",
            "format": "date"
          },
          "numberOfAttachments": {
            "type": "integer",
            "description": "The number of attachments this object has.",
            "format": "int32"
          },
          "institution": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the institution for the education"
              },
              "city": {
                "type": "string",
                "description": "City for the education"
              }
            }
          },
          "degreeLink": {
            "type": "string",
            "description": "Employee education reference"
          }
        }
      },
      "WorkSchedule": {
        "type": "object",
        "properties": {
          "workScheduleId": {
            "type": "integer",
            "description": "Work schedule identifier",
            "format": "int32"
          },
          "workScheduleLink": {
            "type": "string",
            "description": "Work schedule reference"
          }
        },
        "description": "Work schedule used for calculating totals in this work hour log. Which work schedule to use is based on employee and date. "
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "integer",
            "description": "The starting month of this work experience",
            "format": "int32"
          },
          "startYear": {
            "type": "integer",
            "description": "The starting year of this work experience",
            "format": "int32"
          },
          "endMonth": {
            "type": "integer",
            "description": "The ending month of this work experience",
            "format": "int32"
          },
          "endYear": {
            "type": "integer",
            "description": "The ending year of this work experience",
            "format": "int32"
          }
        }
      },
      "Cost": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) of getting each unit in stock, including purchase price, duties, charges, freight etc.",
            "format": "double"
          }
        }
      },
      "Total3": {
        "type": "object",
        "properties": {
          "hoursOrDays": {
            "type": "number",
            "description": "Total time, in hours, of the work adjustment",
            "format": "double"
          },
          "time": {
            "type": "time",
            "description": "Total time, in hours and minutes, of the work adjustment"
          }
        }
      },
      "Location2": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Unique abbreviation/short name of the location"
          }
        }
      },
      "ProductStructureVersion": {
        "type": "object",
        "properties": {
          "productStructureVersionId": {
            "type": "integer",
            "description": "Product structure identifier",
            "format": "int32"
          },
          "productStructureVersionLink": {
            "type": "string",
            "description": "Product structure reference"
          }
        }
      },
      "Product2": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        },
        "description": "References ART for creating RQMs (requirements) in a production structure"
      },
      "Carrier": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "integer",
            "description": "Carrier identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of carrier" },
          "carrierLink": {
            "type": "string",
            "description": "Carrier reference"
          }
        }
      },
      "Location3": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of location" },
          "shortName": {
            "type": "string",
            "description": "Unique abbreviation/short name of the location"
          },
          "locationLink": {
            "type": "string",
            "description": "Location reference"
          }
        }
      },
      "Object1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "Identifier of the object"
          }
        }
      },
      "HighlightedNotification": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "description": "Notification identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the notification",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "type": "string",
                "description": "Notification type identifier"
              },
              "category": {
                "type": "string",
                "description": "Category of notification type (warning, information etc)"
              },
              "notificationTypeLink": {
                "type": "string",
                "description": "Notification type reference"
              }
            }
          },
          "notificationLink": {
            "type": "string",
            "description": "Notification reference"
          }
        }
      },
      "Price1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "Manufacturer": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          },
          "shortName": {
            "type": "string",
            "description": "Shortname/code of the manufacturer "
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Manufacturer reference"
          }
        }
      },
      "ManufacturersProduct": {
        "type": "object",
        "properties": {
          "manufacturersProductId": {
            "type": "integer",
            "description": "Manufacturer product identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Manufacturers name of the product. Also known as Manufacturer Part Number (MPN)."
          },
          "manufacturersProductLink": {
            "type": "string",
            "description": "Manufacturers product reference"
          }
        }
      },
      "Totals8": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "Shipment": {
        "type": "object",
        "properties": {
          "deliveryTerms": {
            "type": "string",
            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
          },
          "deliveryTermPlace": {
            "type": "string",
            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
          },
          "shippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "shippingServiceLink": {
                "type": "string",
                "description": "Shipping service reference"
              }
            }
          }
        }
      },
      "ShippingService": {
        "type": "object",
        "properties": {
          "shippingServiceId": {
            "type": "integer",
            "description": "Shipping service identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of shipping service"
          },
          "shippingServiceLink": {
            "type": "string",
            "description": "Shipping service reference"
          }
        }
      },
      "ProductStructureAssignment": {
        "type": "object",
        "properties": {
          "productStructureMaterial": {
            "type": "object",
            "properties": {
              "productStructureMaterialId": {
                "type": "integer",
                "description": "Product structure material identifier",
                "format": "int32"
              },
              "productStructureOperation": {
                "type": "object",
                "properties": {
                  "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number of the product structure operation. Unique within a product structure.",
                    "format": "int32"
                  }
                }
              },
              "productStructureVersion": {
                "type": "object",
                "properties": {
                  "productStructureVersionId": {
                    "type": "integer",
                    "description": "Product structure identifier",
                    "format": "int32"
                  },
                  "productStructureVersionLink": {
                    "type": "string",
                    "description": "Product structure reference"
                  }
                }
              }
            }
          },
          "productStructureOperation": {
            "type": "object",
            "properties": {
              "productStructureOperationId": {
                "type": "integer",
                "description": "Product structure operation identifier",
                "format": "int32"
              },
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number of the product structure operation. Unique within a product structure.",
                "format": "int32"
              },
              "productStructureVersion": {
                "type": "object",
                "properties": {
                  "productStructureVersionId": {
                    "type": "integer",
                    "description": "Product structure identifier",
                    "format": "int32"
                  },
                  "productStructureVersionLink": {
                    "type": "string",
                    "description": "Product structure reference"
                  }
                }
              }
            }
          }
        }
      },
      "Object2": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "Product3": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "type": { "type": "string", "description": "Type of product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "ProductStructure": {
        "type": "object",
        "properties": {
          "productStructureId": {
            "type": "integer",
            "description": "Product structure reference",
            "format": "int32"
          },
          "productStructureLink": {
            "type": "string",
            "description": "Product structure reference"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "name": {
            "type": "string",
            "description": "Name of the customer/supplier, or last name if it is a person. "
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer/supplier"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "ShippingService1": {
        "type": "object",
        "properties": {
          "shippingServiceId": {
            "type": "integer",
            "description": "Shipping service identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of shipping service"
          },
          "shippingServiceLink": {
            "type": "string",
            "description": "Shipping service reference"
          },
          "carrier": {
            "type": "object",
            "properties": {
              "carrierId": {
                "type": "integer",
                "description": "Carrier identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of carrier" },
              "carrierLink": {
                "type": "string",
                "description": "Carrier reference"
              }
            }
          }
        }
      },
      "PriceConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts.",
            "format": "double"
          }
        }
      },
      "Accounting1": {
        "type": "object",
        "properties": {
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "department": {
            "type": "object",
            "properties": {
              "departmentId": {
                "type": "integer",
                "description": "Department identifier",
                "format": "int32"
              },
              "departmentLink": {
                "type": "string",
                "description": "Finance department reference"
              }
            },
            "description": "The department related to the item. One of the system/fixed account dimensions."
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              },
              "financeProjectLink": {
                "type": "string",
                "description": "Finance project reference"
              }
            },
            "description": "The finance project related to the item. One of the system/fixed account dimensions."
          }
        },
        "description": "Accounting details for the item, including fixed/system dimensions. For all dimensions, see seperate resource. "
      },
      "MeasurementUnit": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "type": "integer",
            "description": "Measurement unit identifier",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Measurement unit (ex. mm, km, dl, kg)"
          },
          "measurementUnitLink": {
            "type": "string",
            "description": "Material unit reference"
          }
        }
      },
      "Supplier3": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Location4": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "shortName": {
            "type": "string",
            "description": "Unique abbreviation/short name of the location"
          },
          "locationLink": {
            "type": "string",
            "description": "Location reference"
          }
        }
      },
      "Tracking": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "type": "string",
            "description": "Tracking number for this  arriving waybill"
          }
        }
      },
      "Sender1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "name": {
            "type": "string",
            "description": "Name retrieved from the object"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The sender of the arriving waybill. Can be a customer or a supplier."
      },
      "Customs": {
        "type": "object",
        "properties": {
          "reportDate": {
            "type": "string",
            "description": "Date when this arriving waybill were printed on the goods journal",
            "format": "date"
          },
          "shipFromCountryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country this consignment was shipped from."
          },
          "shipToCountryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country where this consignment is received"
          },
          "transportMethod": {
            "type": "string",
            "description": "A code for which transport (vehicle, aircraft, or ship)  that was used when the goods were crossing the border - i.e. plane, train, car, car on ferry and so on."
          },
          "importDeclarationId": {
            "type": "string",
            "description": "Import declaration identifier. Customs authorites sequal number for import declaration of goods that have been a part of bonded warehouse."
          },
          "bondedWarehouse": {
            "type": "object",
            "properties": {
              "carriersGoodsNumber": {
                "type": "string",
                "description": "Carriers goods number for bonded warehouse. This allow the carrier to transport this goods domestic, -from the border to the owner of a bonded warehouse."
              },
              "warehouseOwnersGoodsNumber": {
                "type": "string",
                "description": "Warehouse owners goods number for bonded warehouse. Consist of 'year + bonded warehouse code +location code + day number (day of the year) + number of consignment today '. Is sent to carrier to confirm that goods have been received to bonded warehouse."
              }
            }
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "The requested delivery date retrieved from the owner item. Note that this field only will be valid if the owner item has the  requested delivery date field.",
            "format": "date"
          },
          "confirmedDeliveryDate": {
            "type": "string",
            "description": "The confirmed delivery date retrieved from the owner item. Note that this field only will be valid if the owner item has the  confirmed delivery date field.",
            "format": "date"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity from the owner item.",
            "format": "double"
          },
          "object": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "Manufacturer1": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Shortname/code of the manufacturer "
          }
        }
      },
      "ExclusivelyForCustomer": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        },
        "description": "If customer is specified, this customer owns the goods in stock/the product that is being manufactured"
      },
      "Totals9": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer",
            "description": "Accumulated number of packages from the shipments that are assigned to this departing waybill.",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "Accumulated gross weight from the shipments that are assigned to this departing waybill",
            "format": "double"
          }
        }
      },
      "Address1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          }
        }
      },
      "GoodsReception": {
        "type": "object",
        "properties": {
          "goodsReceptionId": {
            "type": "integer",
            "description": "Goods reception identifier",
            "format": "int32"
          },
          "goodsReceptionLink": {
            "type": "string",
            "description": "Goods reception reference"
          }
        }
      },
      "GoodsReceptionItem": {
        "type": "object",
        "properties": {
          "goodsReceptionItemId": {
            "type": "integer",
            "description": "Item-/line-number of the goods reception",
            "format": "int32"
          },
          "goodsReception": {
            "type": "object",
            "properties": {
              "goodsReceptionId": {
                "type": "integer",
                "description": "Goods reception identifier",
                "format": "int32"
              },
              "goodsReceptionLink": {
                "type": "string",
                "description": "Goods reception reference"
              }
            }
          },
          "goodsReceptionItemLink": {
            "type": "string",
            "description": "Goods reception item reference"
          }
        },
        "description": "The goods reception created at the new location. Will not be set before the goods transfer is completed."
      },
      "DepartingWaybill": {
        "type": "object",
        "properties": {
          "departingWaybillId": {
            "type": "integer",
            "description": "Departing waybill identifier",
            "format": "int32"
          },
          "departingWaybillLink": {
            "type": "string",
            "description": "Departing waybill reference"
          }
        }
      },
      "PickOperation": {
        "type": "object",
        "properties": {
          "pickOperationId": {
            "type": "integer",
            "description": "Pick operation identifier",
            "format": "int32"
          },
          "pickOperationLink": {
            "type": "string",
            "description": "Pick operation reference"
          }
        }
      },
      "PickList": {
        "type": "object",
        "properties": {
          "pickListId": {
            "type": "integer",
            "description": "Pick list identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the pick list",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "name": { "type": "string", "description": "Name of the pick list" },
          "routingStrategy": {
            "type": "integer",
            "description": "Reference to a specific sort type / domain value (DOV)",
            "format": "int32"
          },
          "isPickingInProgress": {
            "type": "boolean",
            "description": "Indicates if someone has confirmed pick on the picking list"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "productStructureOperation": {
            "type": "object",
            "properties": {
              "productStructureOperationId": {
                "type": "integer",
                "description": "Product structure operation identifier",
                "format": "int32"
              },
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number of the product structure operation. Unique within a product structure.",
                "format": "int32"
              },
              "productStructure": {
                "type": "object",
                "properties": {
                  "productStructureId": {
                    "type": "integer",
                    "description": "Product structure reference",
                    "format": "int32"
                  },
                  "productStructureLink": {
                    "type": "string",
                    "description": "Product structure reference"
                  }
                }
              },
              "productStructureOperationLink": {
                "type": "string",
                "description": "Product structure operation reference"
              }
            },
            "description": "Product structure operation reference"
          },
          "projectOrder": {
            "type": "object",
            "properties": {
              "projectOrderId": {
                "type": "integer",
                "description": "Project order identifier",
                "format": "int32"
              },
              "projectOrderLink": {
                "type": "string",
                "description": "Project order reference"
              }
            },
            "description": "Reference to the project order this picking list belongs to"
          }
        }
      },
      "TransportManagementSystem": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "string",
            "description": "Carrier id in the external Transport Management System"
          },
          "aPIKey": {
            "type": "string",
            "description": "Customer id in the external Transport Management System."
          },
          "aPISecret": {
            "type": "string",
            "description": "Api key used in communication with external Transport Management System."
          }
        }
      },
      "KeyFigure": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "GroupBy can be \"RUT\" (RentalUnit), \"RUTYEARMONTH\" ( RentalUnit, Year, Month) or \"YEARMONTH\" (Year or month)"
          },
          "description": {
            "type": "string",
            "description": "Description of the key."
          },
          "occurrences": {
            "type": "integer",
            "description": "Number of occurrences with the specified key.",
            "format": "int32"
          }
        }
      },
      "Totals10": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "freightAmount": {
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "feeAmount": {
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in object currency, excluding VAT.",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total value added tax in object currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in object currency, including VAT",
            "format": "double"
          }
        }
      },
      "SpecialHandling": {
        "type": "object",
        "properties": {
          "specialHandlingId": {
            "type": "integer",
            "description": "Special handling identifier",
            "format": "int32"
          },
          "specialHandlingLink": {
            "type": "string",
            "description": "Special handling code reference"
          }
        },
        "description": "Special handling to use for this shipment."
      },
      "DepartingShipment": {
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "number",
            "description": "Shipment identifier",
            "format": "int64"
          },
          "departingWaybill": {
            "type": "object",
            "properties": {
              "departingWaybillId": {
                "type": "integer",
                "description": "Departing waybill identifier",
                "format": "int32"
              },
              "departingWaybillLink": {
                "type": "string",
                "description": "Departing waybill reference"
              }
            }
          },
          "shipmentLink": {
            "type": "string",
            "description": "Shipment reference"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "type": "string",
            "description": "Terms of payment. Defaut value is retrieved from the supplier. "
          }
        }
      },
      "KeyFigure1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "key": {
            "type": "string",
            "description": "GroupBy can be \"RUT\" (RentalUnit), \"RUTYEARMONTH\" ( RentalUnit, Year, Month) or \"YEARMONTH\" (Year or month)"
          },
          "description": {
            "type": "string",
            "description": "Description of the key."
          },
          "occurrences": {
            "type": "integer",
            "description": "Number of occurrences with the specified key.",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "CarrierService": {
        "type": "object",
        "properties": {
          "carrierServiceId": {
            "type": "integer",
            "description": "Shipping service identifier from arhive for shipping services",
            "format": "int32"
          },
          "carriersId": {
            "type": "string",
            "description": "Carrier service identifier"
          },
          "description": {
            "type": "string",
            "description": "Description of the carriers shipping service"
          },
          "carrierServiceLink": {
            "type": "string",
            "description": "Service reference"
          }
        }
      },
      "TrackingNumberSeries": {
        "type": "object",
        "properties": {
          "trackingNumberSeriesId": {
            "type": "integer",
            "description": "Tracking number series identifier",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Tells if this serial of tracking number is to be allocated to each package (\"PACKAGE\") or for at total shipment (\"SHIPMENT\")"
          },
          "trackingNumberLink": {
            "type": "string",
            "description": "Tracking number series reference"
          }
        }
      },
      "StockValue": {
        "type": "object",
        "properties": {
          "costingMethod": {
            "type": "string",
            "description": "Costing method used for stock valuation"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "quantity": {
            "type": "number",
            "description": "Remaining quantity in stock",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Total stock value in costing method",
            "format": "double"
          }
        },
        "description": "Stock value of stock item. These values might change depending on location and costing method provided."
      },
      "FreightValue": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "total": {
            "type": "number",
            "description": "Total freight value in costing method\r\n",
            "format": "double"
          }
        },
        "description": "Freight value of stock item. These values might change depending on location and costing method provided.\r\n"
      },
      "StockValueChange": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "total": {
            "type": "number",
            "description": "Changes in total stock value",
            "format": "double"
          }
        }
      },
      "FreightValueChange": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "total": {
            "type": "number",
            "description": "Total changes in freight value",
            "format": "double"
          }
        }
      },
      "WorkInProgressChange": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "total": {
            "type": "number",
            "description": "Total change in WIP value",
            "format": "double"
          }
        }
      },
      "Manufacturer2": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Company name of the manufacturer."
          },
          "shortName": {
            "type": "string",
            "description": "Shortname/code of the manufacturer "
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Manufacturer reference"
          }
        }
      },
      "GoodsReception1": {
        "type": "object",
        "properties": {
          "goodsReceptionId": {
            "type": "integer",
            "description": "Goods reception identifier",
            "format": "int32"
          },
          "supplier": {
            "type": "object",
            "properties": {
              "supplierId": {
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
              },
              "supplierLink": {
                "type": "string",
                "description": "Supplier reference"
              }
            }
          },
          "goodsReceptionLink": {
            "type": "string",
            "description": "Goods reception reference"
          }
        }
      },
      "StockAccrual": {
        "type": "object",
        "properties": {
          "stockAccrualId": {
            "type": "integer",
            "description": "Stock accrual identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of stock accrual",
            "format": "int32"
          },
          "stockAccrualLink": {
            "type": "string",
            "description": "Stock accrual reference"
          }
        }
      },
      "GoodsReceptionItem1": {
        "type": "object",
        "properties": {
          "goodsReceptionItemId": {
            "type": "integer",
            "description": "Item-/line-number of the goods reception",
            "format": "int32"
          },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "description": {
                "type": "string",
                "description": "Description of the product"
              },
              "type": { "type": "string", "description": "Type of product" },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          },
          "goodsReception": {
            "type": "object",
            "properties": {
              "goodsReceptionId": {
                "type": "integer",
                "description": "Goods reception identifier",
                "format": "int32"
              },
              "supplier": {
                "type": "object",
                "properties": {
                  "supplierId": {
                    "type": "integer",
                    "description": "RamBase supplier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
                  },
                  "supplierLink": {
                    "type": "string",
                    "description": "Supplier reference"
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "locationId": {
                    "type": "integer",
                    "description": "Company identifier",
                    "format": "int32"
                  },
                  "shortName": {
                    "type": "string",
                    "description": "Unique abbreviation/short name of the location"
                  },
                  "locationLink": {
                    "type": "string",
                    "description": "Location reference"
                  }
                }
              },
              "goodsReceptionLink": {
                "type": "string",
                "description": "Goods reception reference"
              }
            }
          },
          "goodsReceptionItemLink": {
            "type": "string",
            "description": "Goods reception item reference"
          }
        }
      },
      "StockValue1": {
        "type": "object",
        "properties": {
          "costingMethod": {
            "type": "string",
            "description": "Costing method to use for stock valuation. "
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "cost": {
            "type": "number",
            "description": "Cost used in stock valuation ",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity used for calculating stock value ",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Total stock value ",
            "format": "double"
          }
        }
      },
      "FreightValue1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "freight": {
            "type": "number",
            "description": "Freight used in stock valuation",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Total freight value",
            "format": "double"
          }
        }
      },
      "FreightValueConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "cost": {
            "type": "number",
            "description": "Freight used in stock valuation",
            "format": "double"
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Total freight value",
            "format": "double"
          }
        }
      },
      "Product4": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Assignment register identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Location5": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          },
          "locationLink": {
            "type": "string",
            "description": "Location reference"
          }
        }
      },
      "CountedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Employee who perform the stock taking"
      },
      "FromStockLocation": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "stockLocationLink": {
            "type": "string",
            "description": "Stock location reference"
          }
        },
        "description": "If FromStockLocationId is given, stock taking will be created for products that are stored within the area of this Id and ToStockLocationId."
      },
      "ToStockLocation": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "stockLocationLink": {
            "type": "string",
            "description": "Stock location reference"
          }
        },
        "description": "If ToStockLocationId is given, stock counting will be created for products that are stored within the area of FromStockLocationId and this Id"
      },
      "Range": {
        "type": "object",
        "properties": {
          "startTrackingNumber": {
            "type": "number",
            "description": "First tracking number in the series",
            "format": "int64"
          },
          "endTrackingNumber": {
            "type": "number",
            "description": "Last tracking number in the series",
            "format": "int64"
          },
          "warningTrackingNumber": {
            "type": "number",
            "description": "When this tracking number is reached, a warning will be sent to users that belongs to a specific role",
            "format": "int64"
          },
          "currentTrackingNumber": {
            "type": "number",
            "description": "The tracking number that will be used for next package/shipment",
            "format": "int64"
          }
        }
      },
      "NextRange": {
        "type": "object",
        "properties": {
          "startTrackingNumber": {
            "type": "number",
            "description": "First tracking number in next range of tracking numbers, which will be activated when the current range of tracking number series is ended",
            "format": "int64"
          },
          "endTrackingNumber": {
            "type": "number",
            "description": "Last tracking number in next range of tracking numbers, which will be activated when the current range of tracking number series is ended",
            "format": "int64"
          },
          "warningTrackingNumber": {
            "type": "number",
            "description": "Warning tracking number in next range of tracking numbers, which will be activated when the current range of tracking number series is ended",
            "format": "int64"
          }
        }
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "description": "Assignment identifier ",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity assigned",
            "format": "double"
          },
          "assignedTo": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            }
          },
          "productStructureAssignment": {
            "type": "object",
            "properties": {
              "productStructureMaterial": {
                "type": "object",
                "properties": {
                  "productStructureMaterialId": {
                    "type": "integer",
                    "description": "Product structure material identifier",
                    "format": "int32"
                  },
                  "productStructureOperation": {
                    "type": "object",
                    "properties": {
                      "sequenceNumber": {
                        "type": "integer",
                        "description": "Sequence number of the product structure operation. Unique within a product structure.",
                        "format": "int32"
                      }
                    }
                  },
                  "productStructureVersion": {
                    "type": "object",
                    "properties": {
                      "productStructureVersionId": {
                        "type": "integer",
                        "description": "Product structure identifier",
                        "format": "int32"
                      },
                      "productStructureVersionLink": {
                        "type": "string",
                        "description": "Product structure reference"
                      }
                    }
                  }
                }
              },
              "productStructureOperation": {
                "type": "object",
                "properties": {
                  "productStructureOperationId": {
                    "type": "integer",
                    "description": "Product structure operation identifier",
                    "format": "int32"
                  },
                  "sequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number of the product structure operation. Unique within a product structure.",
                    "format": "int32"
                  },
                  "productStructureVersion": {
                    "type": "object",
                    "properties": {
                      "productStructureVersionId": {
                        "type": "integer",
                        "description": "Product structure identifier",
                        "format": "int32"
                      },
                      "productStructureVersionLink": {
                        "type": "string",
                        "description": "Product structure reference"
                      }
                    }
                  }
                }
              }
            }
          },
          "picking": {
            "type": "object",
            "properties": {
              "pickStatus": {
                "type": "integer",
                "description": "Status of the picking from this assignment. Note that the pick status of the assignment might differ from the status of the pick operation of the assigned item. ",
                "format": "int32"
              },
              "pickedQuantity": {
                "type": "number",
                "description": "Total picked quantity of this assignment. Will not get a value before pick operation has started.",
                "format": "double"
              }
            }
          },
          "assignmentRegister": {
            "type": "object",
            "properties": {
              "assignmentRegisterId": {
                "type": "integer",
                "description": "Assignment register identifier",
                "format": "int32"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of assignment register"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "itemId": {
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "productStructureRevision": {
                    "type": "string",
                    "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
                  },
                  "measurementUnit": {
                    "type": "object",
                    "properties": {
                      "measurementUnitId": {
                        "type": "integer",
                        "description": "Material unit reference",
                        "format": "int32"
                      },
                      "measurementUnitLink": {
                        "type": "string",
                        "description": "Material unit reference"
                      }
                    }
                  },
                  "object": {
                    "type": "object",
                    "properties": {
                      "database": {
                        "type": "string",
                        "description": "Database of the object"
                      },
                      "objectId": {
                        "type": "integer",
                        "description": "Identifier of the object",
                        "format": "int32"
                      },
                      "objectType": {
                        "type": "string",
                        "description": "Type of object"
                      },
                      "objectLink": {
                        "type": "string",
                        "description": "API reference to the object"
                      }
                    }
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              },
              "assignmentRegisterLink": {
                "type": "string",
                "description": "Assignment register reference"
              }
            }
          },
          "assignmentLink": {
            "type": "string",
            "description": "Assignment reference"
          }
        }
      },
      "ReviewedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The userid that approved or declined the approvaltype"
      },
      "Approval1": {
        "type": "object",
        "properties": {
          "currentUserCanApprove": {
            "type": "boolean",
            "description": "True if current user is allowed to approve the notification."
          },
          "priority": {
            "type": "integer",
            "description": "Requested priority of the approval request.",
            "format": "int32"
          },
          "approvalRule": {
            "type": "object",
            "properties": {
              "approvalRuleId": {
                "type": "integer",
                "description": "Approval rule identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the approval rule"
              },
              "description": {
                "type": "string",
                "description": "Approval rule description"
              },
              "sendRequestToDefaultApprovers": {
                "type": "boolean",
                "description": "Send request to all approvers selected as default approvers"
              },
              "approvalRuleLink": {
                "type": "string",
                "description": "Approval rule reference"
              }
            }
          },
          "request": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Value which was approved (if approved)."
              },
              "comment": {
                "type": "string",
                "description": "Message entered by the user when requesting approval"
              },
              "approver": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                }
              }
            }
          },
          "response": {
            "type": "object",
            "properties": {
              "isApproved": {
                "type": "boolean",
                "description": "True if the notification needs approval, and is approved."
              },
              "comment": {
                "type": "string",
                "description": "Message entered by the user when approving or denying the approval request"
              },
              "reviewedAt": {
                "type": "string",
                "description": "Date and time of approvel.",
                "format": "date-time"
              },
              "reviewedBy": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "The userid that approved or declined the approvaltype"
              }
            }
          }
        }
      },
      "NotificationType1": {
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "type": "string",
            "description": "Notification type identifier"
          },
          "category": {
            "type": "string",
            "description": "Category of notification type (warning, information etc)"
          },
          "priority": {
            "type": "string",
            "description": "Priority of notification with this notification type."
          },
          "forwardNotifications": {
            "type": "boolean",
            "description": "True if notifications created with this definition will be forwarded when the owner object is forwarded."
          },
          "notificationTypeLink": {
            "type": "string",
            "description": "Notification type reference"
          }
        }
      },
      "Object3": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "status": {
            "type": "integer",
            "description": "Status of the item/object.",
            "format": "int32"
          },
          "shipment": {
            "type": "object",
            "properties": {
              "departingShipment": {
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "number",
                    "description": "Shipment identifier",
                    "format": "int64"
                  },
                  "shippingDate": {
                    "type": "string",
                    "description": "Date of which the shipment is ready/prepared to be shipped. Note that this may not be the date the shipment physically left the warehouse. Departing waybill holds this date.",
                    "format": "date"
                  },
                  "recipient": {
                    "type": "object",
                    "properties": {
                      "objectId": {
                        "type": "integer",
                        "description": "Identifier of the object",
                        "format": "int32"
                      },
                      "objectType": {
                        "type": "string",
                        "description": "Type of object"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the customer/supplier, or last name if it is a person. "
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of the customer/supplier"
                      },
                      "ramBaseKey": {
                        "type": "string",
                        "description": "Internal RamBase identifier of the object/item"
                      },
                      "objectLink": {
                        "type": "string",
                        "description": "API reference to the object"
                      }
                    }
                  },
                  "shipmentLink": {
                    "type": "string",
                    "description": "Shipment reference"
                  }
                }
              },
              "shippingService": {
                "type": "object",
                "properties": {
                  "shippingServiceId": {
                    "type": "integer",
                    "description": "Shipping service identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of shipping service"
                  },
                  "shippingServiceLink": {
                    "type": "string",
                    "description": "Shipping service reference"
                  }
                }
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "Tracking1": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "type": "string",
            "description": "Tracking number for this package"
          },
          "trackingUri": {
            "type": "string",
            "description": "Tracking uri for the package. The uri is generated based on set-up in the archive of  tracking number series, and might include the tracking number"
          }
        }
      },
      "Picking": {
        "type": "object",
        "properties": {
          "pickStatus": {
            "type": "integer",
            "description": "Status of the picking from this assignment. Note that the pick status of the assignment might differ from the status of the pick operation of the assigned item. ",
            "format": "int32"
          },
          "pickedQuantity": {
            "type": "number",
            "description": "Total picked quantity of this assignment. Will not get a value before pick operation has started.",
            "format": "double"
          }
        }
      },
      "Owner1": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "productStructureRevision": {
            "type": "string",
            "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
          },
          "measurementUnit": {
            "type": "object",
            "properties": {
              "measurementUnitId": {
                "type": "integer",
                "description": "Material unit reference",
                "format": "int32"
              },
              "measurementUnitLink": {
                "type": "string",
                "description": "Material unit reference"
              }
            }
          },
          "object": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "EndCustomer": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        },
        "description": "End customer"
      },
      "Price2": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "discount": {
            "type": "number",
            "description": "The discount for the item.",
            "format": "double"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "Product5": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "description": "Notification identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the notification",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "approval": {
            "type": "object",
            "properties": {
              "currentUserCanApprove": {
                "type": "boolean",
                "description": "True if current user is allowed to approve the notification."
              },
              "priority": {
                "type": "integer",
                "description": "Requested priority of the approval request.",
                "format": "int32"
              },
              "approvalRule": {
                "type": "object",
                "properties": {
                  "approvalRuleId": {
                    "type": "integer",
                    "description": "Approval rule identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the approval rule"
                  },
                  "description": {
                    "type": "string",
                    "description": "Approval rule description"
                  },
                  "sendRequestToDefaultApprovers": {
                    "type": "boolean",
                    "description": "Send request to all approvers selected as default approvers"
                  },
                  "approvalRuleLink": {
                    "type": "string",
                    "description": "Approval rule reference"
                  }
                }
              },
              "request": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value which was approved (if approved)."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when requesting approval"
                  },
                  "approver": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    }
                  }
                }
              },
              "response": {
                "type": "object",
                "properties": {
                  "isApproved": {
                    "type": "boolean",
                    "description": "True if the notification needs approval, and is approved."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when approving or denying the approval request"
                  },
                  "reviewedAt": {
                    "type": "string",
                    "description": "Date and time of approvel.",
                    "format": "date-time"
                  },
                  "reviewedBy": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    },
                    "description": "The userid that approved or declined the approvaltype"
                  }
                }
              }
            }
          },
          "regardingItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "type": "string",
                "description": "Notification type identifier"
              },
              "category": {
                "type": "string",
                "description": "Category of notification type (warning, information etc)"
              },
              "priority": {
                "type": "string",
                "description": "Priority of notification with this notification type."
              },
              "forwardNotifications": {
                "type": "boolean",
                "description": "True if notifications created with this definition will be forwarded when the owner object is forwarded."
              },
              "notificationTypeLink": {
                "type": "string",
                "description": "Notification type reference"
              }
            }
          },
          "notificationLink": {
            "type": "string",
            "description": "Notification reference"
          }
        }
      },
      "Address2": {
        "type": "object",
        "properties": {
          "country": { "type": "string", "description": "Name of country" },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          }
        }
      },
      "StockQueueItem": {
        "type": "object",
        "properties": {
          "stockQueueItemId": {
            "type": "integer",
            "description": "Stock queue item identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of stock queue item",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of stock queue item"
          },
          "queuedAt": {
            "type": "string",
            "description": "Date and time the item was queued",
            "format": "date-time"
          },
          "queuedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "Notification1": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "description": "Notification identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the notification",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "approval": {
            "type": "object",
            "properties": {
              "currentUserCanApprove": {
                "type": "boolean",
                "description": "True if current user is allowed to approve the notification."
              },
              "priority": {
                "type": "integer",
                "description": "Requested priority of the approval request.",
                "format": "int32"
              },
              "approvalRule": {
                "type": "object",
                "properties": {
                  "approvalRuleId": {
                    "type": "integer",
                    "description": "Approval rule identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the approval rule"
                  },
                  "description": {
                    "type": "string",
                    "description": "Approval rule description"
                  },
                  "sendRequestToDefaultApprovers": {
                    "type": "boolean",
                    "description": "Send request to all approvers selected as default approvers"
                  },
                  "approvalRuleLink": {
                    "type": "string",
                    "description": "Approval rule reference"
                  }
                }
              },
              "request": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value which was approved (if approved)."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when requesting approval"
                  },
                  "approver": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    }
                  }
                }
              },
              "response": {
                "type": "object",
                "properties": {
                  "isApproved": {
                    "type": "boolean",
                    "description": "True if the notification needs approval, and is approved."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when approving or denying the approval request"
                  },
                  "reviewedAt": {
                    "type": "string",
                    "description": "Date and time of approvel.",
                    "format": "date-time"
                  },
                  "reviewedBy": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    },
                    "description": "The userid that approved or declined the approvaltype"
                  }
                }
              }
            }
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "type": "string",
                "description": "Notification type identifier"
              },
              "category": {
                "type": "string",
                "description": "Category of notification type (warning, information etc)"
              },
              "priority": {
                "type": "string",
                "description": "Priority of notification with this notification type."
              },
              "forwardNotifications": {
                "type": "boolean",
                "description": "True if notifications created with this definition will be forwarded when the owner object is forwarded."
              },
              "notificationTypeLink": {
                "type": "string",
                "description": "Notification type reference"
              }
            }
          },
          "notificationLink": {
            "type": "string",
            "description": "Notification reference"
          }
        }
      },
      "AssignedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "AssignedTo1": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "ProductClassification": {
        "type": "object",
        "properties": {
          "productClassificationId": {
            "type": "string",
            "description": "Product classification identifier"
          },
          "productClassificationLink": {
            "type": "string",
            "description": "Product classification reference"
          }
        }
      },
      "ExclusivelyFor": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "name": {
            "type": "string",
            "description": "Name of the customer/supplier, or last name if it is a person. "
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer/supplier"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "GeneralLedgerAccount2": {
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          },
          "generalLedgerAccountLink": {
            "type": "string",
            "description": "General ledger account reference"
          }
        }
      },
      "Department1": {
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "description": "Department identifier",
            "format": "int32"
          },
          "departmentLink": {
            "type": "string",
            "description": "Finance department reference"
          }
        },
        "description": "The department related to the item. One of the system/fixed account dimensions."
      },
      "FinanceProject1": {
        "type": "object",
        "properties": {
          "financeProjectId": {
            "type": "integer",
            "description": "Finance project identifier",
            "format": "int32"
          },
          "financeProjectLink": {
            "type": "string",
            "description": "Finance project reference"
          }
        },
        "description": "The finance project related to the item. One of the system/fixed account dimensions."
      },
      "ForwardedFromItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "RegardingItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "MessageParameter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of the message parameter. Found in the message of the notification definition."
          },
          "value": {
            "type": "string",
            "description": "The value that replaces the key in the message of the notification definition."
          }
        }
      },
      "Freight": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netPrice": {
            "type": "number",
            "description": "The freigth price for this package",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "description": "Freight costs of this package",
            "format": "double"
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "description": "Height of this package. Measurement unit is configured in the location archive.",
            "format": "double"
          },
          "length": {
            "type": "number",
            "description": "Length of this package. Measurement unit is configured in the location arhive",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "Width of this package. Measurement unit is specified in location archive.",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "description": "Volume of this package.  The volume is not necessarily simply the product of length, width and height, this only applies for cuboid packages. Therefore the system only proposes this simple calculation if length, width and height are filled and the volume is still empty; but as soon as already a value exists there, it will not be changed automatical any more, for it could have been especially entered for this package.",
            "format": "double"
          }
        }
      },
      "Totals11": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "discountAmount": {
            "type": "number",
            "description": "The items discount amount.",
            "format": "double"
          },
          "grossAmount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining value of item in document currency. The sum of remaining quantity and open forwarded quantity, multiplied with netprice",
            "format": "double"
          }
        }
      },
      "TotalsConverted6": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossAmount": {
            "type": "number",
            "description": "Total gross amount in company currency.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Total net amount in company currency.",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining amount in company currency.",
            "format": "double"
          }
        }
      },
      "Accounting2": {
        "type": "object",
        "properties": {
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              }
            }
          },
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "department": {
            "type": "object",
            "properties": {
              "departmentId": {
                "type": "integer",
                "description": "Department identifier",
                "format": "int32"
              },
              "departmentLink": {
                "type": "string",
                "description": "Finance department reference"
              }
            },
            "description": "The department related to the item. One of the system/fixed account dimensions."
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              },
              "financeProjectLink": {
                "type": "string",
                "description": "Finance project reference"
              }
            },
            "description": "The finance project related to the item. One of the system/fixed account dimensions."
          },
          "asset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "integer",
                "description": "Asset identifier",
                "format": "int32"
              },
              "assetLink": {
                "type": "string",
                "description": "Asset reference"
              }
            },
            "description": "The asset related to the item. One of the system/fixed account dimensions."
          }
        },
        "description": "Accounting details for the item, including fixed/system dimensions. For all dimensions, see seperate resource. "
      },
      "SalesOrder": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          },
          "salesOrderLink": {
            "type": "string",
            "description": "Sales order reference"
          }
        },
        "description": "Value set from the originating sales order ORDERID"
      },
      "ForwardedFrom": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "forwardedNetAmount": {
            "type": "number",
            "description": "The net amount forwarded to this item.",
            "format": "double"
          },
          "forwardedQuantity": {
            "type": "number",
            "description": "The quantity forwarded to this item.",
            "format": "double"
          },
          "forwardedFromItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "object": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "Identifier of the object"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          }
        },
        "description": "The preceding/previous/source item."
      },
      "ForwardedTo": {
        "type": "object",
        "properties": {
          "openForwardedQuantity": {
            "type": "number",
            "description": "When items are forwarded they end up in one or more open items. Open items in this context means items that are not registered (status 0 or 1). OpenForwardedQuantity will be the sum of ForwardedQuantity of all items this item has been forwarded to.",
            "format": "double"
          },
          "forwardedToItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemId": {
                  "type": "integer",
                  "description": "Identifier of the object",
                  "format": "int32"
                },
                "object": {
                  "type": "object",
                  "properties": {
                    "objectId": {
                      "type": "integer",
                      "description": "Identifier of the object",
                      "format": "int32"
                    },
                    "objectType": {
                      "type": "string",
                      "description": "Type of object"
                    },
                    "objectLink": {
                      "type": "string",
                      "description": "Identifier of the object"
                    }
                  }
                },
                "ramBaseKey": {
                  "type": "string",
                  "description": "Internal RamBase identifier of the object/item"
                },
                "itemLink": {
                  "type": "string",
                  "description": "API reference to the item"
                }
              },
              "description": "Item this item was forwarded to."
            }
          }
        }
      },
      "Rental": {
        "type": "object",
        "properties": {
          "serialNumberSpecification": {
            "type": "object",
            "properties": {
              "serialNumber": {
                "type": "string",
                "description": "Serial number"
              }
            },
            "description": "For shipping advice items of type RENTALORDER, each item can have a serial number specified. "
          }
        }
      },
      "Notification2": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "description": "Notification identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the notification",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "approval": {
            "type": "object",
            "properties": {
              "currentUserCanApprove": {
                "type": "boolean",
                "description": "True if current user is allowed to approve the notification."
              },
              "priority": {
                "type": "integer",
                "description": "Requested priority of the approval request.",
                "format": "int32"
              },
              "approvalRule": {
                "type": "object",
                "properties": {
                  "approvalRuleId": {
                    "type": "integer",
                    "description": "Approval rule identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the approval rule"
                  },
                  "description": {
                    "type": "string",
                    "description": "Approval rule description"
                  },
                  "sendRequestToDefaultApprovers": {
                    "type": "boolean",
                    "description": "Send request to all approvers selected as default approvers"
                  },
                  "approvalRuleLink": {
                    "type": "string",
                    "description": "Approval rule reference"
                  }
                }
              },
              "request": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value which was approved (if approved)."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when requesting approval"
                  },
                  "approver": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    }
                  }
                }
              },
              "response": {
                "type": "object",
                "properties": {
                  "isApproved": {
                    "type": "boolean",
                    "description": "True if the notification needs approval, and is approved."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when approving or denying the approval request"
                  },
                  "reviewedAt": {
                    "type": "string",
                    "description": "Date and time of approvel.",
                    "format": "date-time"
                  },
                  "reviewedBy": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    },
                    "description": "The userid that approved or declined the approvaltype"
                  }
                }
              }
            }
          },
          "regardingItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          },
          "messageParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key of the message parameter. Found in the message of the notification definition."
                },
                "value": {
                  "type": "string",
                  "description": "The value that replaces the key in the message of the notification definition."
                }
              }
            },
            "description": "Parameters used when expanding the message."
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "type": "string",
                "description": "Notification type identifier"
              },
              "category": {
                "type": "string",
                "description": "Category of notification type (warning, information etc)"
              },
              "priority": {
                "type": "string",
                "description": "Priority of notification with this notification type."
              },
              "forwardNotifications": {
                "type": "boolean",
                "description": "True if notifications created with this definition will be forwarded when the owner object is forwarded."
              },
              "notificationTypeLink": {
                "type": "string",
                "description": "Notification type reference"
              }
            }
          }
        }
      },
      "Notification3": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "description": "Notification identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the notification",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The message from the notification definition, expanded with parameters."
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated message from the notification definition, expanded with parameters."
          },
          "approval": {
            "type": "object",
            "properties": {
              "currentUserCanApprove": {
                "type": "boolean",
                "description": "True if current user is allowed to approve the notification."
              },
              "priority": {
                "type": "integer",
                "description": "Requested priority of the approval request.",
                "format": "int32"
              },
              "approvalRule": {
                "type": "object",
                "properties": {
                  "approvalRuleId": {
                    "type": "integer",
                    "description": "Approval rule identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the approval rule"
                  },
                  "description": {
                    "type": "string",
                    "description": "Approval rule description"
                  },
                  "sendRequestToDefaultApprovers": {
                    "type": "boolean",
                    "description": "Send request to all approvers selected as default approvers"
                  },
                  "approvalRuleLink": {
                    "type": "string",
                    "description": "Approval rule reference"
                  }
                }
              },
              "request": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value which was approved (if approved)."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when requesting approval"
                  },
                  "approver": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    }
                  }
                }
              },
              "response": {
                "type": "object",
                "properties": {
                  "isApproved": {
                    "type": "boolean",
                    "description": "True if the notification needs approval, and is approved."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Message entered by the user when approving or denying the approval request"
                  },
                  "reviewedAt": {
                    "type": "string",
                    "description": "Date and time of approvel.",
                    "format": "date-time"
                  },
                  "reviewedBy": {
                    "type": "object",
                    "properties": {
                      "employeeId": {
                        "type": "integer",
                        "description": "Employee identifier",
                        "format": "int32"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of employee"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of employee"
                      },
                      "employeeLink": {
                        "type": "string",
                        "description": "Employee reference"
                      }
                    },
                    "description": "The userid that approved or declined the approvaltype"
                  }
                }
              }
            }
          },
          "messageParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key of the message parameter. Found in the message of the notification definition."
                },
                "value": {
                  "type": "string",
                  "description": "The value that replaces the key in the message of the notification definition."
                }
              }
            },
            "description": "Parameters used when expanding the message."
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "type": "string",
                "description": "Notification type identifier"
              },
              "category": {
                "type": "string",
                "description": "Category of notification type (warning, information etc)"
              },
              "priority": {
                "type": "string",
                "description": "Priority of notification with this notification type."
              },
              "forwardNotifications": {
                "type": "boolean",
                "description": "True if notifications created with this definition will be forwarded when the owner object is forwarded."
              },
              "notificationTypeLink": {
                "type": "string",
                "description": "Notification type reference"
              }
            }
          }
        }
      },
      "CausalReference": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        },
        "description": "Possible reference to an object related to the change"
      },
      "GoodsReceptionCount": {
        "type": "object",
        "properties": {
          "goodsReceptionCountId": {
            "type": "integer",
            "description": "Goods reception count identifier",
            "format": "int32"
          },
          "stockTaking": {
            "type": "object",
            "properties": {
              "stockTakingId": {
                "type": "string",
                "description": "Stock taking identifier"
              },
              "stockTakingLink": {
                "type": "string",
                "description": "Stock taking reference"
              }
            }
          },
          "goodsReceptionCountLink": {
            "type": "string",
            "description": "Goods reception count reference"
          }
        }
      },
      "File2": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of file"
          },
          "searchTag": {
            "type": "string",
            "description": "Search words that can be used to find and recognize files in search"
          },
          "fileType": {
            "type": "object",
            "properties": {
              "fileTypeId": {
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Strong typed name for a file type"
              },
              "fileTypeLink": {
                "type": "string",
                "description": "Full doc reference to the FileType id"
              }
            }
          },
          "fileLink": { "type": "string", "description": "File reference" }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "status": {
            "type": "integer",
            "description": "Status of the item/object.",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the object.",
            "format": "double"
          },
          "flow": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of path. Valid values are:\r\n- START if this is the start/initial/root object. This path will not have a from-object.\r\n- FORWARD when an item is forwarded, \r\n- BASEDON if an object is based on something, lik a deviation \r\n"
              },
              "quantity": {
                "type": "number",
                "description": "The quantity moved/forwarded/transferred in the path. Might not be set, depending on the type of path",
                "format": "double"
              },
              "from": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Database of the object"
                  },
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  },
                  "itemId": {
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  }
                }
              }
            }
          }
        }
      },
      "ForwardDestination": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "suppliersReferenceNumber": {
            "type": "string",
            "description": "Suppliers/sellers reference number. Typically to an external system."
          },
          "location": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "RelatedObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The descriptive name of the related object level. "
          },
          "translatedDescription": {
            "type": "string",
            "description": "The translated descriptive name of the related object level. "
          },
          "object": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          }
        }
      },
      "ForwardDestination1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "customersReferenceNumber": {
            "type": "string",
            "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
          },
          "location": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "StockLocation": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Name of current- and parent stock locations, including seperator for location"
          },
          "stockLocationLink": {
            "type": "string",
            "description": "Stock location reference"
          }
        }
      },
      "Price3": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "Totals12": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossAmount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "TotalsConverted7": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossAmount": {
            "type": "number",
            "description": "Total gross amount in company currency.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Total net amount in company currency.",
            "format": "double"
          }
        }
      },
      "Stock": {
        "type": "object",
        "properties": {
          "isNonStock": {
            "type": "boolean",
            "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
          }
        }
      },
      "Supplier4": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "PriceConverted1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts.",
            "format": "double"
          }
        }
      },
      "TotalsConverted8": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netAmount": {
            "type": "number",
            "description": "Total net amount in company currency.",
            "format": "double"
          }
        }
      },
      "ProjectOrderItem": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          },
          "projectOrder": {
            "type": "object",
            "properties": {
              "projectOrderId": {
                "type": "integer",
                "description": "Project order identifier",
                "format": "int32"
              }
            }
          },
          "projectOrderLink": {
            "type": "string",
            "description": "Project order reference"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "integer",
            "description": "Asset identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of asset" },
          "assetLink": { "type": "string", "description": "Asset reference" }
        },
        "description": "The asset related to the fixed asset. One of the system/fixed account dimensions."
      },
      "Dimension": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value for this dimension defintion."
          },
          "description": {
            "type": "string",
            "description": "Description of the dimension value."
          },
          "dimensionDefinition": {
            "type": "object",
            "properties": {
              "dimensionDefinitionId": {
                "type": "integer",
                "description": "Dimension identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of dimension" },
              "dimensionDefinitionLink": {
                "type": "string",
                "description": "Dimension reference"
              }
            }
          }
        }
      },
      "ForwardedFrom1": {
        "type": "object",
        "properties": {
          "forwardedFromItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "object": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "Identifier of the object"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          }
        },
        "description": "The preceding/previous/source item."
      },
      "InitialBacklogItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        },
        "description": "Purchase order reference this goods reception item is created for"
      },
      "Payment1": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "description": "Date the object is due to be paid",
            "format": "date"
          }
        }
      },
      "VATEntity": {
        "type": "object",
        "properties": {
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
          }
        }
      },
      "Price4": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          }
        }
      },
      "Accounting3": {
        "type": "object",
        "properties": {
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              }
            }
          },
          "generalLedgerAccount": {
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of general ledger account"
              },
              "accountNumber": {
                "type": "string",
                "description": "The account number of the general ledger account"
              },
              "generalLedgerAccountLink": {
                "type": "string",
                "description": "General ledger account reference"
              }
            }
          },
          "department": {
            "type": "object",
            "properties": {
              "departmentId": {
                "type": "integer",
                "description": "Department identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of department" },
              "departmentLink": {
                "type": "string",
                "description": "Finance department reference"
              }
            },
            "description": "The department related to the budget account item."
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of finance project "
              },
              "financeProjectLink": {
                "type": "string",
                "description": "Finance project reference"
              }
            },
            "description": "The project related to the budget account item."
          },
          "asset": {
            "type": "object",
            "properties": {
              "assetId": {
                "type": "integer",
                "description": "Asset identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of asset" },
              "assetLink": {
                "type": "string",
                "description": "Asset reference"
              }
            },
            "description": "The asset related to the fixed asset. One of the system/fixed account dimensions."
          },
          "customDimensions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value for this dimension defintion."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the dimension value."
                },
                "dimensionDefinition": {
                  "type": "object",
                  "properties": {
                    "dimensionDefinitionId": {
                      "type": "integer",
                      "description": "Dimension identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of dimension"
                    },
                    "dimensionDefinitionLink": {
                      "type": "string",
                      "description": "Dimension reference"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Accounting details for the item, including fixed/system dimensions. For all dimensions, see seperate resource. "
      },
      "Supplier5": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "VATDetails1": {
        "type": "object",
        "properties": {
          "vATEntity": {
            "type": "object",
            "properties": {
              "vATRegistrationNumber": {
                "type": "string",
                "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
              }
            }
          }
        }
      },
      "RequestedProductRevision": {
        "type": "object",
        "properties": {
          "revision": { "type": "string", "description": "Revision number" }
        }
      },
      "Totals13": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossAmount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          }
        }
      },
      "Agreement": {
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "The agreement will have an expiration date. Note that this date might be different from the validity expiration date of the purchase quote. ",
            "format": "date"
          }
        },
        "description": "If the quote is accepted by the supplier, an agreement is made. The status of the quote item will then be set to 4."
      },
      "Bank1": {
        "type": "object",
        "properties": {
          "sWIFTCode": {
            "type": "string",
            "description": "The SWIFT (Society for Worldwide Interbank Financial Telecommunication) Code is a standard format for Business Identifier Codes (BIC) and it's used to uniquely identify banks and financial institutions globally. These codes are used when transferring money between banks, in particular for international wire transfers or SEPA payments. "
          },
          "internationalBankAccountNumber": {
            "type": "string",
            "description": "The International Bank Account Number (IBAN) is an internationally agreed means of identifying bank accounts across national borders with a reduced risk of transcription errors."
          },
          "address": {
            "type": "object",
            "properties": {
              "countryCode": {
                "type": "string",
                "description": "Two-character code (ISO 3166) identifying the country."
              }
            },
            "description": "Address of the bank associated with the bank account"
          }
        }
      },
      "Invoicing": {
        "type": "object",
        "properties": {
          "defaultInvoiceAddress": {
            "type": "object",
            "properties": {
              "addressId": {
                "type": "integer",
                "description": "Address identifier",
                "format": "int32"
              },
              "addressLine1": {
                "type": "string",
                "description": "First address line"
              },
              "addressLine2": {
                "type": "string",
                "description": "Second address line"
              },
              "postalCode": {
                "type": "string",
                "description": "Postalcode/Postcode/ZIP"
              },
              "city": { "type": "string", "description": "City/town/village" },
              "region": {
                "type": "string",
                "description": "Region/province/state"
              },
              "countryCode": {
                "type": "string",
                "description": "Two-character code (ISO 3166) identifying the country."
              },
              "country": {
                "type": "string",
                "description": "English name of country."
              }
            }
          }
        }
      },
      "Totals14": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "number",
            "description": "Total amount.",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced amount",
            "format": "double"
          },
          "creditedAmount": {
            "type": "number",
            "description": "Total credited amount",
            "format": "double"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "integer",
            "description": "Contact identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Firstname/givenname of the contact"
          },
          "lastName": {
            "type": "string",
            "description": "Surname/familyname/lastname of the contact"
          },
          "contactLink": {
            "type": "string",
            "description": "Contact reference"
          }
        }
      },
      "MainResponsible": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The link to the main responsible employee. This is also the main contact point for the contract from the suppliers point of view"
      },
      "SupplierBankAccount": {
        "type": "object",
        "properties": {
          "supplierBankAccountId": {
            "type": "integer",
            "description": "Supplier bank account identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of bank account" },
          "accountNumber": {
            "type": "string",
            "description": "Account number used to identify the bank account"
          },
          "bank": {
            "type": "object",
            "properties": {
              "sWIFTCode": {
                "type": "string",
                "description": "The SWIFT (Society for Worldwide Interbank Financial Telecommunication) Code is a standard format for Business Identifier Codes (BIC) and it's used to uniquely identify banks and financial institutions globally. These codes are used when transferring money between banks, in particular for international wire transfers or SEPA payments. "
              },
              "internationalBankAccountNumber": {
                "type": "string",
                "description": "The International Bank Account Number (IBAN) is an internationally agreed means of identifying bank accounts across national borders with a reduced risk of transcription errors."
              },
              "address": {
                "type": "object",
                "properties": {
                  "countryCode": {
                    "type": "string",
                    "description": "Two-character code (ISO 3166) identifying the country."
                  }
                },
                "description": "Address of the bank associated with the bank account"
              }
            }
          },
          "supplierBankAccountLink": {
            "type": "string",
            "description": "Supplier bank account reference"
          }
        }
      },
      "ShipTo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "firstname": {
            "type": "string",
            "description": "Firstname if the receiver is a person. Note that default invoice address must have the same firstname as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          },
          "reference": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            }
          }
        }
      },
      "ShipFrom": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          },
          "addressLink": {
            "type": "string",
            "description": "Supplier address reference"
          }
        }
      },
      "VATEntity1": {
        "type": "object",
        "properties": {
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "country": {
            "type": "string",
            "description": "Country name of VAT entity"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code of VAT Entity"
          }
        }
      },
      "ImportedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "The PID to the user that imported the file"
      },
      "VATAccounting": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency used for VAT to the imported supplier invoice"
          },
          "date": {
            "type": "string",
            "description": "The date when the VAT becomes accountable",
            "format": "date"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total amount of VAT in VAT currency on the invoice",
            "format": "double"
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "VAT registration number of the company which should be used for the invoice or credit."
          }
        }
      },
      "SupplierReference": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        },
        "description": "The account to the supplier"
      },
      "Supplier6": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "phone": {
            "type": "string",
            "description": "Main phone number of the supplier"
          },
          "email": {
            "type": "string",
            "description": "Main email address to the supplier"
          },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The suppliers unique enterprise/organization number."
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "invoicing": {
            "type": "object",
            "properties": {
              "defaultInvoiceAddress": {
                "type": "object",
                "properties": {
                  "addressId": {
                    "type": "integer",
                    "description": "Address identifier",
                    "format": "int32"
                  },
                  "addressLine1": {
                    "type": "string",
                    "description": "First address line"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Second address line"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postalcode/Postcode/ZIP"
                  },
                  "city": {
                    "type": "string",
                    "description": "City/town/village"
                  },
                  "region": {
                    "type": "string",
                    "description": "Region/province/state"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Two-character code (ISO 3166) identifying the country."
                  },
                  "country": {
                    "type": "string",
                    "description": "English name of country."
                  }
                }
              }
            }
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Totals15": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "freightAmount": {
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "feeAmount": {
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          },
          "roundOffAmount": {
            "type": "number",
            "description": "Round-off amount in transaction document's currency",
            "format": "double"
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in object currency, excluding VAT.",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Total value added tax in object currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in object currency, including VAT",
            "format": "double"
          },
          "vATRoundOffAmount": {
            "type": "number",
            "description": "VAT round-off amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "TotalsConverted9": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "freightAmount": {
            "type": "number",
            "description": "Freight amount in company currency.",
            "format": "double"
          },
          "feeAmount": {
            "type": "number",
            "description": "Fee amount in company currency",
            "format": "double"
          },
          "roundOffAmount": {
            "type": "number",
            "description": "Round-off amount in company currency",
            "format": "double"
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in company currency, excluding VAT.",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Value added tax amount in company currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in company currency, including VAT.",
            "format": "double"
          },
          "vATRoundOffAmount": {
            "type": "number",
            "description": "VAT round-off amount in company currency",
            "format": "double"
          }
        }
      },
      "Payment2": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "type": "string",
            "description": "Terms of payment. Defaut value is retrieved from the supplier. "
          },
          "paymentMethod": {
            "type": "string",
            "description": "Method of payment. Default value is retrieved from the supplier. "
          },
          "dueDate": {
            "type": "string",
            "description": "Date the object is due to be paid",
            "format": "date"
          }
        }
      },
      "VATDetails2": {
        "type": "object",
        "properties": {
          "postponeVAT": {
            "type": "boolean",
            "description": "Indicates that the VAT posting should be postponed"
          },
          "vATType": {
            "type": "string",
            "description": "Type of value added tax "
          },
          "vATHandling": {
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          },
          "vATRate": {
            "type": "number",
            "description": "Rate between transaction currency and company VAT currency. VAT rate should be used to calculate VAT amount in company VAT currency.",
            "format": "double"
          },
          "vATDate": {
            "type": "string",
            "description": "Date of VAT posting. Currency rate calculation use this date.",
            "format": "date"
          },
          "vATPeriod": {
            "type": "integer",
            "description": "Accounting period this VAT posting belongs to",
            "format": "int32"
          },
          "defaultVATPercent": {
            "type": "number",
            "description": "Value added tax percent.",
            "format": "double"
          },
          "defaultVATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCodeDefinitionId": {
                "type": "integer",
                "description": "VAT code identifier",
                "format": "int32"
              },
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              },
              "vATCodeDefinitionLink": {
                "type": "string",
                "description": "VAT code reference"
              }
            }
          },
          "vATEntity": {
            "type": "object",
            "properties": {
              "vATRegistrationNumber": {
                "type": "string",
                "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
              },
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "country": {
                "type": "string",
                "description": "Country name of VAT entity"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code of VAT Entity"
              }
            }
          }
        }
      },
      "KeyFigure2": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "GroupBy can be \"RUT\" (RentalUnit), \"RUTYEARMONTH\" ( RentalUnit, Year, Month) or \"YEARMONTH\" (Year or month)"
          },
          "description": {
            "type": "string",
            "description": "Description of the key."
          },
          "occurrences": {
            "type": "integer",
            "description": "Number of occurrences with the specified key.",
            "format": "int32"
          },
          "totalRemainingQuantity": {
            "type": "number",
            "description": "Sum of remaining quantity with the specified key",
            "format": "double"
          }
        }
      },
      "Purchase": {
        "type": "object",
        "properties": {
          "confirmedDeliveryDateBuffer": {
            "type": "integer",
            "description": "If the confirmed delivery date is unreliable, you can specify a buffer in days to be added.\r\n\r\nThis buffer will be used when the requested delivery date for purchase orders is calculated. \r\nThis buffer will also be added to the confirmed delivery date when creating purchase order responses.",
            "format": "int32"
          }
        }
      },
      "Supplier7": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "phone": {
            "type": "string",
            "description": "Main phone number of the supplier"
          },
          "email": {
            "type": "string",
            "description": "Main email address to the supplier"
          },
          "purchase": {
            "type": "object",
            "properties": {
              "confirmedDeliveryDateBuffer": {
                "type": "integer",
                "description": "If the confirmed delivery date is unreliable, you can specify a buffer in days to be added.\r\n\r\nThis buffer will be used when the requested delivery date for purchase orders is calculated. \r\nThis buffer will also be added to the confirmed delivery date when creating purchase order responses.",
                "format": "int32"
              }
            }
          },
          "invoicing": {
            "type": "object",
            "properties": {
              "defaultInvoiceAddress": {
                "type": "object",
                "properties": {
                  "addressId": {
                    "type": "integer",
                    "description": "Address identifier",
                    "format": "int32"
                  },
                  "addressLine1": {
                    "type": "string",
                    "description": "First address line"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Second address line"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postalcode/Postcode/ZIP"
                  },
                  "city": {
                    "type": "string",
                    "description": "City/town/village"
                  },
                  "region": {
                    "type": "string",
                    "description": "Region/province/state"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Two-character code (ISO 3166) identifying the country."
                  },
                  "country": {
                    "type": "string",
                    "description": "English name of country."
                  }
                }
              }
            }
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Requirement": {
        "type": "object",
        "properties": {
          "grossQuantity": {
            "type": "number",
            "description": "The gross demand for supplier, product and requested delivery date. ",
            "format": "double"
          },
          "subtractedQuantity": {
            "type": "number",
            "description": "Quantity from open purchase orders and purchase order responses subtracted from the gross demand quantity to get the net demand quantity. ",
            "format": "double"
          },
          "netQuantity": {
            "type": "number",
            "description": "Net demand quantity for this product, supplier and requested delivery date. The net quantity is the current demand, and will be the base for creating the quantity of the purchase order suggestion. ",
            "format": "double"
          }
        }
      },
      "SOPProcess": {
        "type": "object",
        "properties": {
          "sOPProcessId": {
            "type": "integer",
            "description": "S&OP (sales and operation planning) process identifier",
            "format": "int32"
          },
          "sOPProcessLink": {
            "type": "string",
            "description": "S&OP (salse and operation planning) process reference"
          }
        }
      },
      "Procurement": {
        "type": "object",
        "properties": {
          "blockedForPurchase": {
            "type": "boolean",
            "description": "If a product is blocked for purchase, no purchase quotes or purchase orders with that product can be registered. "
          }
        }
      },
      "SuggestedPurchasePrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "assumingQuantity": {
            "type": "number",
            "description": "Quantity used to calculate price.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the price is based on. Ex. STANDARD, QUOTE, QUOTEREQUEST etc."
          },
          "item": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "object": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "Identifier of the object"
                  }
                }
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          }
        },
        "description": "The suggested price for the purchase product. Unlike the lowest price, the suggested price might prioritizing purchase quotes or other documents before the price from the price list. "
      },
      "Item": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "Validity2": {
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Expiration date for responding to the purchase quote request. ",
            "format": "date"
          }
        }
      },
      "Supplier8": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Firstname/givenname if the supplier is a person"
          },
          "phone": {
            "type": "string",
            "description": "Main phone number of the supplier"
          },
          "email": {
            "type": "string",
            "description": "Main email address to the supplier"
          },
          "invoicing": {
            "type": "object",
            "properties": {
              "defaultInvoiceAddress": {
                "type": "object",
                "properties": {
                  "addressId": {
                    "type": "integer",
                    "description": "Address identifier",
                    "format": "int32"
                  },
                  "addressLine1": {
                    "type": "string",
                    "description": "First address line"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Second address line"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postalcode/Postcode/ZIP"
                  },
                  "city": {
                    "type": "string",
                    "description": "City/town/village"
                  },
                  "region": {
                    "type": "string",
                    "description": "Region/province/state"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Two-character code (ISO 3166) identifying the country."
                  },
                  "country": {
                    "type": "string",
                    "description": "English name of country."
                  }
                }
              }
            }
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "ShippingAddress1": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "firstname": {
            "type": "string",
            "description": "Firstname if the receiver is a person. Note that default invoice address must have the same firstname as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          },
          "addressLink": {
            "type": "string",
            "description": "Address reference"
          }
        }
      },
      "Shipment1": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "description": "Priority of the shipment",
            "format": "int32"
          },
          "deliveryTerms": {
            "type": "string",
            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
          },
          "deliveryTermPlace": {
            "type": "string",
            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
          },
          "departingShipment": {
            "type": "object",
            "properties": {
              "shipmentId": {
                "type": "number",
                "description": "Shipment identifier",
                "format": "int64"
              },
              "departingWaybill": {
                "type": "object",
                "properties": {
                  "departingWaybillId": {
                    "type": "integer",
                    "description": "Departing waybill identifier",
                    "format": "int32"
                  },
                  "departingWaybillLink": {
                    "type": "string",
                    "description": "Departing waybill reference"
                  }
                }
              },
              "shipmentLink": {
                "type": "string",
                "description": "Shipment reference"
              }
            }
          },
          "shippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "shippingServiceLink": {
                "type": "string",
                "description": "Shipping service reference"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "integer",
                    "description": "Carrier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of carrier"
                  },
                  "carrierLink": {
                    "type": "string",
                    "description": "Carrier reference"
                  }
                }
              }
            }
          }
        }
      },
      "Payment3": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "description": "Payment identifier",
            "format": "int32"
          },
          "issueDate": {
            "type": "string",
            "description": "Date when the document was issued.",
            "format": "date"
          },
          "registrationDate": {
            "type": "string",
            "description": "Date of registration",
            "format": "date"
          },
          "accountingPeriod": {
            "type": "object",
            "properties": {
              "accountingPeriodId": {
                "type": "integer",
                "description": "Accounting period identifier",
                "format": "int32"
              },
              "period": {
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              },
              "accountingPeriodLink": {
                "type": "string",
                "description": "Accounting period reference"
              }
            }
          },
          "paymentLink": {
            "type": "string",
            "description": "Payment reference"
          }
        }
      },
      "AdjustmentJournalEntryLine": {
        "type": "object",
        "properties": {
          "isPostingAdjustment": {
            "type": "boolean",
            "description": "Indicates that this journal entry accounting line belongs to a posting adjustment."
          },
          "isPeriodAdjustment": {
            "type": "boolean",
            "description": "Indicates that this journal entry accounting line belongs to a period adjustment."
          },
          "isReversalEntry": {
            "type": "boolean",
            "description": "Indicates that this is a reversal journal entry accounting line belongs to an adjustment."
          },
          "accountingLine": {
            "type": "object",
            "properties": {
              "accountingLineId": {
                "type": "integer",
                "description": "Accounting line identifier of the payable journal entry ",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the accounting line",
                "format": "int32"
              },
              "source": {
                "type": "string",
                "description": "Source of the receivable ledger specification item."
              },
              "generalLedgerPostingItem": {
                "type": "object",
                "properties": {
                  "generalLedgerPostingItemId": {
                    "type": "integer",
                    "description": "General ledger posting item identifier.",
                    "format": "int32"
                  },
                  "generalLedgerPosting": {
                    "type": "object",
                    "properties": {
                      "generalLedgerPostingId": {
                        "type": "integer",
                        "description": "General ledger posting identifier",
                        "format": "int32"
                      },
                      "generalLedgerPostingLink": {
                        "type": "string",
                        "description": "General ledger posting reference"
                      }
                    }
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  },
                  "generalLedgerPostingItemLink": {
                    "type": "string",
                    "description": "General ledger posting reference"
                  }
                }
              },
              "accountDimensions": {
                "type": "object",
                "properties": {
                  "generalLedgerAccount": {
                    "type": "object",
                    "properties": {
                      "generalLedgerAccountId": {
                        "type": "integer",
                        "description": "General ledger account identifier",
                        "format": "int32"
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "The account number of the general ledger account"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of general ledger account"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of account"
                      },
                      "generalLedgerAccountLink": {
                        "type": "string",
                        "description": "General ledger account reference"
                      }
                    }
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Value for this dimension defintion."
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the dimension value."
                        },
                        "dimensionDefinition": {
                          "type": "object",
                          "properties": {
                            "dimensionDefinitionId": {
                              "type": "integer",
                              "description": "Dimension identifier",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of dimension"
                            },
                            "dimensionDefinitionLink": {
                              "type": "string",
                              "description": "Dimension reference"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "vATCodeDefinition": {
                "type": "object",
                "properties": {
                  "vATCode": {
                    "type": "string",
                    "description": "Code that determines VAT rules used for VAT calculations."
                  },
                  "vATPercent": {
                    "type": "number",
                    "description": "Value added tax percent",
                    "format": "double"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of VAT Code definition"
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "debitAmount": {
                    "type": "number",
                    "description": "Total debit amount.",
                    "format": "double"
                  },
                  "creditAmount": {
                    "type": "number",
                    "description": "Total credit amount.",
                    "format": "double"
                  }
                }
              },
              "totalsConverted": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate used in convertion",
                    "format": "double"
                  },
                  "debitAmount": {
                    "type": "number",
                    "description": "Total debit amount in company currency.",
                    "format": "double"
                  },
                  "creditAmount": {
                    "type": "number",
                    "description": "Total credit amount in company currency.",
                    "format": "double"
                  }
                }
              },
              "payableJournalEntry": {
                "type": "object",
                "properties": {
                  "payableJournalEntryId": {
                    "type": "integer",
                    "description": "Payable journal entry identifier",
                    "format": "int32"
                  },
                  "accountingPeriod": {
                    "type": "object",
                    "properties": {
                      "accountingPeriodId": {
                        "type": "integer",
                        "description": "Accounting period identifier",
                        "format": "int32"
                      },
                      "period": {
                        "type": "integer",
                        "description": "Accounting period",
                        "format": "int32"
                      },
                      "accountingPeriodLink": {
                        "type": "string",
                        "description": "Accounting period reference"
                      }
                    }
                  },
                  "payableJournalEntryLink": {
                    "type": "string",
                    "description": "Payable journal entry reference"
                  }
                }
              },
              "accountingLineLink": {
                "type": "string",
                "description": "Accounting line reference"
              }
            }
          },
          "accountAdjustmentPlan": {
            "type": "object",
            "properties": {
              "accountAdjustmentPlanId": {
                "type": "integer",
                "description": "Account adjustment plan identifier",
                "format": "int32"
              },
              "accountAdjustmentPlanLink": {
                "type": "string",
                "description": "Account adjustment plan reference"
              }
            }
          }
        }
      },
      "AccountingLine1": {
        "type": "object",
        "properties": {
          "accountingLineId": {
            "type": "integer",
            "description": "Accounting line identifier of the payable journal entry ",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the accounting line",
            "format": "int32"
          },
          "fixedAsset": {
            "type": "object",
            "properties": {
              "fixedAssetId": {
                "type": "integer",
                "description": "Fixed asset identifier",
                "format": "int32"
              },
              "fixedAssetLink": {
                "type": "string",
                "description": "Link to Fixed asset document"
              }
            }
          },
          "generalLedgerPostingItem": {
            "type": "object",
            "properties": {
              "generalLedgerPostingItemId": {
                "type": "integer",
                "description": "General ledger posting item identifier.",
                "format": "int32"
              },
              "generalLedgerPosting": {
                "type": "object",
                "properties": {
                  "generalLedgerPostingId": {
                    "type": "integer",
                    "description": "General ledger posting identifier",
                    "format": "int32"
                  },
                  "generalLedgerPostingLink": {
                    "type": "string",
                    "description": "General ledger posting reference"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "generalLedgerPostingItemLink": {
                "type": "string",
                "description": "General ledger posting reference"
              }
            }
          },
          "accountDimensions": {
            "type": "object",
            "properties": {
              "generalLedgerAccount": {
                "type": "object",
                "properties": {
                  "generalLedgerAccountId": {
                    "type": "integer",
                    "description": "General ledger account identifier",
                    "format": "int32"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "The account number of the general ledger account"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of general ledger account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of account"
                  },
                  "generalLedgerAccountLink": {
                    "type": "string",
                    "description": "General ledger account reference"
                  }
                }
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value for this dimension defintion."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the dimension value."
                    },
                    "dimensionDefinition": {
                      "type": "object",
                      "properties": {
                        "dimensionDefinitionId": {
                          "type": "integer",
                          "description": "Dimension identifier",
                          "format": "int32"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of dimension"
                        },
                        "dimensionDefinitionLink": {
                          "type": "string",
                          "description": "Dimension reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "vATPercent": {
                "type": "number",
                "description": "Value added tax percent",
                "format": "double"
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount.",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "exchangeRate": {
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount in company currency.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount in company currency.",
                "format": "double"
              }
            }
          },
          "payableJournalEntry": {
            "type": "object",
            "properties": {
              "payableJournalEntryId": {
                "type": "integer",
                "description": "Payable journal entry identifier",
                "format": "int32"
              },
              "intercompany": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Abbreviation/code to identify the company"
                  }
                }
              },
              "accountingPeriod": {
                "type": "object",
                "properties": {
                  "accountingPeriodId": {
                    "type": "integer",
                    "description": "Accounting period identifier",
                    "format": "int32"
                  },
                  "period": {
                    "type": "integer",
                    "description": "Accounting period",
                    "format": "int32"
                  },
                  "accountingPeriodLink": {
                    "type": "string",
                    "description": "Accounting period reference"
                  }
                }
              },
              "payableJournalEntryLink": {
                "type": "string",
                "description": "Payable journal entry reference"
              }
            }
          },
          "accountingLineLink": {
            "type": "string",
            "description": "Accounting line reference"
          }
        }
      },
      "PayableTransaction": {
        "type": "object",
        "properties": {
          "accountsPayableTransaction": {
            "type": "object",
            "properties": {
              "accountsPayableTransactionId": {
                "type": "integer",
                "description": "Accounts payable transaction identifier\r\n\r\n \r\n",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of accounts payable transaction",
                "format": "int32"
              },
              "dueDate": {
                "type": "string",
                "description": "Date the object is due to be paid",
                "format": "date"
              },
              "source": {
                "type": "object",
                "properties": {
                  "registrationDate": {
                    "type": "string",
                    "description": "Date of registration",
                    "format": "date"
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "totalAmount": {
                    "type": "number",
                    "description": "Total amount",
                    "format": "double"
                  }
                }
              },
              "accountsPayableTransactionLink": {
                "type": "string",
                "description": "Accounts payable transaction reference"
              }
            }
          },
          "paymentItem": {
            "type": "object",
            "properties": {
              "paymentItemId": {
                "type": "integer",
                "description": "Item-/line-number of the payment.",
                "format": "int32"
              },
              "payment": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "integer",
                    "description": "Payment identifier",
                    "format": "int32"
                  },
                  "issueDate": {
                    "type": "string",
                    "description": "Date when the document was issued.",
                    "format": "date"
                  },
                  "registrationDate": {
                    "type": "string",
                    "description": "Date of registration",
                    "format": "date"
                  },
                  "accountingPeriod": {
                    "type": "object",
                    "properties": {
                      "accountingPeriodId": {
                        "type": "integer",
                        "description": "Accounting period identifier",
                        "format": "int32"
                      },
                      "period": {
                        "type": "integer",
                        "description": "Accounting period",
                        "format": "int32"
                      },
                      "accountingPeriodLink": {
                        "type": "string",
                        "description": "Accounting period reference"
                      }
                    }
                  },
                  "paymentLink": {
                    "type": "string",
                    "description": "Payment reference"
                  }
                }
              },
              "paymentItemLink": {
                "type": "string",
                "description": "Payment item reference"
              }
            }
          }
        }
      },
      "PaymentItem1": {
        "type": "object",
        "properties": {
          "paymentItemId": {
            "type": "integer",
            "description": "Item-/line-number of the payment.",
            "format": "int32"
          },
          "payment": {
            "type": "object",
            "properties": {
              "paymentId": {
                "type": "integer",
                "description": "Payment identifier",
                "format": "int32"
              },
              "issueDate": {
                "type": "string",
                "description": "Date when the document was issued.",
                "format": "date"
              },
              "registrationDate": {
                "type": "string",
                "description": "Date of registration",
                "format": "date"
              },
              "accountingPeriod": {
                "type": "object",
                "properties": {
                  "accountingPeriodId": {
                    "type": "integer",
                    "description": "Accounting period identifier",
                    "format": "int32"
                  },
                  "period": {
                    "type": "integer",
                    "description": "Accounting period",
                    "format": "int32"
                  },
                  "accountingPeriodLink": {
                    "type": "string",
                    "description": "Accounting period reference"
                  }
                }
              },
              "paymentLink": {
                "type": "string",
                "description": "Payment reference"
              }
            }
          },
          "accountsPayableTransaction": {
            "type": "object",
            "properties": {
              "accountsPayableTransactionId": {
                "type": "integer",
                "description": "Accounts payable transaction identifier\r\n\r\n \r\n",
                "format": "int32"
              },
              "accountsPayableTransactionLink": {
                "type": "string",
                "description": "Accounts payable transaction reference"
              }
            }
          },
          "paymentItemLink": {
            "type": "string",
            "description": "Payment item reference"
          }
        }
      },
      "VATCodeTotal": {
        "type": "object",
        "properties": {
          "vATPercent": {
            "type": "number",
            "description": "Value added tax percent.",
            "format": "double"
          },
          "regardingItems": {
            "type": "string",
            "description": "A concatinate list of items which belongs to the VAT specification line from the supplier credit note"
          },
          "includesFee": {
            "type": "boolean",
            "description": "Indicates the given line containing the fee from the supplier credit note"
          },
          "includesFreight": {
            "type": "boolean",
            "description": "Indicates the given line containing the freight from the supplier credit note"
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCodeDefinitionId": {
                "type": "integer",
                "description": "VAT code identifier",
                "format": "int32"
              },
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              },
              "vATCodeDefinitionLink": {
                "type": "string",
                "description": "VAT code reference"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "netAmount": {
                "type": "number",
                "description": "Final item amount after deducting all discounts etc.",
                "format": "double"
              },
              "vATAmount": {
                "type": "number",
                "description": "Total value added tax in object currency.",
                "format": "double"
              },
              "vATRoundOffAmount": {
                "type": "number",
                "description": "VAT round-off amount in transaction document's currency",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
              },
              "exchangeRate": {
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              },
              "netAmount": {
                "type": "number",
                "description": "Final item amount after deducting all discounts etc.",
                "format": "double"
              },
              "vATAmount": {
                "type": "number",
                "description": "Value added tax amount in company currency.",
                "format": "double"
              },
              "vATRoundOffAmount": {
                "type": "number",
                "description": "VAT round-off amount in company currency",
                "format": "double"
              }
            }
          }
        }
      },
      "Product6": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "countryOfOriginCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Price5": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "targetPrice": {
            "type": "number",
            "description": "The requested target price for this item",
            "format": "double"
          }
        }
      },
      "Totals16": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "targetAmount": {
            "type": "number",
            "description": "The total item amount. Calculated by multiplying target price with quantity.",
            "format": "double"
          }
        }
      },
      "Product7": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "type": { "type": "string", "description": "Type of product" },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "procurement": {
            "type": "object",
            "properties": {
              "blockedForPurchase": {
                "type": "boolean",
                "description": "If a product is blocked for purchase, no purchase quotes or purchase orders with that product can be registered. "
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "ExternalClearingSystemIdentificationCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Clearing code of the bank account"
          },
          "bankIdentifier": {
            "type": "string",
            "description": "Clearing bank identifier of the bank account"
          }
        },
        "description": "Clearing codes are specified by ISO20022"
      },
      "Reference1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "description": "Purchase order identifier",
            "format": "int32"
          },
          "purchaseOrderLink": {
            "type": "string",
            "description": "Purchase order reference"
          }
        },
        "description": "Value set from originating purchase ORDERID"
      },
      "ForwardedTo1": {
        "type": "object",
        "properties": {
          "purchaseOrderResponseId": {
            "type": "integer",
            "description": "Purchase order response identifier",
            "format": "int32"
          },
          "purchaseOrderResponseLink": {
            "type": "string",
            "description": "Purchase order response reference"
          }
        }
      },
      "NotifyEmployee": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Link to the person who should be notified"
      },
      "ProjectOrder": {
        "type": "object",
        "properties": {
          "projectOrderId": {
            "type": "integer",
            "description": "Project order identifier",
            "format": "int32"
          }
        }
      },
      "ProductReference": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "RamBase product identificator",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Price6": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Estimated freight for including expected freight cost in the gross margin calculation in sales orders, sales invoices etc. ",
            "format": "double"
          },
          "freightPercent": {
            "type": "number",
            "description": "Estimated freight in percent of net price. Used for including expected freight cost in the gross margin calculation in sales orders, sales invoices etc. ",
            "format": "double"
          }
        }
      },
      "Lot": {
        "type": "object",
        "properties": {
          "lotId": {
            "type": "integer",
            "description": "Lot identifier",
            "format": "int32"
          },
          "lotLink": { "type": "string", "description": "Lot reference" }
        },
        "description": "Lot document this invoice item is created for"
      },
      "ProjectOrderItem1": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          },
          "projectOrder": {
            "type": "object",
            "properties": {
              "projectOrderId": {
                "type": "integer",
                "description": "Project order identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Assignments": {
        "type": "object",
        "properties": {
          "earliestConsumptionDate": {
            "type": "string",
            "description": "The earliest date that these items can be used or consumed based upon the stock assignment with the earliest production date if it is linked to a production work order, or if it is linked to a sales order, the earliest requested date on the linked sales orders.",
            "format": "date"
          },
          "earliestConsumptionDays": {
            "type": "integer",
            "description": "The deviation between Earliest consumption date and Confirmed delivery date, or Requested delivery date if no delivery date is confirmed by the supplier.",
            "format": "int32"
          },
          "latestConsumptionDate": {
            "type": "string",
            "description": "The earliest date that these items can be used or consumed based upon the stock assignment with the latest production date if it is linked to a production work order, or if it is linked to a sales order, the latest requested date on the linked sales orders.",
            "format": "date"
          },
          "latestConsumptionDays": {
            "type": "integer",
            "description": "The deviation between Latest consumption date and Confirmed delivery date, or Requested delivery date if no delivery date is confirmed by the supplier.",
            "format": "int32"
          },
          "percentUnassigned": {
            "type": "number",
            "description": "Remaining production available in percent",
            "format": "double"
          }
        }
      },
      "PurchaseGroup": {
        "type": "object",
        "properties": {
          "purchaseGroupId": {
            "type": "integer",
            "description": "Purchase group identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of purchase group" },
          "purchaseGroupLink": {
            "type": "string",
            "description": "Purchase group identifier"
          }
        }
      },
      "Dimensions1": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "description": "The weight of the product in kilograms.",
            "format": "double"
          }
        }
      },
      "Product8": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "countryOfOriginCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "customField1": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "customField2": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "weight": {
                "type": "number",
                "description": "The weight of the product in kilograms.",
                "format": "double"
              }
            }
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "stock": {
            "type": "object",
            "properties": {
              "isNonStock": {
                "type": "boolean",
                "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "DocumentTransactionTotals": {
        "type": "object",
        "properties": {
          "initialOrderQuantity": {
            "type": "number",
            "description": "Original total quantity of purchase order ",
            "format": "double"
          },
          "initialOrderAmount": {
            "type": "number",
            "description": "Original total amount of purchase order",
            "format": "double"
          },
          "remainingOrderQuantity": {
            "type": "number",
            "description": "Net quantity of purchase order",
            "format": "double"
          },
          "remainingOrderAmount": {
            "type": "number",
            "description": "Total net amount of purchase order",
            "format": "double"
          },
          "confirmedQuantity": {
            "type": "number",
            "description": "Total confirmed quantity",
            "format": "double"
          },
          "confirmedAmount": {
            "type": "number",
            "description": "Total confirmed amount",
            "format": "double"
          },
          "receivedQuantity": {
            "type": "number",
            "description": "Total received quantity",
            "format": "double"
          },
          "receivedAmount": {
            "type": "number",
            "description": "Total received amount",
            "format": "double"
          },
          "invoicedQuantity": {
            "type": "number",
            "description": "Total invoiced quantity",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced amount",
            "format": "double"
          },
          "canceledQuantity": {
            "type": "number",
            "description": "Total canceled quantity",
            "format": "double"
          },
          "canceledAmount": {
            "type": "number",
            "description": "Total canceled amount",
            "format": "double"
          },
          "closedWithoutInvoiceQuantity": {
            "type": "number",
            "description": "Total no invoice quantity",
            "format": "double"
          },
          "closedWithoutInvoiceAmount": {
            "type": "number",
            "description": "Total no invoice amount",
            "format": "double"
          }
        }
      },
      "AddedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "RemovedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Seller": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Reference to the seller of the item"
      },
      "ContactInformation": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "Contact phone for address"
          },
          "fax": { "type": "string", "description": "Contact fax for address" },
          "email": {
            "type": "string",
            "description": "Contact email for address"
          }
        }
      },
      "Auction": {
        "type": "object",
        "properties": {
          "auctionId": {
            "type": "integer",
            "description": "Auction identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of auction",
            "format": "int32"
          },
          "type": { "type": "string", "description": "Type of auction" },
          "title": { "type": "string", "description": "Title of auction" },
          "description": {
            "type": "string",
            "description": "Description of auction"
          },
          "auctionLink": {
            "type": "string",
            "description": "Auction reference"
          }
        }
      },
      "OutputObjectDefinition": {
        "type": "object",
        "properties": {
          "outputObjectDefinitionId": {
            "type": "integer",
            "description": "Output object definition identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the Output Object"
          },
          "description": {
            "type": "string",
            "description": "Description of the Output Object Definition"
          },
          "outputObjectDefinitionLink": {
            "type": "string",
            "description": "Output object definition reference"
          }
        }
      },
      "OutputDesign": {
        "type": "object",
        "properties": {
          "outputDesignId": {
            "type": "integer",
            "description": "Output design identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the output design"
          },
          "outputDesignLink": {
            "type": "string",
            "description": "Output design reference"
          }
        }
      },
      "Recipient1": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "Details of recipient. Ex. the email address when output by is EMAIL."
          },
          "reference": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          }
        },
        "description": "The destination of the output"
      },
      "Product9": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        },
        "description": "Requirement is based on matching ARTIT. If this field is used, a file linked to SSA.ITM must be matching this artit."
      },
      "ApplicableInvoice": {
        "type": "object",
        "properties": {
          "applicableInvoiceId": {
            "type": "integer",
            "description": "Applicable invoice identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of applicable invoice",
            "format": "int32"
          },
          "supplierInvoiceItem": {
            "type": "object",
            "properties": {
              "supplierInvoiceItemId": {
                "type": "integer",
                "description": "Item-/linenumber of supplier invoice",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the purchase invoice item",
                "format": "int32"
              },
              "quantity": {
                "type": "number",
                "description": "Quantity of supplier invoice item",
                "format": "double"
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "Requirement is based on matching ARTIT. If this field is used, a file linked to SSA.ITM must be matching this artit."
              },
              "price": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "grossPrice": {
                    "type": "number",
                    "description": "Represents the price per unit before any discounting is applied.",
                    "format": "double"
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Represents the item amount before any discounts etc. is applied.",
                    "format": "double"
                  }
                }
              },
              "supplierInvoice": {
                "type": "object",
                "properties": {
                  "supplierInvoiceId": {
                    "type": "integer",
                    "description": "Supplier invoice identifier",
                    "format": "int32"
                  },
                  "supplierInvoiceLink": {
                    "type": "string",
                    "description": "Supplier invoice reference"
                  }
                }
              },
              "supplierInvoiceItemLink": {
                "type": "string",
                "description": "Supplier invoice Item reference"
              }
            }
          }
        }
      },
      "DocumentTransaction": {
        "type": "object",
        "properties": {
          "documentTransactionId": {
            "type": "integer",
            "description": "Document transaction identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "change": {
            "type": "object",
            "properties": {
              "type": {
                "type": "integer",
                "description": "Type of the transaction",
                "format": "int32"
              },
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "orderedQuantity": {
                "type": "number",
                "description": "Purchase order quantity",
                "format": "double"
              },
              "orderedAmount": {
                "type": "number",
                "description": "Purchase order amount",
                "format": "double"
              },
              "confirmedQuantity": {
                "type": "number",
                "description": "Confirmed quantity",
                "format": "double"
              },
              "confirmedAmount": {
                "type": "number",
                "description": "Confirmed amount",
                "format": "double"
              },
              "receivedQuantity": {
                "type": "number",
                "description": "Received quantity",
                "format": "double"
              },
              "receivedAmount": {
                "type": "number",
                "description": "Received amount",
                "format": "double"
              },
              "invoicedQuantity": {
                "type": "number",
                "description": "Invoiced quantity",
                "format": "double"
              },
              "invoicedAmount": {
                "type": "number",
                "description": "Invoice amount",
                "format": "double"
              },
              "canceledQuantity": {
                "type": "number",
                "description": "Canceled quantity",
                "format": "double"
              },
              "canceledAmount": {
                "type": "number",
                "description": "Canceled amount",
                "format": "double"
              },
              "closedWithoutInvoiceQuantity": {
                "type": "number",
                "description": "Closed without invoice quantity",
                "format": "double"
              },
              "closedWithoutInvoiceAmount": {
                "type": "number",
                "description": "Closed without invoice amount",
                "format": "double"
              }
            }
          },
          "documentReference": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            }
          }
        }
      },
      "PriceList": {
        "type": "object",
        "properties": {
          "priceListId": {
            "type": "integer",
            "description": "Price list identifier",
            "format": "int32"
          },
          "priceListLink": {
            "type": "string",
            "description": "Price list reference"
          }
        }
      },
      "CreatedBy3": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Validity3": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "The date the work schedule is effective from",
            "format": "date"
          },
          "expireDate": {
            "type": "string",
            "description": "The date when the work schedule expires",
            "format": "date"
          }
        }
      },
      "Product10": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the product",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "productLink": {
            "type": "string",
            "description": "Product identifier"
          }
        },
        "description": "The product this structure is valid for"
      },
      "Owner2": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        },
        "description": "The owner of the product structure"
      },
      "File3": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          },
          "fileLink": { "type": "string", "description": "File reference" }
        }
      },
      "ExclusivelyFor1": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "firstName": {
            "type": "string",
            "description": "First name of the customer/supplier"
          },
          "name": {
            "type": "string",
            "description": "Name of the customer/supplier, or last name if it is a person. "
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "ProductionWorkOrder": {
        "type": "object",
        "properties": {
          "productionWorkOrderId": {
            "type": "integer",
            "description": "Production work order identifier",
            "format": "int32"
          },
          "productionWorkOrderLink": {
            "type": "string",
            "description": "Production work order reference"
          }
        }
      },
      "Processing": {
        "type": "object",
        "properties": {
          "runTime": {
            "type": "number",
            "description": "Planned run time in hours for the production operation",
            "format": "double"
          }
        }
      },
      "ProductionOperation": {
        "type": "object",
        "properties": {
          "productionOperationId": {
            "type": "integer",
            "description": "Production operation identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of production operation"
          },
          "productionOperationLink": {
            "type": "string",
            "description": "Production operation reference"
          }
        },
        "description": "Operation id that will create a requirement for this file type"
      },
      "ProductionResource": {
        "type": "object",
        "properties": {
          "productionResourceId": {
            "type": "integer",
            "description": "Production resource identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of  production resource"
          },
          "productionResourceLink": {
            "type": "string",
            "description": "Production resource reference"
          }
        }
      },
      "Product11": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "production": {
            "type": "object",
            "properties": {
              "blockedForProduction": {
                "type": "boolean",
                "description": "If a product is blocked for production, no production work orders with that product can be registered."
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "ProductionResourceGroup": {
        "type": "object",
        "properties": {
          "productionResourceGroupId": {
            "type": "integer",
            "description": "Production resource group identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of production resource group"
          },
          "productionResourceGroupLink": {
            "type": "string",
            "description": "Production resource group reference"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "errorMessageId": {
            "type": "integer",
            "description": "Error message identifier",
            "format": "int32"
          },
          "errorMessageLink": {
            "type": "string",
            "description": "Error message reference"
          }
        }
      },
      "Customer2": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "Changeover": {
        "type": "object",
        "properties": {
          "setupTime": {
            "type": "number",
            "description": "Changeover pre/setup time in hours",
            "format": "double"
          },
          "cleanupTime": {
            "type": "number",
            "description": "Changeover post/cleanup time in hours",
            "format": "double"
          }
        }
      },
      "OutsourcedOperation": {
        "type": "object",
        "properties": {
          "isOutsourced": {
            "type": "boolean",
            "description": "A flag to indicate if production operation is outsourced"
          }
        }
      },
      "OutsourcedOperationPurchaseOrderItem": {
        "type": "object",
        "properties": {
          "purchaseOrderItemId": {
            "type": "integer",
            "description": "Item-/line-number of the purchase order",
            "format": "int32"
          },
          "purchaseOrder": {
            "type": "object",
            "properties": {
              "purchaseOrderId": {
                "type": "integer",
                "description": "Purchase order identifier",
                "format": "int32"
              },
              "purchaseOrderLink": {
                "type": "string",
                "description": "Purchase order reference"
              }
            },
            "description": "Value set from originating purchase ORDERID"
          },
          "purchaseOrderItemLink": {
            "type": "string",
            "description": "Purchase order item reference"
          }
        }
      },
      "ProductionFor": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "Customer identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                  },
                  "customerLink": {
                    "type": "string",
                    "description": "Customer reference"
                  }
                }
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "ManufacturingArea": {
        "type": "object",
        "properties": {
          "manufacturingAreaId": {
            "type": "integer",
            "description": "Manufacturing area identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of manufacturing area"
          },
          "manufacturingAreaLink": {
            "type": "string",
            "description": "Manufacturing area reference"
          }
        }
      },
      "ProductClassification1": {
        "type": "object",
        "properties": {
          "productClassificationId": {
            "type": "string",
            "description": "Product classification identifier"
          },
          "treeLevel": {
            "type": "integer",
            "description": "Level in product classification tree (0 is root)",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of product classification"
          },
          "productClassificationLink": {
            "type": "string",
            "description": "Product classification reference"
          }
        }
      },
      "Package": {
        "type": "object",
        "properties": {
          "palletQuantity": {
            "type": "integer",
            "description": "Total quantity of the product that can be on a pallet",
            "format": "int32"
          },
          "packageQuantity": {
            "type": "integer",
            "description": "Total quantity of the product within a package",
            "format": "int32"
          },
          "packageType": {
            "type": "string",
            "description": "Type of wrapping used for the package"
          }
        }
      },
      "MainImage1": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "integer",
            "description": "Version of the file ",
            "format": "int32"
          },
          "fileStorageUri": {
            "type": "string",
            "description": "The url to download a file"
          },
          "file": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              },
              "fileLink": { "type": "string", "description": "File reference" }
            }
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File version reference"
          }
        },
        "description": "Main image of the product"
      },
      "Accounting4": {
        "type": "object",
        "properties": {
          "costingMethod": {
            "type": "string",
            "description": "Costing method to use in accounting"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "serviceInterval": {
            "type": "object",
            "properties": {
              "serviceIntervalId": {
                "type": "integer",
                "description": "Service interval identifier",
                "format": "int32"
              }
            },
            "description": "Service template of the product. This template will be used when performing service for this product."
          }
        }
      },
      "ExclusivelyForCustomer1": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        },
        "description": "Some shipping services are exclusively for one customer only."
      },
      "ProductCollection": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "DefaultManufacturersProduct": {
        "type": "object",
        "properties": {
          "manufacturersProductId": {
            "type": "integer",
            "description": "Manufacturer product identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Manufacturers name of the product. Also known as Manufacturer Part Number (MPN)."
          },
          "manufacturersProductLink": {
            "type": "string",
            "description": "Manufacturers product reference"
          }
        }
      },
      "Production": {
        "type": "object",
        "properties": {
          "isTraceableMaterialOfProductUnit": {
            "type": "boolean",
            "description": "During production of a product structure, each produced unit generates a list of tracable materials included in the finished unit. When this value is true, this product is included in the list of tracable materials."
          },
          "isManufacturedInBatches": {
            "type": "boolean",
            "description": "Products is either manufactured in batch product units, or single product units. When manufactured as single, each production unit of a production work order should result in seperate product units. When manufactured in batches, all production units from one production work order should result in one common product unit."
          },
          "manufacturingArea": {
            "type": "object",
            "properties": {
              "manufacturingAreaId": {
                "type": "integer",
                "description": "Manufacturing area identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of manufacturing area"
              },
              "manufacturingAreaLink": {
                "type": "string",
                "description": "Manufacturing area reference"
              }
            }
          },
          "planningCategory": {
            "type": "string",
            "description": "Planning category"
          }
        }
      },
      "Stock1": {
        "type": "object",
        "properties": {
          "isNonStock": {
            "type": "boolean",
            "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
          },
          "stockQuantity": {
            "type": "number",
            "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
            "format": "double"
          },
          "availableStockQuantity": {
            "type": "number",
            "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
            "format": "double"
          },
          "requireSerialNumberAtGoodsReception": {
            "type": "boolean",
            "description": "If all units of this product should have a serial number in stock, you should require serial number to be required at goods reception. This will ensure that serial number is specified before goods receptions with this product is registered."
          }
        }
      },
      "Procurement1": {
        "type": "object",
        "properties": {
          "expectedLeadTime": {
            "type": "integer",
            "description": "The expected lead time, in number of days, from ordering from supplier to delivery. Used in different purchase processes, typically when supplier is unknown. Note that this might differ from the standard lead times defined on the different suppliers. ",
            "format": "int32"
          }
        }
      },
      "ProductStructure1": {
        "type": "object",
        "properties": {
          "productStructureId": {
            "type": "number",
            "description": "Product structure identifier",
            "format": "int64"
          },
          "ownerType": {
            "type": "string",
            "description": "Type of product structure"
          },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the product",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "type": { "type": "string", "description": "Type of product" },
              "description": {
                "type": "string",
                "description": "Description of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product identifier"
              }
            },
            "description": "The product this structure is valid for"
          },
          "owner": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            },
            "description": "The owner of the product structure"
          }
        }
      },
      "BaseVersion": {
        "type": "object",
        "properties": {
          "productStructureVersionId": {
            "type": "integer",
            "description": "Product structure identifier",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "description": "Base version of the product structure. Will initially be set as the version from the products active product structure.",
            "format": "int32"
          },
          "productStructureVersionLink": {
            "type": "string",
            "description": "Product structure reference"
          }
        }
      },
      "ActivatedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Employee who activated the product structure"
      },
      "ShippingAdviceItem": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "shippingAdviceItemId": {
            "type": "integer",
            "description": "Item-/line-number of the shipping advice",
            "format": "int32"
          },
          "shippingAdvice": {
            "type": "object",
            "properties": {
              "shippingAdviceId": {
                "type": "integer",
                "description": "Shipping advice identifier\r\n",
                "format": "int32"
              },
              "shippingDate": {
                "type": "string",
                "description": "The registration date of the shipping advice/supplier return/ goods transfer, -which is the day stock was reduced (quantity and value)",
                "format": "date"
              },
              "shippingAdviceLink": {
                "type": "string",
                "description": "Shipping advice reference"
              }
            }
          },
          "shippingAdviceItemLink": {
            "type": "string",
            "description": "Shipping advice item reference"
          }
        },
        "description": "The shipping advice item used for shipping. Note that this field is only available if no parents exists (tree level = 0)."
      },
      "Cost1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Additional production cost currency"
          },
          "valueType": {
            "type": "string",
            "description": "Type of additional production cost value. Select AMOUNT for the fixed value or PERCENT for the percentage based value."
          },
          "value": {
            "type": "string",
            "description": "Additional production cost value"
          }
        }
      },
      "ProductionTotals": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "salesBacklog": {
            "type": "number",
            "description": "Total sales backlog of the delivery project",
            "format": "double"
          },
          "accruedIncome": {
            "type": "number",
            "description": "Salesbacklog multiplied with percent completed. If percent completed is not specified for the production delivery snapshot, the accrued income is aggregated from each of the work breakdown structure elements. The accrued income will be the same as invoiced amount by the end of the delivery project.",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced amount of the delivery project",
            "format": "double"
          },
          "advanceInvoicedAmount": {
            "type": "number",
            "description": "Total advance invoice amount for the delivery project",
            "format": "double"
          },
          "salesValue": {
            "type": "number",
            "description": "Totals.SalesBacklog + Totals.InvoicedAmount",
            "format": "double"
          },
          "planned": {
            "type": "object",
            "properties": {
              "hours": {
                "type": "number",
                "description": "Total accrued hours for the delivery project",
                "format": "double"
              },
              "materialCost": {
                "type": "number",
                "description": "SUMPLANNEDMATERIALCOST",
                "format": "double"
              },
              "fixedAdditionalCost": {
                "type": "number",
                "description": "SUMPLANNEDADDEDFIXEDCOST",
                "format": "double"
              },
              "variableAdditionalCost": {
                "type": "number",
                "description": "SUMPLANNEDADDEDVARCOST",
                "format": "double"
              },
              "fixedOperationCost": {
                "type": "number",
                "description": "SUMPLANNEDOPERATIONFIXEDCOST",
                "format": "double"
              },
              "variableOperationCost": {
                "type": "number",
                "description": "SUMPLANNEDOPERATIONVARCOST",
                "format": "double"
              },
              "totalCost": {
                "type": "number",
                "description": "Total planned cost of the delivery project",
                "format": "double"
              }
            }
          },
          "accrued": {
            "type": "object",
            "properties": {
              "hours": {
                "type": "number",
                "description": "Total accrued hours for the delivery project",
                "format": "double"
              },
              "materialCost": {
                "type": "number",
                "description": "SUMACCRUEDMATERIALCOST",
                "format": "double"
              },
              "fixedAdditionalCost": {
                "type": "number",
                "description": "SUMACCRUEDADDEDFIXEDCOST",
                "format": "double"
              },
              "variableAdditionalCost": {
                "type": "number",
                "description": "SUMACCRUEDADDEDVARCOST",
                "format": "double"
              },
              "fixedOperationCost": {
                "type": "number",
                "description": "SUMACCRUEDOPERATIONFIXEDCOST",
                "format": "double"
              },
              "variableOperationCost": {
                "type": "number",
                "description": "SUMACCRUEDOPERATIONVARCOST",
                "format": "double"
              },
              "totalCost": {
                "type": "number",
                "description": "Total accrued cost of the delivery project",
                "format": "double"
              }
            }
          }
        }
      },
      "FinanceProjectTotals": {
        "type": "object",
        "properties": {
          "costOfGoods": {
            "type": "number",
            "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\n'Other cost of goods' for a delivery project are 'material' costs that are not already included based on accumulated values for material/parts that are linked to the included COA items or via work orders (PWOs) that are linked to the COA items and connected sub PWOs.  So other cost of goods must exclude the general ledger (GL) accounts that are connected to inventory flow.",
            "format": "double"
          },
          "salaryCost": {
            "type": "number",
            "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\nProject wages is project labour cost that is not already added via the logged work at the included work orders (PWOs), example:  Engineering cost.\r\nTo be connected to PRS by a dedicated ACG.",
            "format": "double"
          },
          "otherCost": {
            "type": "number",
            "description": "Field from finance linked to PRO by PRO.PRJNO.",
            "format": "double"
          },
          "income": {
            "type": "number",
            "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\nUser must exclude the GL accounts that are used for invoices that are created based on the customer orders (COAs) that are linked to the PRO.",
            "format": "double"
          },
          "stockValue": {
            "type": "number",
            "description": "Inventory value for a delivery project is sum of all inventory on the related finance project. Use SVR with filter on the given project to find the correct value.",
            "format": "double"
          }
        }
      },
      "Totals17": {
        "type": "object",
        "properties": {
          "income": {
            "type": "number",
            "description": "InvoicedAmount + OtherIncome",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "description": "Accrued.ToyalCost + OtherCostOfGoods + Wages + OtherExpences",
            "format": "double"
          },
          "profit": {
            "type": "number",
            "description": "TotalIncome - TotalCost",
            "format": "double"
          }
        }
      },
      "DeliveryProject": {
        "type": "object",
        "properties": {
          "deliveryProjectId": {
            "type": "integer",
            "description": "Sales delivery project identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of sales delivery" },
          "deliveryProjectLink": {
            "type": "string",
            "description": "Sales delivery project reference"
          }
        }
      },
      "ParentManufacturingMaterialLocation": {
        "type": "object",
        "properties": {
          "manufacturingMaterialLocationId": {
            "type": "integer",
            "description": " Reference to the level above this manufacturing material location. If empty then this is the top location.",
            "format": "int32"
          },
          "manufacturingMaterialLocationLink": {
            "type": "string",
            "description": "Manufacturing material location reference"
          }
        }
      },
      "MeasurementType": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Measurements class" }
        }
      },
      "ProductUnit": {
        "type": "object",
        "properties": {
          "productUnitId": {
            "type": "string",
            "description": "Product unit reference"
          },
          "serialNumber": { "type": "string", "description": "Serial number" },
          "productUnitLink": {
            "type": "string",
            "description": "Product unit reference"
          }
        }
      },
      "Source1": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The document who is the source this element. In this version it is a WordOrder document, but in future implementations it could be other document types that have tasks and need planning"
      },
      "TemplateFile": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "integer",
            "description": "Version of the file ",
            "format": "int32"
          },
          "file": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              },
              "fileLink": { "type": "string", "description": "File reference" }
            }
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File version reference"
          }
        },
        "description": "Reference to the template pdf file version to be used in the MRB"
      },
      "ProductStructureOperation": {
        "type": "object",
        "properties": {
          "productStructureOperationId": {
            "type": "integer",
            "description": "Product structure operation identifier",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          },
          "waitTime": {
            "type": "number",
            "description": "The wait time is used to specify if the products needs to wait before continuing to the next operation. A typical example is the time required for drying after the application of paint. The wait time is specified in hours.",
            "format": "double"
          },
          "processing": {
            "type": "object",
            "properties": {
              "runTime": {
                "type": "number",
                "description": "Planned run time in hours for the production operation",
                "format": "double"
              }
            }
          },
          "changeover": {
            "type": "object",
            "properties": {
              "setupTime": {
                "type": "number",
                "description": "Changeover pre/setup time in hours",
                "format": "double"
              },
              "cleanupTime": {
                "type": "number",
                "description": "Changeover post/cleanup time in hours",
                "format": "double"
              }
            }
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Operation id that will create a requirement for this file type"
          },
          "outsourcedOperation": {
            "type": "object",
            "properties": {
              "isOutsourced": {
                "type": "boolean",
                "description": "A flag to indicate if production operation is outsourced"
              }
            }
          },
          "productStructure": {
            "type": "object",
            "properties": {
              "productStructureId": {
                "type": "integer",
                "description": "Product structure reference",
                "format": "int32"
              },
              "productStructureLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          },
          "productStructureVersion": {
            "type": "object",
            "properties": {
              "productStructureVersionId": {
                "type": "integer",
                "description": "Product structure identifier",
                "format": "int32"
              },
              "productStructureVersionLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          }
        }
      },
      "Source2": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Set when the source process is completed. (If the source process is a work order - then set if the work order is completed."
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          }
        },
        "description": "The document who is the source this element. In this version it is a WordOrder document, but in future implementations it could be other document types that have tasks and need planning"
      },
      "Planner": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Last name of employee" },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "OnHold": {
        "type": "object",
        "properties": {
          "isOnHold": {
            "type": "boolean",
            "description": "Flag to indicate if production work order is on hold"
          }
        }
      },
      "ProductMarkingTemplate": {
        "type": "object",
        "properties": {
          "productMarkingTemplateId": {
            "type": "integer",
            "description": "Product marking template identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Product marking template status",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Product marking template name"
          },
          "description": {
            "type": "string",
            "description": "Product marking template description"
          },
          "text": {
            "type": "string",
            "description": "Product marking template text. Type a number from 0 to 79 in curly brackets (e.g. {1}) to create an empty parameter, and then select its value from the list."
          },
          "isDefault": {
            "type": "boolean",
            "description": "A flag to indicate if product marking template is default for all products"
          }
        }
      },
      "ParentProductionResourceCategory": {
        "type": "object",
        "properties": {
          "productionResourceCategoryId": {
            "type": "integer",
            "description": "Reference to the level above this production resource category. If empty then this is the top location.",
            "format": "int32"
          },
          "productionResourceCategoryLink": {
            "type": "string",
            "description": "Production resource category reference"
          }
        }
      },
      "WorkOrderOperationGrouping": {
        "type": "object",
        "properties": {
          "allowGrouping": {
            "type": "boolean",
            "description": "Allows resource to use work order operation grouping"
          },
          "distributeHours": {
            "type": "boolean",
            "description": "If set to 1 the time logged on the operation is distributed on all woo's."
          }
        }
      },
      "LastWorkOrderOperation": {
        "type": "object",
        "properties": {
          "workOrderOperationId": {
            "type": "integer",
            "description": "Production work order operation identifier",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "description": "Date and time work order operation actually started",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "description": "Date and time of completion",
            "format": "date-time"
          },
          "workOrderOperationLink": {
            "type": "string",
            "description": "Work order operation reference"
          }
        }
      },
      "Condition": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "A number which indicates production resource state, 0=OK, 10=warning, 20=stopped",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "description": "A description which explains a reason for setting production resource state"
          }
        }
      },
      "ProductionResource1": {
        "type": "object",
        "properties": {
          "productionResourceId": {
            "type": "integer",
            "description": "Production resource identifier",
            "format": "int32"
          },
          "productionResourceLink": {
            "type": "string",
            "description": "Production resource reference"
          }
        }
      },
      "TaskProcessTemplate1": {
        "type": "object",
        "properties": {
          "taskProcessTemplateId": {
            "type": "integer",
            "description": "Unique identifier for task process template",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the task process template"
          },
          "taskProcessTemplateLink": {
            "type": "string",
            "description": "Task process template reference"
          }
        },
        "description": "Task process template the tasks should be created from"
      },
      "WorkOrderOperationGroup": {
        "type": "object",
        "properties": {
          "workOrderOperationGroupId": {
            "type": "integer",
            "description": "Work order operation group identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of work order operation group",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of  Work Order Operation Group"
          },
          "description": {
            "type": "string",
            "description": "Work order operation group description"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date for Group Work Order Operation",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "Type of work order operation group"
          },
          "priority": {
            "type": "integer",
            "description": "A priority index for work order operation group",
            "format": "int32"
          },
          "operator": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          },
          "productionResource": {
            "type": "object",
            "properties": {
              "productionResourceId": {
                "type": "integer",
                "description": "Production resource identifier",
                "format": "int32"
              },
              "productionResourceLink": {
                "type": "string",
                "description": "Production resource reference"
              }
            }
          }
        }
      },
      "Processing1": {
        "type": "object",
        "properties": {
          "isProcessingCompleted": {
            "type": "boolean",
            "description": "True if processing is completed"
          },
          "plannedRunTime": {
            "type": "number",
            "description": "Planned runtime of the work order operation. Calculated by multiplying the quantity of the work order operation by the runtime of the product structure operation",
            "format": "double"
          },
          "runTime": {
            "type": "number",
            "description": "The time required to process a piece or lot at a specific operation. Specified in hours.",
            "format": "double"
          }
        }
      },
      "Changeover1": {
        "type": "object",
        "properties": {
          "isSetupCompleted": {
            "type": "boolean",
            "description": "True if setup changeover is completed"
          },
          "setupTime": {
            "type": "number",
            "description": "Time in hours used for setup changeover",
            "format": "double"
          },
          "isCleanupCompleted": {
            "type": "boolean",
            "description": "True if cleanup changeover is completed"
          },
          "cleanupTime": {
            "type": "number",
            "description": "Time in hours used for cleanup changeover",
            "format": "double"
          }
        }
      },
      "ApprovedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "OnHold1": {
        "type": "object",
        "properties": {
          "isOnHold": {
            "type": "boolean",
            "description": "True if work order operation is on hold"
          },
          "onHoldAt": {
            "type": "string",
            "description": "Date and time work order operation was set on hold",
            "format": "date-time"
          },
          "onHoldTo": {
            "type": "string",
            "description": "Date and time work order operation should be on hold to",
            "format": "date-time"
          },
          "category": {
            "type": "integer",
            "description": "A category of work order operation on hold reason",
            "format": "int32"
          },
          "causedBy": {
            "type": "string",
            "description": "A side responsible for causing work order operation on hold"
          },
          "reason": {
            "type": "string",
            "description": "Reason for setting work order operation on hold"
          },
          "onHoldBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "ProductStructureOperation1": {
        "type": "object",
        "properties": {
          "productStructureOperationId": {
            "type": "integer",
            "description": "Product structure operation identifier",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          },
          "waitTime": {
            "type": "number",
            "description": "The wait time is used to specify if the products needs to wait before continuing to the next operation. A typical example is the time required for drying after the application of paint. The wait time is specified in hours.",
            "format": "double"
          },
          "processing": {
            "type": "object",
            "properties": {
              "runTime": {
                "type": "number",
                "description": "Planned run time in hours for the production operation",
                "format": "double"
              }
            }
          },
          "changeover": {
            "type": "object",
            "properties": {
              "setupTime": {
                "type": "number",
                "description": "Changeover pre/setup time in hours",
                "format": "double"
              },
              "cleanupTime": {
                "type": "number",
                "description": "Changeover post/cleanup time in hours",
                "format": "double"
              }
            }
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Operation id that will create a requirement for this file type"
          },
          "productionResource": {
            "type": "object",
            "properties": {
              "productionResourceId": {
                "type": "integer",
                "description": "Production resource identifier",
                "format": "int32"
              },
              "allowMultipleOperators": {
                "type": "boolean",
                "description": "True if multiple operators can work with one work order operation."
              },
              "name": {
                "type": "string",
                "description": "Name of  production resource"
              },
              "productionResourceLink": {
                "type": "string",
                "description": "Production resource reference"
              }
            }
          },
          "productionResourceGroup": {
            "type": "object",
            "properties": {
              "productionResourceGroupId": {
                "type": "integer",
                "description": "Production resource group identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production resource group"
              },
              "productionResourceGroupLink": {
                "type": "string",
                "description": "Production resource group reference"
              }
            }
          },
          "outsourcedOperation": {
            "type": "object",
            "properties": {
              "isOutsourced": {
                "type": "boolean",
                "description": "A flag to indicate if production operation is outsourced"
              }
            }
          },
          "productStructure": {
            "type": "object",
            "properties": {
              "productStructureId": {
                "type": "integer",
                "description": "Product structure reference",
                "format": "int32"
              },
              "productStructureLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          },
          "productStructureVersion": {
            "type": "object",
            "properties": {
              "productStructureVersionId": {
                "type": "integer",
                "description": "Product structure identifier",
                "format": "int32"
              },
              "productStructureVersionLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          }
        }
      },
      "LatestOperator": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "WorkOrderOperation": {
        "type": "object",
        "properties": {
          "workOrderOperationId": {
            "type": "integer",
            "description": "Production work order operation identifier",
            "format": "int32"
          },
          "workOrderOperationLink": {
            "type": "string",
            "description": "Work order operation reference"
          }
        }
      },
      "Object4": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "customer": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
              },
              "customerLink": {
                "type": "string",
                "description": "Customer reference"
              }
            }
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "MeasurementUnit1": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "type": "integer",
            "description": "Material unit reference",
            "format": "int32"
          },
          "measurementUnitLink": {
            "type": "string",
            "description": "Material unit reference"
          }
        }
      },
      "ProductionPlanner": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Scrap": {
        "type": "object",
        "properties": {
          "isScrapped": {
            "type": "boolean",
            "description": "True, if element is being scrapped."
          },
          "reason": {
            "type": "integer",
            "description": "Reason for scrapping",
            "format": "int32"
          }
        }
      },
      "SalesDeliveryProject": {
        "type": "object",
        "properties": {
          "salesDeliveryProjectId": {
            "type": "integer",
            "description": "Sales delivery project identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of sales delivery" },
          "salesDeliveryProjectLink": {
            "type": "string",
            "description": "Sales delivery project reference"
          }
        }
      },
      "PreferredStockLocation": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Name of current- and parent stock locations, including seperator for location"
          },
          "stockLocationLink": {
            "type": "string",
            "description": "Stock location reference"
          }
        }
      },
      "ProductRevision": {
        "type": "object",
        "properties": {
          "revision": {
            "type": "string",
            "description": "The Revision of the product"
          }
        }
      },
      "StockLocation1": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Name of current- and parent stock locations, including seperator for location"
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of location" },
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              },
              "locationLink": {
                "type": "string",
                "description": "Location reference"
              }
            }
          },
          "stockLocationLink": {
            "type": "string",
            "description": "Stock location reference"
          }
        },
        "description": "The stock location beeing adjusted"
      },
      "FirstPriceStep": {
        "type": "object",
        "properties": {
          "priceStepId": {
            "type": "integer",
            "description": "Unique price step identifier",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "Value of a price step",
            "format": "double"
          },
          "priceStepLink": {
            "type": "string",
            "description": "Price step reference"
          }
        }
      },
      "Period1": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "Date from standard price is valid (for adding in the future)",
            "format": "date"
          },
          "expirationDate": {
            "type": "string",
            "description": "Date until standard price is valid (for ending in the future)",
            "format": "date"
          }
        }
      },
      "ReplacedPrice": {
        "type": "object",
        "properties": {
          "standardRecurringPriceId": {
            "type": "integer",
            "description": "Identifier of a standard recurring price that is going to be replaced by this price",
            "format": "int32"
          },
          "standardRecurringPriceLink": {
            "type": "string",
            "description": "Identifier"
          }
        }
      },
      "StockValueChange1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "quantity": {
            "type": "number",
            "description": "Changes in quantity ",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Changes in total stock value",
            "format": "double"
          }
        }
      },
      "WorkInProgressChange1": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Changes in quantity ",
            "format": "double"
          }
        }
      },
      "Supplier9": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the supplier. 1:New, 2:Pending internal approvement, 4:Active, 9:Obsolete",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
          },
          "supplierLink": {
            "type": "string",
            "description": "Supplier reference"
          }
        }
      },
      "Sales": {
        "type": "object",
        "properties": {
          "stockQuantity": {
            "type": "number",
            "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
            "format": "double"
          },
          "availableStockQuantity": {
            "type": "number",
            "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
            "format": "double"
          }
        }
      },
      "SuggestedPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "Discount price",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "assumingQuantity": {
            "type": "number",
            "description": "Quantity used to calculate lowest standard price.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
          },
          "salesQuoteItem": {
            "type": "object",
            "properties": {
              "salesQuoteItemId": {
                "type": "integer",
                "description": "Sales quote item identifier",
                "format": "int32"
              },
              "salesQuote": {
                "type": "object",
                "properties": {
                  "salesQuoteId": {
                    "type": "integer",
                    "description": "Sales quote identifier",
                    "format": "int32"
                  },
                  "salesQuoteLink": {
                    "type": "string",
                    "description": "Sales quote reference"
                  }
                }
              },
              "salesQuoteItemLink": {
                "type": "string",
                "description": "Sales quote item referene"
              }
            },
            "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
          }
        },
        "description": "The suggested price for the expanded product. Unlike the lowest price, the suggested price is always prioritizing item price agreements before the price from the price list. The suggested price will be based on a sales quote, if the sales quote has the lowest price. "
      },
      "LowestPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "Discount price",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "assumingQuantity": {
            "type": "number",
            "description": "Quantity used to calculate lowest standard price.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
          }
        }
      },
      "Drawing": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "fileVersionId": {
            "type": "string",
            "description": "File identifier"
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File reference"
          }
        },
        "description": "Drawing of the product structure"
      },
      "ProductionOperation1": {
        "type": "object",
        "properties": {
          "productionOperationId": {
            "type": "integer",
            "description": "Production operation identifier",
            "format": "int32"
          },
          "productionOperationLink": {
            "type": "string",
            "description": "Production operation reference"
          }
        },
        "description": "Requirement is based on matching OPRNO. If this field is used, a file linked to PWO with this OPR in kit item must be matching this OPRNO."
      },
      "ProjectOrder1": {
        "type": "object",
        "properties": {
          "projectOrderId": {
            "type": "integer",
            "description": "Project order identifier",
            "format": "int32"
          },
          "projectOrderLink": {
            "type": "string",
            "description": "Project order reference"
          }
        },
        "description": "Reference to the project order this picking list belongs to"
      },
      "ProductUnit1": {
        "type": "object",
        "properties": {
          "productUnitId": {
            "type": "integer",
            "description": "Product unit identifier",
            "format": "int32"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the product unit"
          },
          "productUnitLink": {
            "type": "string",
            "description": "Product unit reference"
          }
        }
      },
      "ProductStructureOperation2": {
        "type": "object",
        "properties": {
          "productStructureOperationId": {
            "type": "integer",
            "description": "Product structure operation identifier",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          },
          "productStructure": {
            "type": "object",
            "properties": {
              "productStructureId": {
                "type": "integer",
                "description": "Product structure reference",
                "format": "int32"
              },
              "productStructureLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          },
          "productStructureOperationLink": {
            "type": "string",
            "description": "Product structure operation reference"
          }
        },
        "description": "Product structure operation reference"
      },
      "SubtractedQuantity": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Quantity subtracted from the purchase requirement",
            "format": "double"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            },
            "description": "The object related to the subtracted quantity. Typically a goods reception (stock) or a production work order"
          }
        }
      },
      "OnHold2": {
        "type": "object",
        "properties": {
          "isOnHold": {
            "type": "boolean",
            "description": "True if work order operation is on hold"
          },
          "onHoldAt": {
            "type": "string",
            "description": "Date and time work order operation was set on hold",
            "format": "date-time"
          },
          "onHoldTo": {
            "type": "string",
            "description": "Date and time work order operation should be on hold to",
            "format": "date-time"
          },
          "category": {
            "type": "integer",
            "description": "A category of work order operation on hold reason",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "description": "Reason for setting work order operation on hold"
          }
        }
      },
      "WorkOrderOperationGroup1": {
        "type": "object",
        "properties": {
          "workOrderOperationGroupId": {
            "type": "integer",
            "description": "Work order operation group identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of  Work Order Operation Group"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date for Group Work Order Operation",
            "format": "date"
          },
          "type": {
            "type": "string",
            "description": "Type of work order operation group"
          },
          "workOrderOperationGroupLink": {
            "type": "string",
            "description": "Work order operation group's reference"
          }
        }
      },
      "LatestWorkOrderProductOperation": {
        "type": "object",
        "properties": {
          "productUnit": {
            "type": "object",
            "properties": {
              "serialNumber": {
                "type": "string",
                "description": "Serial number of the product unit"
              }
            }
          }
        }
      },
      "TotalHours": {
        "type": "object",
        "properties": {
          "available": {
            "type": "number",
            "description": "Free hours (not allocated) capacity for the date.",
            "format": "double"
          },
          "assigned": {
            "type": "number",
            "description": "Total used hours for the date.",
            "format": "double"
          },
          "assignedToActiveWorkOrders": {
            "type": "number",
            "description": "Hours reserved by released production work orders for the date.",
            "format": "double"
          },
          "assignedToPlannedWorkOrders": {
            "type": "number",
            "description": "Hours reserved for planned but not released production work orders for the date.",
            "format": "double"
          },
          "capacity": {
            "type": "number",
            "description": "Resource day (per date) capacity in hours.",
            "format": "double"
          }
        }
      },
      "Management": {
        "type": "object",
        "properties": {
          "projectLeader": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is a production management project leader."
          },
          "documentController": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is a production management document controller."
          }
        }
      },
      "ProductStructureOperation3": {
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          },
          "waitTime": {
            "type": "number",
            "description": "The wait time is used to specify if the products needs to wait before continuing to the next operation. A typical example is the time required for drying after the application of paint. The wait time is specified in hours.",
            "format": "double"
          },
          "changeover": {
            "type": "object",
            "properties": {
              "setupTime": {
                "type": "number",
                "description": "Changeover pre/setup time in hours",
                "format": "double"
              },
              "cleanupTime": {
                "type": "number",
                "description": "Changeover post/cleanup time in hours",
                "format": "double"
              }
            }
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Operation id that will create a requirement for this file type"
          }
        }
      },
      "Drawing1": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "integer",
            "description": "Version of the file ",
            "format": "int32"
          },
          "file": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              },
              "fileLink": { "type": "string", "description": "File reference" }
            }
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File version reference"
          }
        },
        "description": "Drawing of the product structure"
      },
      "ProductionResourceCategory": {
        "type": "object",
        "properties": {
          "productionResourceCategoryId": {
            "type": "integer",
            "description": "Production resource category identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Production resource category name"
          },
          "productionResourceCategoryLink": {
            "type": "string",
            "description": "Production resource category reference"
          }
        }
      },
      "Source3": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "LatestProductRevision": {
        "type": "object",
        "properties": {
          "revision": { "type": "string", "description": "Revision number" }
        }
      },
      "User2": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "ReopenReason": {
        "type": "object",
        "properties": {
          "reopenReasonId": {
            "type": "integer",
            "description": "Identifer of Reopen Reason",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Status of Reopen Reason"
          },
          "value": {
            "type": "string",
            "description": "Value of Reopen Reason"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of Reopen Reason",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "FileRequirement": {
        "type": "object",
        "properties": {
          "fileRequirementId": {
            "type": "integer",
            "description": "Unique identifier for Requirements",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of a requirement indicates if the requirement for documentation is completed",
            "format": "int32"
          },
          "createdAt": {
            "type": "utcdatetime",
            "description": "Automatically generated timestamp field maintained by the execution engine (when document data is updated)"
          },
          "updatedAt": {
            "type": "utcdatetime",
            "description": "Date and time of update"
          },
          "description": {
            "type": "string",
            "description": "Description of file requirement"
          },
          "requiredForInternalUse": {
            "type": "boolean",
            "description": "Sets requirements for internal documentation"
          },
          "requiredForMRB": {
            "type": "boolean",
            "description": "Sets requirements to Manufacturing Record book."
          },
          "fileType": {
            "type": "object",
            "properties": {
              "fileTypeId": {
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Strong typed name for a file type"
              },
              "fileTypeLink": {
                "type": "string",
                "description": "Full doc reference to the FileType id"
              }
            }
          },
          "regarding": {
            "type": "object",
            "properties": {
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            },
            "description": "Owning object. Used to link a requirement to a operations or other objects that has documentation requirements."
          },
          "context": {
            "type": "object",
            "properties": {
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "Requirement is based on matching ARTIT. If this field is used, a file linked to SSA.ITM must be matching this artit."
              },
              "productionOperation": {
                "type": "object",
                "properties": {
                  "productionOperationId": {
                    "type": "integer",
                    "description": "Production operation identifier",
                    "format": "int32"
                  },
                  "productionOperationLink": {
                    "type": "string",
                    "description": "Production operation reference"
                  }
                },
                "description": "Requirement is based on matching OPRNO. If this field is used, a file linked to PWO with this OPR in kit item must be matching this OPRNO."
              },
              "purchaseOrderItem": {
                "type": "object",
                "properties": {
                  "purchaseOrderItemId": {
                    "type": "integer",
                    "description": "Item-/line-number of the purchase order",
                    "format": "int32"
                  },
                  "purchaseOrder": {
                    "type": "object",
                    "properties": {
                      "purchaseOrderId": {
                        "type": "integer",
                        "description": "Purchase order identifier",
                        "format": "int32"
                      },
                      "purchaseOrderLink": {
                        "type": "string",
                        "description": "Purchase order reference"
                      }
                    },
                    "description": "Value set from originating purchase ORDERID"
                  },
                  "purchaseOrderItemLink": {
                    "type": "string",
                    "description": "Purchase order item reference"
                  }
                },
                "description": "Value set from originating purchase ORDERITEMID"
              },
              "salesOrderItem": {
                "type": "object",
                "properties": {
                  "salesOrderItemId": {
                    "type": "integer",
                    "description": "Sales order item identifier",
                    "format": "int32"
                  },
                  "salesOrder": {
                    "type": "object",
                    "properties": {
                      "salesOrderId": {
                        "type": "integer",
                        "description": "Sales order identifier",
                        "format": "int32"
                      },
                      "salesOrderLink": {
                        "type": "string",
                        "description": "Sales order reference"
                      }
                    },
                    "description": "Value set from the originating sales order ORDERID"
                  },
                  "salesOrderItemLink": {
                    "type": "string",
                    "description": "Reference to the order item."
                  }
                },
                "description": "Value set from the originating sales order item ORDERITMID"
              }
            }
          },
          "stopEvent": {
            "type": "object",
            "properties": {
              "eventTypeId": {
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              },
              "eventTypeLink": {
                "type": "string",
                "description": "RamBase event type reference"
              }
            },
            "description": "Optional event type which requires file requirement to be met (ProductionOperationCompleted, ProductActivated). DOV"
          },
          "fileRequirementLink": {
            "type": "string",
            "description": "Full docId for the file requirement."
          }
        }
      },
      "CostOverrun": {
        "type": "object",
        "properties": {
          "hasCostOverrun": {
            "type": "boolean",
            "description": "Flag to indicate if product structure's operation has got cost deviation"
          },
          "approvedAmount": {
            "type": "number",
            "description": "Cost overrun approved value",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Value of product structure's operation cost deviation",
            "format": "double"
          }
        }
      },
      "TimeOverrun": {
        "type": "object",
        "properties": {
          "hasTimeOverrun": {
            "type": "boolean",
            "description": "Flag to indicate if product structure's operation has got worklog deviation"
          },
          "percent": {
            "type": "number",
            "description": "Percentage value of product structure's operation worklog deviation",
            "format": "double"
          }
        }
      },
      "ProductStructureOperation4": {
        "type": "object",
        "properties": {
          "productStructureOperationId": {
            "type": "integer",
            "description": "Product structure operation identifier",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Operation id that will create a requirement for this file type"
          },
          "productStructureOperationLink": {
            "type": "string",
            "description": "Product structure operation reference"
          }
        }
      },
      "WorkOrderOperation1": {
        "type": "object",
        "properties": {
          "workOrderOperationId": {
            "type": "integer",
            "description": "Production work order operation identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Production work order operation status",
            "format": "int32"
          },
          "workOrderOperationLink": {
            "type": "string",
            "description": "Work order operation reference"
          }
        }
      },
      "Product12": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the product",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Product13": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the product",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "stock": {
            "type": "object",
            "properties": {
              "stockQuantity": {
                "type": "number",
                "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                "format": "double"
              },
              "availableStockQuantity": {
                "type": "number",
                "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                "format": "double"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "CustomsTariff": {
        "type": "object",
        "properties": {
          "customsTariffId": {
            "type": "integer",
            "description": "Customs tariff identifier",
            "format": "int32"
          },
          "code": { "type": "string", "description": "Customs tariff code" },
          "description": {
            "type": "string",
            "description": "Description of customs tariff code"
          },
          "customsTariffLink": {
            "type": "string",
            "description": "Customs tariff reference"
          }
        }
      },
      "Procurement2": {
        "type": "object",
        "properties": {
          "blockedForPurchase": {
            "type": "boolean",
            "description": "If a product is blocked for purchase, no purchase quotes or purchase orders with that product can be registered. "
          },
          "excludeFromSOPProcesses": {
            "type": "boolean",
            "description": "Exclude product from sales- and operation (SOP) processes for location. Typically used for products/materials being purchased, but can also be set for products with product structure."
          },
          "reorderQuantity": {
            "type": "number",
            "description": "Preferred quantity to use when reordering to this location. Is also used as order quantity when stock gets below reorder point.",
            "format": "double"
          },
          "reorderPoint": {
            "type": "number",
            "description": "A minimum amount of quantity which a location holds in stock, such that, when stock falls to this amount, the product must be reordered.\r\n\r\n",
            "format": "double"
          },
          "purchaseNote": {
            "type": "string",
            "description": "Purchase note for this product on this location"
          },
          "purchaseGroup": {
            "type": "object",
            "properties": {
              "purchaseGroupId": {
                "type": "integer",
                "description": "Purchase group identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of purchase group"
              },
              "purchaseGroupLink": {
                "type": "string",
                "description": "Purchase group identifier"
              }
            }
          }
        }
      },
      "Stock2": {
        "type": "object",
        "properties": {
          "stockQuantity": {
            "type": "number",
            "description": "Quantity on hand. The total number of the product that are physically located in this location at the current time. This includes items that are already allocated to fulfilling production needs or sales orders. This number may differ from the available quantity.",
            "format": "double"
          },
          "availableStockQuantity": {
            "type": "number",
            "description": "Quantity on hand which is not allocated. The total number of the product that are physically located in this location and are currently available for use in filling a new order or for purposes such as production or distribution.",
            "format": "double"
          },
          "availablePurchasedQuantity": {
            "type": "number",
            "description": "Purchased quantity which is not allocated and are currently available for use in filling a new order or for purposes such as production or distribution.",
            "format": "double"
          },
          "classification": {
            "type": "string",
            "description": "Stock classification differentiate products based on their value to segment them into categories (A, B, and C).\r\n‘A’ classification items are very important\r\n‘B’ classification items are important\r\n‘C’ classification items are marginally important"
          },
          "preferredStockLocation": {
            "type": "object",
            "properties": {
              "stockLocationId": {
                "type": "integer",
                "description": "Stock location identifier",
                "format": "int32"
              },
              "label": {
                "type": "string",
                "description": "Name of current- and parent stock locations, including seperator for location"
              },
              "stockLocationLink": {
                "type": "string",
                "description": "Stock location reference"
              }
            }
          }
        }
      },
      "Production1": {
        "type": "object",
        "properties": {
          "blockedForProduction": {
            "type": "boolean",
            "description": "If a product is blocked for production, no production work orders with that product can be registered."
          },
          "leadTime": {
            "type": "integer",
            "description": "Production lead time (or manufacturing lead time) is the period of time between a merchant’s purchase order being placed and the manufacturer completing the order. A short production lead time is better than a long production lead time, as it ensures customers get products quickly. Specified in days.",
            "format": "int32"
          },
          "minimumWorkOrderQuantity": {
            "type": "number",
            "description": "Minimum ProductionOrder quantity to a prodcution",
            "format": "double"
          },
          "automaticallyCreateWorkOrdersForSubstructures": {
            "type": "boolean",
            "description": "True if production work orders should be created for sub structures automatically"
          },
          "daysToExpediteScheduledStartDate": {
            "type": "integer",
            "description": "Number of days the production will start ahead of the scheduled start date. Set this value if you want a buffer to be sure you are ready in time.",
            "format": "int32"
          },
          "isManufacturedExternally": {
            "type": "boolean",
            "description": "True if product structure is manufactured externally, and not by ourself"
          },
          "useLineProduction": {
            "type": "boolean",
            "description": "True if this product is planned and manufactured in line production."
          },
          "produceInMultipleOf": {
            "type": "integer",
            "description": "Quantity to procude in multiple of. Ex. if set to 2, you can only produce 2, 4, 6 etc.",
            "format": "int32"
          },
          "standardStructure": {
            "type": "object",
            "properties": {
              "productStructureVersionId": {
                "type": "integer",
                "description": "Product structure identifier",
                "format": "int32"
              },
              "productRevision": {
                "type": "object",
                "properties": {
                  "revision": {
                    "type": "string",
                    "description": "The Revision of the product"
                  }
                }
              },
              "drawing": {
                "type": "object",
                "properties": {
                  "fileVersionId": {
                    "type": "integer",
                    "description": "Version of the file ",
                    "format": "int32"
                  },
                  "file": {
                    "type": "object",
                    "properties": {
                      "fileId": {
                        "type": "integer",
                        "description": "File identifier",
                        "format": "int32"
                      },
                      "fileLink": {
                        "type": "string",
                        "description": "File reference"
                      }
                    }
                  },
                  "fileVersionLink": {
                    "type": "string",
                    "description": "File version reference"
                  }
                },
                "description": "Drawing of the product structure"
              },
              "productStructureVersionLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            },
            "description": "Latest active product structure of the product\r\n"
          },
          "expectedWastage": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Quantity wasted",
                "format": "double"
              },
              "percent": {
                "type": "number",
                "description": "Standard percentage of wastage for product when used in a production work order in this location",
                "format": "double"
              }
            }
          }
        }
      },
      "Sales1": {
        "type": "object",
        "properties": {
          "blockedForSale": {
            "type": "boolean",
            "description": "If a product is blocked for sales, no sales quotes, sales order requests, sales order change requests or sales orders with that product can be registered in this location."
          },
          "blockedForShipping": {
            "type": "boolean",
            "description": "If a product is blocked for shipping, no shipments can be sent to customers from this location."
          }
        }
      },
      "ExpectedCost": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "cost": {
            "type": "number",
            "description": "Expected cost of product for this location",
            "format": "double"
          }
        }
      },
      "Package1": {
        "type": "object",
        "properties": {
          "packageType": {
            "type": "string",
            "description": "Type of wrapping used for the package"
          },
          "packageQuantity": {
            "type": "number",
            "description": "Total quantity of the product within a package",
            "format": "double"
          }
        }
      },
      "RestrictedTo": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "name": {
            "type": "string",
            "description": "Name of supplier/customer that the notification trigger is restricted to"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "ProductSupplier": {
        "type": "object",
        "properties": {
          "productSupplierId": {
            "type": "integer",
            "description": "Product supplier identifier",
            "format": "int32"
          },
          "isPreferred": {
            "type": "boolean",
            "description": "Whether this supplier is preferred or not"
          },
          "supplier": {
            "type": "object",
            "properties": {
              "supplierId": {
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
              },
              "supplierLink": {
                "type": "string",
                "description": "Supplier reference"
              }
            }
          },
          "productSupplierLink": {
            "type": "string",
            "description": "Product supplier reference"
          }
        }
      },
      "ReplenishmentConfiguration": {
        "type": "object",
        "properties": {
          "replenishmentConfigurationId": {
            "type": "integer",
            "description": "Stock location replinishment configuration identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "replenishmentPoint": {
            "type": "number",
            "description": "The minimum quantity of the specified product that should be present at the specified stock location ",
            "format": "double"
          },
          "replenishmentQuantity": {
            "type": "number",
            "description": "The quantity of the specified product that should be reordered to the specified stock location",
            "format": "double"
          },
          "stockLocation": {
            "type": "object",
            "properties": {
              "stockLocationId": {
                "type": "integer",
                "description": "Stock location identifier",
                "format": "int32"
              },
              "label": {
                "type": "string",
                "description": "Name of current- and parent stock locations, including seperator for location"
              },
              "location": {
                "type": "object",
                "properties": {
                  "locationId": {
                    "type": "integer",
                    "description": "Location identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of location"
                  },
                  "shortName": {
                    "type": "string",
                    "description": "Unique abbreviation/short name of the location"
                  },
                  "locationLink": {
                    "type": "string",
                    "description": "Location reference"
                  }
                }
              },
              "stockLocationLink": {
                "type": "string",
                "description": "Stock location reference"
              }
            },
            "description": "The stock location beeing adjusted"
          },
          "replenishmentConfigurationLink": {
            "type": "string",
            "description": "Stock location replenishment reference"
          }
        }
      },
      "PriceList1": {
        "type": "object",
        "properties": {
          "priceListId": {
            "type": "integer",
            "description": "Price list identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the price list" },
          "priceListLink": {
            "type": "string",
            "description": "Price list reference"
          }
        }
      },
      "StandardRecurringPrice": {
        "type": "object",
        "properties": {
          "standardRecurringPriceId": {
            "type": "integer",
            "description": "Identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Status: 3 = future, 4 = active, 9 = discontinued",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "recurringPrice": {
            "type": "object",
            "properties": {
              "recurringPriceId": {
                "type": "integer",
                "description": "Recurring price identifier",
                "format": "int32"
              },
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "priceInterval": {
                "type": "integer",
                "description": "Interval of recurring price",
                "format": "int32"
              },
              "hasOneTimeFee": {
                "type": "boolean",
                "description": "Boolean indicating if the recurring price has a one-time fee."
              },
              "hasUsage": {
                "type": "boolean",
                "description": "Boolean indicating if the recurring price has any usage steps."
              },
              "recurringPriceLink": {
                "type": "string",
                "description": "Recurring price indentifier"
              }
            }
          },
          "priceList": {
            "type": "object",
            "properties": {
              "priceListId": {
                "type": "integer",
                "description": "Price list identifier",
                "format": "int32"
              },
              "priceListLink": {
                "type": "string",
                "description": "Price list reference"
              }
            }
          },
          "firstPriceStep": {
            "type": "object",
            "properties": {
              "priceStepId": {
                "type": "integer",
                "description": "Unique price step identifier",
                "format": "int32"
              },
              "price": {
                "type": "number",
                "description": "Value of a price step",
                "format": "double"
              },
              "priceStepLink": {
                "type": "string",
                "description": "Price step reference"
              }
            }
          },
          "period": {
            "type": "object",
            "properties": {
              "effectiveDate": {
                "type": "string",
                "description": "Date from standard price is valid (for adding in the future)",
                "format": "date"
              },
              "expirationDate": {
                "type": "string",
                "description": "Date until standard price is valid (for ending in the future)",
                "format": "date"
              }
            }
          },
          "replacedPrice": {
            "type": "object",
            "properties": {
              "standardRecurringPriceId": {
                "type": "integer",
                "description": "Identifier of a standard recurring price that is going to be replaced by this price",
                "format": "int32"
              },
              "standardRecurringPriceLink": {
                "type": "string",
                "description": "Identifier"
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              },
              "locationLink": {
                "type": "string",
                "description": "Location reference"
              }
            }
          }
        }
      },
      "SuppliersProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Supplier/sellers internal product name"
          }
        }
      },
      "ParentPhantomProduct": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "SetNextOperationReadyTrigger": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Value for degree of completion you require in order to automatically set next operation as ready",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "Unit for degree of completion you require in order to automatically set next operation as ready"
          }
        }
      },
      "ProductForOutsourcedOperation": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product identifier"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        },
        "description": "Product reference that is used when purchasing the outsourced production operation"
      },
      "Checkpoint": {
        "type": "object",
        "properties": {
          "hasCheckpoint": {
            "type": "boolean",
            "description": "Has the value of 1 if the production operation has a checkpoint set"
          },
          "description": {
            "type": "string",
            "description": "The checkpoint text"
          }
        }
      },
      "FileType1": {
        "type": "object",
        "properties": {
          "fileTypeId": {
            "type": "integer",
            "description": "Link to filetypeId",
            "format": "int32"
          },
          "fileTypeLink": {
            "type": "string",
            "description": "Full doc reference to the FileType id"
          }
        }
      },
      "Planned": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "number",
            "description": "Planned time of WBS element",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "description": "Planned cost of WBS element",
            "format": "double"
          }
        }
      },
      "Accrued": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "number",
            "description": "Accrued time of WBS element",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "description": "Accrued cost of WBS element",
            "format": "double"
          },
          "activeWorkOrdersCost": {
            "type": "number",
            "description": "Production cost:  Accrued cost for active work orders, PWO with ST<9.",
            "format": "double"
          },
          "finishedWorkOrdersCost": {
            "type": "number",
            "description": "Cost finished productions:  Real (accrued) cost for work orders that are forwarded to stock (PWO is forwarded to SSA) but where the SSA is still in stock, the COA item is not forwarded to a CSA that is shipped (ST>3)",
            "format": "double"
          },
          "shippedWorkOrdersCost": {
            "type": "number",
            "description": "Shipped cost:  Accrued (real) cost for prod SSAs for COA items that are delivered, the CSA has ST>3",
            "format": "double"
          }
        }
      },
      "Deviation": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "number",
            "description": "PRS1.TIMEDEVIATION",
            "format": "double"
          },
          "hoursPercent": {
            "type": "number",
            "description": "PRS1.TIMEDEVIATIONPCT",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "description": "PRS1.COSTDEVIATION. Only when finished.",
            "format": "double"
          },
          "totalCostPercent": {
            "type": "number",
            "description": "PRS1.COSTDEVIATIONPCT",
            "format": "double"
          }
        },
        "description": "Deviations calculated when the work order operation is completed"
      },
      "SalesOrderItem1": {
        "type": "object",
        "properties": {
          "salesOrderItemId": {
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the sales order item (0-9).",
            "format": "int32"
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "The delivery date as requested by the customer.",
            "format": "date"
          },
          "confirmedDeliveryDate": {
            "type": "string",
            "description": "Confirmed date of delivery. Date of which the customer can expect the arriving goods",
            "format": "date"
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "remainingAmount": {
                "type": "number",
                "description": "Total remaining value of item in document currency. The sum of remaining quantity and open forwarded quantity, multiplied with netprice",
                "format": "double"
              }
            }
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              },
              "salesOrderLink": {
                "type": "string",
                "description": "Sales order reference"
              }
            },
            "description": "Value set from the originating sales order ORDERID"
          },
          "salesOrderItemLink": {
            "type": "string",
            "description": "Reference to the order item."
          }
        },
        "description": "The sales order item of the WBS element. Note that this is a snapshot back in time."
      },
      "ProductionWorkOrder1": {
        "type": "object",
        "properties": {
          "productionWorkOrderId": {
            "type": "integer",
            "description": "Production work order identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "status": {
            "type": "integer",
            "description": "Status of production work order",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity that will be (or has been) produced",
            "format": "double"
          },
          "hasMaterialShortage": {
            "type": "boolean",
            "description": "True if production has supply shortage (negative metarial trend)"
          },
          "confirmedCompletionDate": {
            "type": "string",
            "description": "The confirmed date of completion for the production work order",
            "format": "date"
          },
          "scheduledStartDate": {
            "type": "string",
            "description": "Scheduled/planned date of production start",
            "format": "date"
          },
          "productionWorkOrderLink": {
            "type": "string",
            "description": "Production work order reference"
          }
        },
        "description": "Production work order for WBS element. Note that this is a snapshot back in time."
      },
      "ParentSection": {
        "type": "object",
        "properties": {
          "parentSectionId": {
            "type": "integer",
            "description": "Book section identifier",
            "format": "int32"
          },
          "parentSectionLink": {
            "type": "string",
            "description": "Full id reference to a book section."
          }
        },
        "description": "Parent chapter item to build a treeview model of the book"
      },
      "TransitDays": {
        "type": "object",
        "properties": {
          "to": {
            "type": "integer",
            "description": "Transporttime in days from manufacturer premises to supplier",
            "format": "int32"
          },
          "from": {
            "type": "integer",
            "description": "Transporttime in days from supplier to manufacturer premises",
            "format": "int32"
          }
        }
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "parameterId": {
            "type": "integer",
            "description": "Product marking template parameter identifier",
            "format": "int32"
          },
          "key": {
            "type": "integer",
            "description": "Product marking template parameter key",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "description": "Product marking template parameter's content"
          }
        }
      },
      "ProductionWorkingTimeTemplate": {
        "type": "object",
        "properties": {
          "productionWorkingTimeTemplateId": {
            "type": "integer",
            "description": "Production working time template identification number",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Production working time template name"
          },
          "productionWorkingTimeTemplateLink": {
            "type": "string",
            "description": "Production working time template referene"
          }
        }
      },
      "HourRate": {
        "type": "object",
        "properties": {
          "hourRateId": {
            "type": "integer",
            "description": "Id of production's resource hour rate",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of production resource's hour rate",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of production resource's hour rate"
          },
          "rate": {
            "type": "number",
            "description": "Production resource's hour rate value",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Name/description of currency"
          },
          "validity": {
            "type": "object",
            "properties": {
              "effectiveDate": {
                "type": "string",
                "description": "Valid from",
                "format": "date"
              },
              "expirationDate": {
                "type": "string",
                "description": "Valid to",
                "format": "date"
              }
            }
          }
        }
      },
      "RestrictedStockLocation": {
        "type": "object",
        "properties": {
          "restrictedStockLocationId": {
            "type": "integer",
            "description": "Production resource restricted stock location item identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the resticted stock location",
            "format": "int32"
          },
          "addedAt": {
            "type": "string",
            "description": "Production resource restricted stock location creation date",
            "format": "date-time"
          },
          "stockLocation": {
            "type": "object",
            "properties": {
              "stockLocationId": {
                "type": "integer",
                "description": "Stock location identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of stock location"
              },
              "label": {
                "type": "string",
                "description": "Name of current- and parent stock locations, including seperator for location"
              },
              "description": {
                "type": "string",
                "description": "Description of stock location"
              },
              "location": {
                "type": "object",
                "properties": {
                  "locationId": {
                    "type": "integer",
                    "description": "Location identifier",
                    "format": "int32"
                  },
                  "locationLink": {
                    "type": "string",
                    "description": "Location reference"
                  }
                }
              },
              "stockLocationLink": {
                "type": "string",
                "description": "Stock location reference"
              }
            }
          },
          "addedBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          }
        }
      },
      "Operator": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "integer",
            "description": "Identifier of restricted operator",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of production resource's restricted operator",
            "format": "int32"
          },
          "employee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          }
        }
      },
      "Sequence": {
        "type": "object",
        "properties": {
          "startValue": {
            "type": "integer",
            "description": "The start value if CONTENTTYPE = SEQUENCE.",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Only used when contenttype = 'SEQUENCE'.\r\n If > 0 means the sequence will have a fixed length , and filled from the left using the FILLER value.\r\n\r\n",
            "format": "int32"
          },
          "fillerCharacter": {
            "type": "string",
            "description": "the character filled in when this is a sequence with LENGTH field > 0. (Usually '0')."
          }
        }
      },
      "FinishedBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "ProductUnit2": {
        "type": "object",
        "properties": {
          "productUnitId": {
            "type": "integer",
            "description": "Product unit identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of product unit",
            "format": "int32"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the product unit"
          },
          "batchQuantity": {
            "type": "integer",
            "description": "Units quantity",
            "format": "int32"
          },
          "marking": {
            "type": "string",
            "description": "Product unit's marking text"
          },
          "productUnitLink": {
            "type": "string",
            "description": "Product unit reference"
          }
        }
      },
      "Measurement": {
        "type": "object",
        "properties": {
          "measurementId": {
            "type": "integer",
            "description": "Measurement identifier",
            "format": "int32"
          },
          "type": { "type": "string", "description": "Measurements class" }
        }
      },
      "Split": {
        "type": "object",
        "properties": {
          "totalHoursSplitted": {
            "type": "number",
            "description": "A sum of all splitted from split source total hours",
            "format": "double"
          },
          "isSplitSource": {
            "type": "boolean",
            "description": "A flag to indicate if work log element has been splitted"
          },
          "splittedFrom": {
            "type": "object",
            "properties": {
              "workPeriodId": {
                "type": "integer",
                "description": "Identifier of work period which is a source of that worklog element",
                "format": "int32"
              },
              "workOrderOperation": {
                "type": "object",
                "properties": {
                  "workOrderOperationId": {
                    "type": "integer",
                    "description": "Production work order operation identifier",
                    "format": "int32"
                  },
                  "workOrderOperationLink": {
                    "type": "string",
                    "description": "Work order operation reference"
                  }
                }
              },
              "workPeriodLink": {
                "type": "string",
                "description": "Work period reference"
              }
            }
          }
        }
      },
      "Correction": {
        "type": "object",
        "properties": {
          "totalHoursCorrected": {
            "type": "number",
            "description": "A sum of all corrected hours from correction source",
            "format": "double"
          },
          "isCorrectionSource": {
            "type": "boolean",
            "description": "A flag to indicate if work log element has been corrected"
          },
          "correctionOf": {
            "type": "object",
            "properties": {
              "workPeriodId": {
                "type": "integer",
                "description": "Identifier of corrected work log element",
                "format": "int32"
              },
              "workPeriodLink": {
                "type": "string",
                "description": "Work period reference"
              }
            }
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "description": "Identifier for section content",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time stamp this content was created",
            "format": "date-time"
          },
          "type": {
            "type": "integer",
            "description": "Domain value to determine the type of content. Values are: Files, Template page",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of content"
          },
          "bookmarkTitle": {
            "type": "string",
            "description": "Title for the content page. This title supports macros like {n} for a running number, {nn} for a 0-prefixed running number, {pwoid} as a reference to the PWO id."
          },
          "sortIndex": {
            "type": "integer",
            "description": "Sortable index value to reorder the content within a chapter.",
            "format": "int32"
          },
          "separator": {
            "type": "string",
            "description": "Separator page between documents added to the MRB.  This is a macro and indicates an internal incremental number: {n}. Additional text can be added to better indicate end of document and start of new document."
          },
          "templateFilePageNumber": {
            "type": "integer",
            "description": "Reference that points to a specific page number in the Template PDF to be added to the MRB.",
            "format": "int32"
          }
        }
      },
      "Translation4": {
        "type": "object",
        "properties": {
          "translationId": {
            "type": "integer",
            "description": "Unique identifier for a translated section title",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when the title was translated",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "description": "Translated language"
          },
          "title": {
            "type": "string",
            "description": "Translated section title"
          }
        }
      },
      "Drawing2": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "fileVersionId": {
            "type": "string",
            "description": "File identifier"
          },
          "fileName": {
            "type": "string",
            "description": "Filename to display for the file version. Will be used when downloading the file."
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File reference"
          }
        },
        "description": "Drawing of the product structure"
      },
      "QualityConsequenceArea": {
        "type": "object",
        "properties": {
          "lowerThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
            "format": "int32"
          },
          "upperThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
            "format": "int32"
          }
        }
      },
      "QualityConsequenceArea1": {
        "type": "object",
        "properties": {
          "qualityConsequenceAreaId": {
            "type": "integer",
            "description": "Quality consequence identifier",
            "format": "int32"
          },
          "lowerThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
            "format": "int32"
          },
          "upperThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
            "format": "int32"
          },
          "qualityConsequenceAreaLink": {
            "type": "string",
            "description": "Quality consequence area reference"
          }
        }
      },
      "Context1": {
        "type": "object",
        "properties": {
          "source": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          }
        }
      },
      "QualityControl": {
        "type": "object",
        "properties": {
          "qualityControlId": {
            "type": "integer",
            "description": "Identifier of the quality control",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the quality control",
            "format": "int32"
          },
          "addedAt": {
            "type": "string",
            "description": "Date and time when control was created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "utcdatetime",
            "description": "Date and time when quality control was recently updated"
          },
          "name": {
            "type": "string",
            "description": "Name of the quality control"
          },
          "description": {
            "type": "string",
            "description": "Description of the quality control"
          },
          "isReusable": {
            "type": "boolean",
            "description": "Tells if quality control might be reused in many risks"
          },
          "translatedName": {
            "type": "string",
            "description": "Name of the control translated to the user's current language"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the control translated to the user's current language"
          },
          "qualityControlLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "CostCategory": {
        "type": "object",
        "properties": {
          "costCategoryId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "DirectCauseCategory": {
        "type": "object",
        "properties": {
          "directCauseCategoryId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "IssueCategory": {
        "type": "object",
        "properties": {
          "issueCategoryId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "ReportedBy": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the issue reporter"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          }
        }
      },
      "Totals18": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost of the issue",
            "format": "double"
          }
        }
      },
      "Assignee1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Context2": {
        "type": "object",
        "properties": {
          "affectedQuantity": {
            "type": "integer",
            "description": "Quantity of product units affected by this QHSES issue.",
            "format": "int32"
          },
          "totalQuantity": {
            "type": "integer",
            "description": "The quantity that will be (or has been) produced",
            "format": "int32"
          },
          "source": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              },
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of finance project "
              },
              "financeProjectLink": {
                "type": "string",
                "description": "Finance project reference"
              }
            },
            "description": "The project related to the budget account item."
          },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "description": {
                "type": "string",
                "description": "Description of the product"
              },
              "productClassification": {
                "type": "object",
                "properties": {
                  "productClassificationId": {
                    "type": "string",
                    "description": "Product classification identifier"
                  },
                  "productClassificationLink": {
                    "type": "string",
                    "description": "Product classification reference"
                  }
                }
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          },
          "productRevision": {
            "type": "object",
            "properties": {
              "revision": {
                "type": "string",
                "description": "The Revision of the product"
              }
            }
          },
          "productStructureVersion": {
            "type": "object",
            "properties": {
              "productStructureVersionId": {
                "type": "integer",
                "description": "Product structure identifier",
                "format": "int32"
              },
              "drawing": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Database of the object"
                  },
                  "fileVersionId": {
                    "type": "string",
                    "description": "File identifier"
                  },
                  "fileName": {
                    "type": "string",
                    "description": "Filename to display for the file version. Will be used when downloading the file."
                  },
                  "fileVersionLink": {
                    "type": "string",
                    "description": "File reference"
                  }
                },
                "description": "Drawing of the product structure"
              },
              "productStructure": {
                "type": "object",
                "properties": {
                  "productStructureId": {
                    "type": "number",
                    "description": "Product structure identifier",
                    "format": "int64"
                  }
                }
              },
              "productStructureVersionLink": {
                "type": "string",
                "description": "Product structure reference"
              }
            }
          },
          "customer": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
              },
              "customerLink": {
                "type": "string",
                "description": "Customer reference"
              }
            }
          },
          "supplier": {
            "type": "object",
            "properties": {
              "supplierId": {
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
              },
              "supplierLink": {
                "type": "string",
                "description": "Supplier reference"
              }
            }
          },
          "productionResource": {
            "type": "object",
            "properties": {
              "productionResourceId": {
                "type": "integer",
                "description": "Production resource identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of  production resource"
              },
              "productionResourceLink": {
                "type": "string",
                "description": "Production resource reference"
              }
            }
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              },
              "customersReferenceNumber": {
                "type": "string",
                "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
              },
              "customer": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "Customer identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                  },
                  "customerLink": {
                    "type": "string",
                    "description": "Customer reference"
                  }
                }
              },
              "salesOrderLink": {
                "type": "string",
                "description": "Sales order reference"
              }
            }
          },
          "salesOrderItem": {
            "type": "object",
            "properties": {
              "salesOrderItemId": {
                "type": "integer",
                "description": "Sales order item identifier",
                "format": "int32"
              },
              "salesOrderItemLink": {
                "type": "string",
                "description": "Reference to the order item."
              }
            }
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Company name of the manufacturer."
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          },
          "detectedOnOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            }
          },
          "occurredOnOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            }
          },
          "material": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "description": {
                "type": "string",
                "description": "Description of the product"
              },
              "productClassification": {
                "type": "object",
                "properties": {
                  "productClassificationId": {
                    "type": "string",
                    "description": "Product classification identifier"
                  },
                  "productClassificationLink": {
                    "type": "string",
                    "description": "Product classification reference"
                  }
                }
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          },
          "productionWorkOrder": {
            "type": "object",
            "properties": {
              "productionWorkOrderId": {
                "type": "integer",
                "description": "Production work order identifier",
                "format": "int32"
              },
              "productionWorkOrderLink": {
                "type": "string",
                "description": "Production work order reference"
              }
            }
          },
          "purchaseOrder": {
            "type": "object",
            "properties": {
              "purchaseOrderId": {
                "type": "integer",
                "description": "Purchase order identifier",
                "format": "int32"
              },
              "purchaseOrderLink": {
                "type": "string",
                "description": "Purchase order reference"
              }
            },
            "description": "Value set from originating purchase ORDERID"
          },
          "purchaseOrderItem": {
            "type": "object",
            "properties": {
              "purchaseOrderItemId": {
                "type": "integer",
                "description": "Item-/line-number of the purchase order",
                "format": "int32"
              },
              "purchaseOrderItemLink": {
                "type": "string",
                "description": "Purchase order item reference"
              }
            }
          }
        }
      },
      "IssueType": {
        "type": "object",
        "properties": {
          "issueTypeId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "InitialRiskAssessment": {
        "type": "object",
        "properties": {
          "riskAssessmentId": {
            "type": "integer",
            "description": "Identifier of the first assessment in this line of reassessments",
            "format": "int32"
          },
          "riskAssessmentLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "PositiveScore": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "description": "Score of the potential consequence. Calculated from severity rating multiplied with likelihood level",
            "format": "int32"
          },
          "qualityConsequenceArea": {
            "type": "object",
            "properties": {
              "lowerThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
                "format": "int32"
              },
              "upperThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
                "format": "int32"
              }
            }
          }
        }
      },
      "NegativeScore": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "description": "Score of the potential consequence. Calculated from severity rating multiplied with likelihood level",
            "format": "int32"
          },
          "qualityConsequenceArea": {
            "type": "object",
            "properties": {
              "lowerThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
                "format": "int32"
              },
              "upperThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
                "format": "int32"
              }
            }
          }
        }
      },
      "Totals19": {
        "type": "object",
        "properties": {
          "acceptedRisksCount": {
            "type": "integer",
            "description": "Count of accepted risks that belong to this risk assessment",
            "format": "int32"
          },
          "risksCount": {
            "type": "integer",
            "description": "Count of all risks that belong to this risk assessment",
            "format": "int32"
          },
          "participantsCount": {
            "type": "integer",
            "description": "Count of participants",
            "format": "int32"
          },
          "actionsCount": {
            "type": "integer",
            "description": "Number of actions related to this risk assessment",
            "format": "int32"
          },
          "controlsCount": {
            "type": "integer",
            "description": "Number of controls related to this risk assessment",
            "format": "int32"
          }
        }
      },
      "PositiveScore1": {
        "type": "object",
        "properties": {
          "potentialConsequenceId": {
            "type": "integer",
            "description": "Potential consequence identifier",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "description": "Score of the potential consequence. Calculated from severity rating multiplied with likelihood level",
            "format": "int32"
          },
          "qualityConsequenceArea": {
            "type": "object",
            "properties": {
              "qualityConsequenceAreaId": {
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              },
              "lowerThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
                "format": "int32"
              },
              "upperThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
                "format": "int32"
              },
              "qualityConsequenceAreaLink": {
                "type": "string",
                "description": "Quality consequence area reference"
              }
            }
          },
          "potentialConsequenceLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "NegativeScore1": {
        "type": "object",
        "properties": {
          "potentialConsequenceId": {
            "type": "integer",
            "description": "Potential consequence identifier",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "description": "Score of the potential consequence. Calculated from severity rating multiplied with likelihood level",
            "format": "int32"
          },
          "qualityConsequenceArea": {
            "type": "object",
            "properties": {
              "qualityConsequenceAreaId": {
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              },
              "lowerThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
                "format": "int32"
              },
              "upperThreshold": {
                "type": "integer",
                "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
                "format": "int32"
              },
              "qualityConsequenceAreaLink": {
                "type": "string",
                "description": "Quality consequence area reference"
              }
            }
          },
          "potentialConsequenceLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "RiskAssessment": {
        "type": "object",
        "properties": {
          "riskAssessmentId": {
            "type": "integer",
            "description": "Risk assessment identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of risk assessment",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the risk assessment"
          },
          "isTemplate": {
            "type": "boolean",
            "description": "This field indicates if risk assessment is marked as a template assessment"
          },
          "riskAssessmentLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "Owner3": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "Totals20": {
        "type": "object",
        "properties": {
          "potentialConsequencesCount": {
            "type": "integer",
            "description": "Shows count of all consequence types belonging to this risk",
            "format": "int32"
          },
          "controlsCount": {
            "type": "integer",
            "description": "Shows count of all controls belonging to this risk",
            "format": "int32"
          },
          "riskActionsCount": {
            "type": "integer",
            "description": "Shows all actions count belonging to this risk.",
            "format": "int32"
          },
          "doneRiskActionsCount": {
            "type": "integer",
            "description": "Shows count of done actions belonging to this risk",
            "format": "int32"
          },
          "notesCount": {
            "type": "integer",
            "description": "Shows count of the notes added to the risk",
            "format": "int32"
          }
        }
      },
      "RootCauseCategory": {
        "type": "object",
        "properties": {
          "rootCauseCategoryId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "StandardRequirement": {
        "type": "object",
        "properties": {
          "standardRequirementId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "Translation5": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Three character code following the ISO 639-2 standard."
          },
          "name": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "ConsequenceType": {
        "type": "object",
        "properties": {
          "consequenceTypeId": {
            "type": "integer",
            "description": "Quality consequence identifier",
            "format": "int32"
          },
          "name": {
            "type": "integer",
            "description": "Name of quality consequence",
            "format": "int32"
          },
          "consequenceTypeLink": {
            "type": "string",
            "description": "Docref link for quality consequence DOV"
          }
        }
      },
      "CostCategory1": {
        "type": "object",
        "properties": {
          "costCategoryId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "Product14": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "ProductStructureVersion1": {
        "type": "object",
        "properties": {
          "productStructureVersionId": {
            "type": "integer",
            "description": "Product structure identifier",
            "format": "int32"
          },
          "drawing": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "fileVersionId": {
                "type": "string",
                "description": "File identifier"
              },
              "fileName": {
                "type": "string",
                "description": "Filename to display for the file version. Will be used when downloading the file."
              },
              "fileVersionLink": {
                "type": "string",
                "description": "File reference"
              }
            },
            "description": "Drawing of the product structure"
          },
          "productStructure": {
            "type": "object",
            "properties": {
              "productStructureId": {
                "type": "number",
                "description": "Product structure identifier",
                "format": "int64"
              }
            }
          },
          "productStructureVersionLink": {
            "type": "string",
            "description": "Product structure reference"
          }
        }
      },
      "Manufacturer3": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Company name of the manufacturer."
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Manufacturer reference"
          }
        }
      },
      "Material": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Responsible2": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "Information who is responsible for the budget"
      },
      "ConsequenceArea": {
        "type": "object",
        "properties": {
          "consequenceAreaId": {
            "type": "integer",
            "description": "Quality consequence identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Title of the quality consequence area"
          },
          "translatedName": {
            "type": "string",
            "description": "Title of the quality consequence area"
          },
          "consequenceAreaLink": {
            "type": "string",
            "description": "Quality consequence area reference"
          }
        }
      },
      "ConsequenceSeverity": {
        "type": "object",
        "properties": {
          "qualitySeverityId": {
            "type": "integer",
            "description": "Identifier for a consequence severity",
            "format": "int32"
          },
          "label": { "type": "string", "description": "Label of the severity" },
          "translatedLabel": {
            "type": "string",
            "description": "Translated label"
          },
          "rating": {
            "type": "integer",
            "description": "A number representing the level of impact this consequence has. Used in calculating a risk score.",
            "format": "int32"
          },
          "qualitySeverityLink": {
            "type": "string",
            "description": "Document reference to severity"
          }
        }
      },
      "StandardRequirement1": {
        "type": "object",
        "properties": {
          "standardRequirementId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Description of a domain value"
          },
          "translatedName": {
            "type": "string",
            "description": "Translated description of a domain value"
          }
        }
      },
      "Totals21": {
        "type": "object",
        "properties": {
          "actionsCount": {
            "type": "integer",
            "description": "Number of actions related to this potential consequence",
            "format": "int32"
          },
          "controlsCount": {
            "type": "integer",
            "description": "Number of controls linked to this potential consequence\r\n",
            "format": "int32"
          }
        }
      },
      "Severity": {
        "type": "object",
        "properties": {
          "severityId": {
            "type": "integer",
            "description": "Identifier for a consequence severity",
            "format": "int32"
          },
          "rating": {
            "type": "integer",
            "description": "Severity rating of a potential consequence",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "Level of the severity. These values are typically from 1 to the dimension of a risk matrix. ",
            "format": "int32"
          },
          "translatedLabel": {
            "type": "string",
            "description": "Translated label"
          },
          "severityLink": {
            "type": "string",
            "description": "Quality severity document id"
          }
        }
      },
      "Likelihood": {
        "type": "object",
        "properties": {
          "likelihoodId": {
            "type": "integer",
            "description": "Likelihood identifier",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "Likelihood level of a potential consequence",
            "format": "int32"
          },
          "translatedLabel": {
            "type": "string",
            "description": "Translation of likelihood label"
          },
          "likelihoodLink": {
            "type": "string",
            "description": "Fulldocid of likelihood"
          }
        }
      },
      "QualityConsequenceArea2": {
        "type": "object",
        "properties": {
          "qualityConsequenceAreaId": {
            "type": "integer",
            "description": "Quality consequence identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the quality consequence area"
          },
          "lowerThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
            "format": "int32"
          },
          "upperThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
            "format": "int32"
          },
          "qualityConsequenceAreaLink": {
            "type": "string",
            "description": "Quality consequence area reference"
          }
        }
      },
      "AddedBy1": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Likelihood1": {
        "type": "object",
        "properties": {
          "likelihoodId": {
            "type": "integer",
            "description": "Likelihood identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "level": {
            "type": "integer",
            "description": "Likelihood level. Values from 1 to X where X is the size of the risk matrix likelihood dimension",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Label of the likelihood"
          },
          "translatedLabel": {
            "type": "string",
            "description": "Translation of likelihood label"
          }
        }
      },
      "Severity1": {
        "type": "object",
        "properties": {
          "severityId": {
            "type": "integer",
            "description": "Identifier for a consequence severity",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "Severity describes how severe a consequence is.",
            "format": "int32"
          },
          "label": { "type": "string", "description": "Label of the severity" },
          "translatedLabel": {
            "type": "string",
            "description": "Translated label"
          },
          "rating": {
            "type": "integer",
            "description": "A number representing the level of impact this consequence has. Used in calculating a risk score.",
            "format": "int32"
          }
        }
      },
      "Translation6": {
        "type": "object",
        "properties": {
          "translationId": {
            "type": "integer",
            "description": "Identifier of this translation",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "Language of this translation"
          },
          "label": { "type": "string", "description": "Translated label" }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "description": "Unique task identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of a task",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title/summary of the task"
          },
          "description": {
            "type": "string",
            "description": "The description of the task"
          },
          "deadlineAt": {
            "type": "string",
            "description": "Date and time of when this task must be completed.",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "The full date and time when a task was completed",
            "format": "date-time"
          },
          "activity": {
            "type": "integer",
            "description": "Task type: Email, Phone call, Followup",
            "format": "int32"
          },
          "assignedTo": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The userId of the person this task is assigned to (responsible for doing the work)"
          },
          "taskLink": { "type": "string", "description": "Task reference" }
        }
      },
      "QualityCause": {
        "type": "object",
        "properties": {
          "qualityCauseId": {
            "type": "integer",
            "description": "Reference to the cause of the action.",
            "format": "int32"
          },
          "title": { "type": "string", "description": "Title of this cause" },
          "qualityCauseLink": {
            "type": "string",
            "description": "Document reference of a cause"
          }
        }
      },
      "ParentCause": {
        "type": "object",
        "properties": {
          "qualityCauseId": {
            "type": "integer",
            "description": "Cause identifier",
            "format": "int32"
          },
          "qualityCauseLink": {
            "type": "string",
            "description": "Document reference of a cause"
          }
        }
      },
      "AreaConsequenceType": {
        "type": "object",
        "properties": {
          "areaConsequenceTypeId": {
            "type": "integer",
            "description": "Identifier for this quality incident consequence.",
            "format": "int32"
          },
          "consequenceType": {
            "type": "object",
            "properties": {
              "consequenceTypeId": {
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              },
              "name": {
                "type": "integer",
                "description": "Name of quality consequence",
                "format": "int32"
              },
              "consequenceTypeLink": {
                "type": "string",
                "description": "Docref link for quality consequence DOV"
              }
            }
          },
          "areaConsequenceTypeLink": {
            "type": "string",
            "description": "Document reference to incident consequence"
          }
        }
      },
      "ExternalCorrespondence": {
        "type": "object",
        "properties": {
          "externalCorrespondenceId": {
            "type": "integer",
            "description": "External correspondence identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the external correspondence",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "Type of external correspondence (CAR/NCR etc) ",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "description": { "type": "string", "description": "Description" },
          "cause": { "type": "string", "description": "String list of causes" },
          "sentAt": {
            "type": "string",
            "description": "Date and time when correspondence was sent.",
            "format": "date-time"
          },
          "actions": {
            "type": "object",
            "properties": {
              "suggested": {
                "type": "string",
                "description": "String list of suggested actions"
              },
              "immediate": {
                "type": "string",
                "description": "String list of immediate actions."
              },
              "corrective": {
                "type": "string",
                "description": "String list of corrective actions"
              }
            }
          },
          "responsible": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Last name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          },
          "sentBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Last name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          },
          "context": {
            "type": "object",
            "properties": {
              "affectedQuantity": {
                "type": "integer",
                "description": "Number of affected units",
                "format": "int32"
              },
              "totalQuantity": {
                "type": "integer",
                "description": "Total amount of units",
                "format": "int32"
              },
              "productUnits": {
                "type": "string",
                "description": "String list of product units"
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "productClassification": {
                    "type": "object",
                    "properties": {
                      "productClassificationId": {
                        "type": "string",
                        "description": "Product classification identifier"
                      },
                      "productClassificationLink": {
                        "type": "string",
                        "description": "Product classification reference"
                      }
                    }
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              },
              "productRevision": {
                "type": "object",
                "properties": {
                  "revision": {
                    "type": "string",
                    "description": "The Revision of the product"
                  }
                }
              },
              "productStructureVersion": {
                "type": "object",
                "properties": {
                  "productStructureVersionId": {
                    "type": "integer",
                    "description": "Product structure identifier",
                    "format": "int32"
                  },
                  "drawing": {
                    "type": "object",
                    "properties": {
                      "database": {
                        "type": "string",
                        "description": "Database of the object"
                      },
                      "fileVersionId": {
                        "type": "string",
                        "description": "File identifier"
                      },
                      "fileName": {
                        "type": "string",
                        "description": "Filename to display for the file version. Will be used when downloading the file."
                      },
                      "fileVersionLink": {
                        "type": "string",
                        "description": "File reference"
                      }
                    },
                    "description": "Drawing of the product structure"
                  },
                  "productStructure": {
                    "type": "object",
                    "properties": {
                      "productStructureId": {
                        "type": "number",
                        "description": "Product structure identifier",
                        "format": "int64"
                      }
                    }
                  },
                  "productStructureVersionLink": {
                    "type": "string",
                    "description": "Product structure reference"
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "Customer identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                  },
                  "customerLink": {
                    "type": "string",
                    "description": "Customer reference"
                  }
                }
              },
              "supplier": {
                "type": "object",
                "properties": {
                  "supplierId": {
                    "type": "integer",
                    "description": "RamBase supplier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
                  },
                  "supplierLink": {
                    "type": "string",
                    "description": "Supplier reference"
                  }
                }
              },
              "productionResource": {
                "type": "object",
                "properties": {
                  "productionResourceId": {
                    "type": "integer",
                    "description": "Production resource identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of  production resource"
                  },
                  "productionResourceLink": {
                    "type": "string",
                    "description": "Production resource reference"
                  }
                }
              },
              "salesOrder": {
                "type": "object",
                "properties": {
                  "salesOrderId": {
                    "type": "integer",
                    "description": "Sales order identifier",
                    "format": "int32"
                  },
                  "customersReferenceNumber": {
                    "type": "string",
                    "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
                  },
                  "salesOrderLink": {
                    "type": "string",
                    "description": "Sales order reference"
                  }
                }
              },
              "manufacturer": {
                "type": "object",
                "properties": {
                  "manufacturerId": {
                    "type": "integer",
                    "description": "Manufacturer identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Company name of the manufacturer."
                  },
                  "manufacturerLink": {
                    "type": "string",
                    "description": "Manufacturer reference"
                  }
                }
              },
              "material": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "productClassification": {
                    "type": "object",
                    "properties": {
                      "productClassificationId": {
                        "type": "string",
                        "description": "Product classification identifier"
                      },
                      "productClassificationLink": {
                        "type": "string",
                        "description": "Product classification reference"
                      }
                    }
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              },
              "productionWorkOrder": {
                "type": "object",
                "properties": {
                  "productionWorkOrderId": {
                    "type": "integer",
                    "description": "Production work order identifier",
                    "format": "int32"
                  },
                  "productionWorkOrderLink": {
                    "type": "string",
                    "description": "Production work order reference"
                  }
                }
              },
              "purchaseOrder": {
                "type": "object",
                "properties": {
                  "purchaseOrderId": {
                    "type": "integer",
                    "description": "Purchase order identifier",
                    "format": "int32"
                  },
                  "purchaseOrderLink": {
                    "type": "string",
                    "description": "Purchase order reference"
                  }
                },
                "description": "Value set from originating purchase ORDERID"
              }
            }
          },
          "response": {
            "type": "object",
            "properties": {
              "isRequired": {
                "type": "boolean",
                "description": "If true, a response is required"
              },
              "receivedAt": {
                "type": "string",
                "description": "Date and time when response was received.",
                "format": "date-time"
              },
              "status": {
                "type": "integer",
                "description": "Quality external correspondence response status",
                "format": "int32"
              },
              "isSigned": {
                "type": "boolean",
                "description": "If true this response is signed"
              },
              "comment": {
                "type": "string",
                "description": "Description of the response"
              },
              "suggestedAction": {
                "type": "integer",
                "description": "Action on the response",
                "format": "int32"
              }
            }
          }
        }
      },
      "Object5": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of the item/object.",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "QualityIssue": {
        "type": "object",
        "properties": {
          "qualityIssueId": {
            "type": "integer",
            "description": "QHSES issue identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of quality issue. 1: Registering, 2: Analysing, 4: Pending actions, 8: Reviewing, 9: Closed",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of quality issue"
          },
          "title": { "type": "string", "description": "Title of the issue" },
          "dueDate": {
            "type": "string",
            "description": "Time and date when this issue should be resolved",
            "format": "date-time"
          },
          "responsible": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "Information who is responsible for the budget"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The person who registered hours for this task"
          },
          "qualityIssueLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "AddedBy2": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "RiskAction": {
        "type": "object",
        "properties": {
          "riskActionId": {
            "type": "integer",
            "description": "Identifier of the risk action",
            "format": "int32"
          },
          "addedAt": {
            "type": "string",
            "description": "Date and time when risk action was added",
            "format": "date-time"
          },
          "addedToControl": {
            "type": "boolean",
            "description": "Tells if this action was already added to controls"
          },
          "task": {
            "type": "object",
            "properties": {
              "taskId": {
                "type": "integer",
                "description": "Unique task identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "The status of a task",
                "format": "int32"
              },
              "title": {
                "type": "string",
                "description": "The title/summary of the task"
              },
              "description": {
                "type": "string",
                "description": "The description of the task"
              },
              "priority": {
                "type": "integer",
                "description": "The priority of the task. ",
                "format": "int32"
              },
              "activity": {
                "type": "integer",
                "description": "Task type: Email, Phone call, Followup",
                "format": "int32"
              },
              "deadlineAt": {
                "type": "string",
                "description": "Date and time of when this task must be completed.",
                "format": "date-time"
              },
              "assignedTo": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "The userId of the person this task is assigned to (responsible for doing the work)"
              },
              "taskLink": { "type": "string", "description": "Task reference" }
            }
          },
          "riskActionLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "AddedBy3": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "QualityControl1": {
        "type": "object",
        "properties": {
          "qualityControlId": {
            "type": "integer",
            "description": "Identifier of the quality control",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the quality control"
          },
          "description": {
            "type": "string",
            "description": "Description of the quality control"
          },
          "isReusable": {
            "type": "boolean",
            "description": "Tells if quality control might be reused in many risks"
          },
          "translatedName": {
            "type": "string",
            "description": "Name of the control translated to the user's current language"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the control translated to the user's current language"
          },
          "qualityControlLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "Task1": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "description": "Unique task identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of a task",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title/summary of the task"
          },
          "description": {
            "type": "string",
            "description": "The description of the task"
          },
          "activity": {
            "type": "integer",
            "description": "Task type: Email, Phone call, Followup",
            "format": "int32"
          },
          "assignedTo": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "The userId of the person this task is assigned to (responsible for doing the work)"
          },
          "taskLink": { "type": "string", "description": "Task reference" }
        }
      },
      "ScoreLogEntry": {
        "type": "object",
        "properties": {
          "scoreLogEntryId": {
            "type": "integer",
            "description": "Score log entry identifier",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "description": "Risk score in score log",
            "format": "int32"
          },
          "scoreLogEntryLink": {
            "type": "docref-customlink",
            "description": "API reference to the item"
          }
        }
      },
      "RelatedIssue": {
        "type": "object",
        "properties": {
          "relatedIssueId": {
            "type": "integer",
            "description": "Identifier of the relation with related issues",
            "format": "int32"
          },
          "addedAt": {
            "type": "string",
            "description": "Date and time when relation was added",
            "format": "date-time"
          },
          "qualityIssue": {
            "type": "object",
            "properties": {
              "qualityIssueId": {
                "type": "integer",
                "description": "QHSES issue identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of quality issue. 1: Registering, 2: Analysing, 4: Pending actions, 8: Reviewing, 9: Closed",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "description": "Description of quality issue"
              },
              "type": {
                "type": "integer",
                "description": "Quality issue type. I.E \"Incident\", \"Observation\" or \"Improvement proposal\"",
                "format": "int32"
              },
              "title": {
                "type": "string",
                "description": "Title of the issue"
              },
              "category": {
                "type": "integer",
                "description": "Category of the quality issue. Together with type this should apply information on which field/area of a system the quality issue is addressing",
                "format": "int32"
              },
              "dueDate": {
                "type": "string",
                "description": "Time and date when this issue should be resolved",
                "format": "date"
              },
              "responsible": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                }
              },
              "assignee": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                }
              },
              "qualityIssueLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            }
          },
          "relatedIssueLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        }
      },
      "Severity2": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "Severity rating of a potential consequence",
            "format": "int32"
          }
        }
      },
      "Likelihood2": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "description": "Likelihood level of a potential consequence",
            "format": "int32"
          }
        }
      },
      "Totals22": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "discountAmount": {
            "type": "number",
            "description": "The items discount amount.",
            "format": "double"
          },
          "grossAmount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "BillingYear": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Billing year",
            "format": "int32"
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Total amount.",
                "format": "double"
              },
              "invoicedAmount": {
                "type": "number",
                "description": "Total invoiced amount",
                "format": "double"
              },
              "creditedAmount": {
                "type": "number",
                "description": "Total credited amount",
                "format": "double"
              }
            }
          }
        }
      },
      "Customer3": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "Manufacturer4": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Manufacturer reference"
          }
        }
      },
      "LandedCost": {
        "type": "object",
        "properties": {
          "grossPrice": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) of getting each unit in stock, including purchase price, duties, charges, freight etc.",
            "format": "double"
          },
          "purchaseExchangeRate": {
            "type": "number",
            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
            "format": "double"
          }
        }
      },
      "LandedCostConverted": {
        "type": "object",
        "properties": {
          "grossPrice": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) in sales currency",
            "format": "double"
          }
        }
      },
      "InitialSalesOrderItem": {
        "type": "object",
        "properties": {
          "salesOrderItemId": {
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              },
              "salesOrderLink": {
                "type": "string",
                "description": "Sales order reference"
              }
            },
            "description": "Value set from the originating sales order ORDERID"
          },
          "salesOrderItemLink": {
            "type": "string",
            "description": "Reference to the order item."
          }
        },
        "description": "Reference to the initial/first/original sales order item in the document flow for this item."
      },
      "TotalsConverted10": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in company currency, excluding VAT.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in company currency, including VAT.",
            "format": "double"
          }
        }
      },
      "Accounting5": {
        "type": "object",
        "properties": {
          "billingYTDAmount": {
            "type": "number",
            "description": "Total amount of invoices and credit notes that has been invoiced this year (to current date)",
            "format": "double"
          }
        }
      },
      "SalesOrderItem2": {
        "type": "object",
        "properties": {
          "salesOrderItemId": {
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              },
              "salesOrderLink": {
                "type": "string",
                "description": "Sales order reference"
              }
            },
            "description": "Value set from the originating sales order ORDERID"
          },
          "salesOrderItemLink": {
            "type": "string",
            "description": "Reference to the order item."
          }
        },
        "description": "Value set from the originating sales order item ORDERITMID"
      },
      "Product15": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          }
        }
      },
      "Period2": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date that was used to process absence statistics data",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "End date that was used to process absence statistics data",
            "format": "date"
          }
        }
      },
      "Customer4": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "Sales2": {
        "type": "object",
        "properties": {
          "salesDistrict": {
            "type": "string",
            "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
          },
          "marketSegment": {
            "type": "string",
            "description": "Market segment of the customer"
          }
        }
      },
      "ProjectLeader": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Reference to the employee who is a production management project leader."
      },
      "DocumentController": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Reference to the employee who is a production management document controller."
      },
      "RecurringPrice": {
        "type": "object",
        "properties": {
          "recurringPriceId": {
            "type": "integer",
            "description": "Recurring price identifier",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "priceInterval": {
            "type": "integer",
            "description": "Interval of recurring price",
            "format": "int32"
          },
          "hasOneTimeFee": {
            "type": "boolean",
            "description": "Boolean indicating if the recurring price has a one-time fee."
          },
          "hasUsageStep": {
            "type": "boolean",
            "description": "Boolean indicating if the recurring price has any usage steps."
          },
          "recurringPriceLink": {
            "type": "string",
            "description": "Recurring price indentifier"
          }
        }
      },
      "Management1": {
        "type": "object",
        "properties": {
          "planner": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is a production management planner."
          },
          "projectLeader": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is a production management project leader."
          },
          "documentController": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is a production management document controller."
          }
        },
        "description": "Represents a group of users, which are assigned to particular management roles."
      },
      "ProductLocation": {
        "type": "object",
        "properties": {
          "location": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              }
            }
          },
          "availableStockQuantity": {
            "type": "number",
            "description": "Quantity on hand which is not allocated. The total number of the product that are physically located in this location and are currently available for use in filling a new order or for purposes such as production or distribution.",
            "format": "double"
          }
        },
        "description": "When specifying object type and object id, we also have a product location we can show availbable stock quantity from"
      },
      "Stock3": {
        "type": "object",
        "properties": {
          "stockQuantity": {
            "type": "number",
            "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
            "format": "double"
          },
          "availableStockQuantity": {
            "type": "number",
            "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
            "format": "double"
          }
        }
      },
      "SalesQuoteItem": {
        "type": "object",
        "properties": {
          "salesQuoteItemId": {
            "type": "integer",
            "description": "Sales quote item identifier",
            "format": "int32"
          },
          "salesQuote": {
            "type": "object",
            "properties": {
              "salesQuoteId": {
                "type": "integer",
                "description": "Sales quote identifier",
                "format": "int32"
              },
              "salesQuoteLink": {
                "type": "string",
                "description": "Sales quote reference"
              }
            }
          },
          "salesQuoteItemLink": {
            "type": "string",
            "description": "Sales quote item referene"
          }
        },
        "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
      },
      "SalesQuote": {
        "type": "object",
        "properties": {
          "salesQuoteId": {
            "type": "integer",
            "description": "Sales quote identifier",
            "format": "int32"
          },
          "salesQuoteLink": {
            "type": "string",
            "description": "Sales quote reference"
          }
        }
      },
      "Totals23": {
        "type": "object",
        "properties": {
          "accruedAmount": {
            "type": "number",
            "description": "Total accrued revenues, in sales currency. Includes accrued revenues for both hours, material and expenses.",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced revenues, in sales currency. Includes invoiced revenues for both hours, material and expenses.",
            "format": "double"
          },
          "billableSalesAmount": {
            "type": "number",
            "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has not been created yet, or where it has been created, but is yet not registered",
            "format": "double"
          }
        }
      },
      "Totals24": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossAmount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "description": "Final item amount after deducting all discounts etc.",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining value of item in document currency. The sum of remaining quantity and open forwarded quantity, multiplied with netprice",
            "format": "double"
          }
        }
      },
      "CurrentPriceStep": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Value of a price step",
            "format": "double"
          }
        }
      },
      "PriceConverted2": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "targetPrice": {
            "type": "number",
            "description": "The requested target price for this item",
            "format": "double"
          }
        }
      },
      "TotalsConverted11": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "targetAmount": {
            "type": "number",
            "description": "The total item amount. Calculated by multiplying target price with quantity.",
            "format": "double"
          }
        }
      },
      "TotalsConverted12": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in company currency, including VAT.",
            "format": "double"
          }
        }
      },
      "VATDetails3": {
        "type": "object",
        "properties": {
          "vATHandling": {
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          }
        }
      },
      "BillingAccountingPeriodYear": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Billing year",
            "format": "int32"
          },
          "billingAccountingPeriods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountingPeriodId": {
                  "type": "integer",
                  "description": "Accounting period identifier",
                  "format": "int32"
                },
                "period": {
                  "type": "integer",
                  "description": "Accounting period",
                  "format": "int32"
                },
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "amount": {
                  "type": "number",
                  "description": "Billing period amount",
                  "format": "double"
                },
                "invoicedAmount": {
                  "type": "number",
                  "description": "Billing period invoiced amount",
                  "format": "double"
                },
                "creditedAmount": {
                  "type": "number",
                  "description": "Billing period credited amount",
                  "format": "double"
                },
                "accountingPeriodLink": {
                  "type": "string",
                  "description": "Accounting period reference"
                }
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Total amount.",
                "format": "double"
              },
              "invoicedAmount": {
                "type": "number",
                "description": "Total invoiced amount",
                "format": "double"
              },
              "creditedAmount": {
                "type": "number",
                "description": "Total credited amount",
                "format": "double"
              }
            }
          }
        }
      },
      "BillingYear1": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Billing year",
            "format": "int32"
          },
          "billingDates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Billing date",
                  "format": "date"
                },
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "amount": {
                  "type": "number",
                  "description": "Billing date amount",
                  "format": "double"
                },
                "invoicedAmount": {
                  "type": "number",
                  "description": "Billing date invoiced amount",
                  "format": "double"
                },
                "creditedAmount": {
                  "type": "number",
                  "description": "Billing date credited amount",
                  "format": "double"
                }
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Total amount.",
                "format": "double"
              },
              "invoicedAmount": {
                "type": "number",
                "description": "Total invoiced amount",
                "format": "double"
              },
              "creditedAmount": {
                "type": "number",
                "description": "Total credited amount",
                "format": "double"
              }
            }
          }
        }
      },
      "Validity4": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "The start of the purchase contract",
            "format": "date"
          },
          "expirationDate": {
            "type": "string",
            "description": "The end of the purchase contract",
            "format": "date"
          },
          "isTerminable": {
            "type": "boolean",
            "description": "Specifies if the contract is terminable not not"
          },
          "terminationNoticePeriod": {
            "type": "integer",
            "description": "The length in days of the termination period. This will not have a meaning if the contract in non-terminable",
            "format": "int32"
          },
          "renewalDueDays": {
            "type": "integer",
            "description": "The minimum number of days before EndDate where the contract can be either cancelled (if set to automatically renew) or renewed (if set to be renewed by consent)",
            "format": "int32"
          },
          "renewalDueDate": {
            "type": "string",
            "description": "The main and backup responsible will be alerted on this date if a notification is setup",
            "format": "date"
          }
        }
      },
      "Value": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "periodSpecification": {
            "type": "integer",
            "description": "The periodic schedule of the contract. \r\nValues: \r\n- Month = 30 days\r\n- Week = 7 days\r\n- Year = 365 days\r\n- Quarter = 90 days",
            "format": "int32"
          },
          "valuePerPeriod": {
            "type": "number",
            "description": "The monetary value per period",
            "format": "double"
          },
          "totalValue": {
            "type": "number",
            "description": "Total value calculated from value pr period",
            "format": "double"
          }
        }
      },
      "BackupResponsible": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Link to the PID responsible if the main responsible is not available"
      },
      "SalesAssistant": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Reference to the employee who is sales assistant for the customer."
      },
      "AccountManager": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
      },
      "ShippingAddress2": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "firstname": {
            "type": "string",
            "description": "Firstname if the receiver is a person. Note that default invoice address must have the same firstname as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          },
          "externalReference": {
            "type": "string",
            "description": "External address identifier. Normally defined by the customer."
          }
        }
      },
      "InvoiceAddress1": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "firstname": {
            "type": "string",
            "description": "Firstname if the receiver is a person. Note that default invoice address must have the same firstname as the customer."
          },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          }
        }
      },
      "Currency1": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          }
        }
      },
      "CustomerLegalEntity": {
        "type": "object",
        "properties": {
          "customerLegalEntityId": {
            "type": "integer",
            "description": "Customer legal entity identifier",
            "format": "int32"
          },
          "customerLegalEntityLink": {
            "type": "string",
            "description": "Reference to customer legal entity"
          }
        }
      },
      "DefaultInvoiceAddress": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "attention": { "type": "string", "description": "Attention note." },
          "addressLine1": {
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": { "type": "string", "description": "City/town/village" },
          "region": {
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          },
          "country": {
            "type": "string",
            "description": "English name of country."
          },
          "addressLink": {
            "type": "string",
            "description": "Supplier address reference"
          }
        }
      },
      "KeyFigure3": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "key": {
            "type": "string",
            "description": "GroupBy can be \"RUT\" (RentalUnit), \"RUTYEARMONTH\" ( RentalUnit, Year, Month) or \"YEARMONTH\" (Year or month)"
          },
          "description": {
            "type": "string",
            "description": "Description of the key."
          },
          "occurrences": {
            "type": "integer",
            "description": "Number of occurrences with the specified key.",
            "format": "int32"
          },
          "totalNetAmount": {
            "type": "number",
            "description": "Total net amount in company currency.",
            "format": "double"
          }
        }
      },
      "PolishRequirements": {
        "type": "object",
        "properties": {
          "isSubjectedToSplitPayment": {
            "type": "boolean",
            "description": "Indicates if an customer / supplier invoice and / or credit note is subjected to split payment"
          },
          "isInternal": {
            "type": "boolean",
            "description": "Indicates if an customer / supplier invoice and / or credit note is marked as internal"
          },
          "eUSaleToNonCompany": {
            "type": "boolean",
            "description": "Sales from Poland to EU country, to natural persons who do not conduct business activity (non company)."
          },
          "thirdPartyTransactionCode": {
            "type": "string",
            "description": "Transaction code used when purchasing goods in the EU by the third largest VAT payer in a triangular transaction. "
          }
        }
      },
      "Customer5": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "phone": {
            "type": "string",
            "description": "Customers main phone number"
          },
          "email": { "type": "string", "description": "Customers main email" },
          "legalEntityIdentifier": {
            "type": "string",
            "description": "The customers unique enterprise/organization number."
          },
          "vATRegistrationNumber": {
            "type": "string",
            "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)."
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "sales": {
            "type": "object",
            "properties": {
              "salesDistrict": {
                "type": "string",
                "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
              },
              "marketSegment": {
                "type": "string",
                "description": "Market segment of the customer"
              },
              "salesAssistant": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "Reference to the employee who is sales assistant for the customer."
              },
              "accountManager": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
              }
            }
          },
          "customerLegalEntity": {
            "type": "object",
            "properties": {
              "customerLegalEntityId": {
                "type": "integer",
                "description": "Customer legal entity identifier",
                "format": "int32"
              },
              "customerLegalEntityLink": {
                "type": "string",
                "description": "Reference to customer legal entity"
              }
            }
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "Validity5": {
        "type": "object",
        "properties": {
          "effectiveAt": {
            "type": "string",
            "description": "The date the agreement takes effect. The agreement will be effective from from and including this date.",
            "format": "date-time"
          },
          "expireAt": {
            "type": "string",
            "description": "The date the agreement expires. The agreement will be active to and including this date.",
            "format": "date-time"
          }
        }
      },
      "AppliesTo": {
        "type": "object",
        "properties": {
          "objectType": { "type": "string", "description": "Type of object" },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer or customer group"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "Who this item price agreement applies to. Can be empty (all), customer or customer group."
      },
      "AppliesFor": {
        "type": "object",
        "properties": {
          "objectType": { "type": "string", "description": "Type of object" },
          "objectId": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "name": {
            "type": "string",
            "description": "Name of product,  product group or product classification"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "Which product, product group or product-classification this item price agreement applies for. Can also be blank to apply for all products."
      },
      "AppliesForManufacturer": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          },
          "shortName": {
            "type": "string",
            "description": "Shortname/code of the manufacturer "
          },
          "manufacturerLink": {
            "type": "string",
            "description": "Manufacturer reference"
          }
        },
        "description": "Which manufacturer this item price agreement applies for. Can also be blank to apply for all manufacturers."
      },
      "PriceRoundingRuleset": {
        "type": "object",
        "properties": {
          "priceRoundingRulesetId": {
            "type": "integer",
            "description": "Price rounding ruleset identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name/title of price rounding ruleset"
          },
          "priceRoundingRulesetLink": {
            "type": "string",
            "description": "Price rounding ruleset reference"
          }
        }
      },
      "Value1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currencies used by the customer"
          },
          "unweightedAmount": {
            "type": "integer",
            "description": "The unweighted value of this opportunity (amount)",
            "format": "int32"
          },
          "weightedAmount": {
            "type": "integer",
            "description": "The value of this opportunity weighted against the probability",
            "format": "int32"
          },
          "oneTimeRevenueAmount": {
            "type": "integer",
            "description": "The value of startup/creation of the opportunity",
            "format": "int32"
          },
          "recurringRevenueAmount": {
            "type": "integer",
            "description": "Monthly reccuring value of the opportunity",
            "format": "int32"
          },
          "contractMonths": {
            "type": "integer",
            "description": "Number of months with recurring value",
            "format": "int32"
          }
        }
      },
      "Customer6": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "phone": {
            "type": "string",
            "description": "Customers main phone number"
          },
          "email": { "type": "string", "description": "Customers main email" },
          "sales": {
            "type": "object",
            "properties": {
              "salesDistrict": {
                "type": "string",
                "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
              },
              "marketSegment": {
                "type": "string",
                "description": "Market segment of the customer"
              }
            }
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        },
        "description": "Customer reference"
      },
      "OpportunityStage": {
        "type": "object",
        "properties": {
          "opportunityStageId": {
            "type": "integer",
            "description": "Opportunity stage identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "The name of the stage" },
          "probability": {
            "type": "integer",
            "description": "The probability of winning the opportunity when it is in this stage. In percentage.",
            "format": "int32"
          },
          "daysBeforeWarning": {
            "type": "integer",
            "description": "The number of days the opportunity can stay in this stage without causing a warning.",
            "format": "int32"
          },
          "opportunityStageLink": {
            "type": "string",
            "description": "Opportunity stage reference"
          }
        },
        "description": "The stage this opportunity is currently in. "
      },
      "ForwardedToSalesOrder": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          },
          "salesOrderLink": {
            "type": "string",
            "description": "Sales order reference"
          }
        }
      },
      "Totals25": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining value of item in document currency. The sum of remaining quantity and open forwarded quantity, multiplied with netprice",
            "format": "double"
          }
        }
      },
      "Product16": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "type": { "type": "string", "description": "Type of product" },
          "stock": {
            "type": "object",
            "properties": {
              "isNonStock": {
                "type": "boolean",
                "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Item1": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "objectLink": {
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          }
        },
        "description": "Item this item was forwarded to."
      },
      "NotificationType2": {
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "type": "string",
            "description": "Notification type identifier"
          },
          "category": {
            "type": "string",
            "description": "Category of notification type (warning, information etc)"
          },
          "priority": {
            "type": "string",
            "description": "Priority of notification with this notification type."
          },
          "notificationTypeLink": {
            "type": "string",
            "description": "Notification type reference"
          }
        }
      },
      "Sales3": {
        "type": "object",
        "properties": {
          "salesDistrict": {
            "type": "string",
            "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
          },
          "marketSegment": {
            "type": "string",
            "description": "Market segment of the customer"
          },
          "salesAssistant": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is sales assistant for the customer."
          },
          "accountManager": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
          }
        }
      },
      "TotalsConverted13": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency used in conversion. Default is company accounting currency. Three character code following the ISO 4217 standard."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used in convertion",
            "format": "double"
          },
          "freightAmount": {
            "type": "number",
            "description": "Freight amount in company currency.",
            "format": "double"
          },
          "feeAmount": {
            "type": "number",
            "description": "Fee amount in company currency",
            "format": "double"
          },
          "subTotalAmount": {
            "type": "number",
            "description": "Total amount of the object in company currency, excluding VAT.",
            "format": "double"
          },
          "vATAmount": {
            "type": "number",
            "description": "Value added tax amount in company currency.",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount in company currency, including VAT.",
            "format": "double"
          }
        }
      },
      "Invoicing1": {
        "type": "object",
        "properties": {
          "salesInvoiceConsolidation": {
            "type": "string",
            "description": "Specifies whether or how often shipping advices that origins from this sales order will be consolidated when creating sales invoices."
          },
          "salesInvoiceConsolidationField": {
            "type": "string",
            "description": "Field name to group by when consolidating shipping advice items into sales invoices."
          },
          "salesInvoiceItemSortBy": {
            "type": "string",
            "description": "Field name to sort by when creating sales invoice items."
          }
        }
      },
      "VATDetails4": {
        "type": "object",
        "properties": {
          "vATType": {
            "type": "string",
            "description": "Type of value added tax "
          },
          "vATHandling": {
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          },
          "defaultVATPercent": {
            "type": "number",
            "description": "Value added tax percent.",
            "format": "double"
          }
        }
      },
      "Customer7": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstname": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "phone": {
            "type": "string",
            "description": "Customers main phone number"
          },
          "email": { "type": "string", "description": "Customers main email" },
          "sales": {
            "type": "object",
            "properties": {
              "salesDistrict": {
                "type": "string",
                "description": "A geographic district for which an individual salesperson or sales team holds responsibility"
              },
              "marketSegment": {
                "type": "string",
                "description": "Market segment of the customer"
              },
              "salesAssistant": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "Reference to the employee who is sales assistant for the customer."
              },
              "accountManager": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                },
                "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
              }
            }
          },
          "customerLegalEntity": {
            "type": "object",
            "properties": {
              "customerLegalEntityId": {
                "type": "integer",
                "description": "Customer legal entity identifier",
                "format": "int32"
              },
              "customerLegalEntityLink": {
                "type": "string",
                "description": "Reference to customer legal entity"
              }
            }
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "InitialSalesOrder": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          },
          "salesOrderLink": {
            "type": "string",
            "description": "Sales order reference"
          }
        },
        "description": "Reference to initial sales order"
      },
      "Shipment2": {
        "type": "object",
        "properties": {
          "deliveryTerms": {
            "type": "string",
            "description": "Delivery terms when shipping the goods. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). The delivery terms is by default retrieved from the customer."
          },
          "deliveryTermPlace": {
            "type": "string",
            "description": "Named place related to delivery terms (Incoterms)"
          },
          "onlyShipEntireSalesOrder": {
            "type": "boolean",
            "description": "True if all items of a sales order should be shipped together. The items of a sales order should never be split into several shipments."
          },
          "onlyShipEntireSalesOrderItems": {
            "type": "boolean",
            "description": "True if the total quantity of a sales order item always should be shipped together. The quantity should never be split into several shipments. "
          },
          "avoidMultipleShipmentsOnSameDate": {
            "type": "boolean",
            "description": "True if all items of a sales order with the same sheduled delivery date should be shipped together. "
          },
          "shipBasedOnConfirmedDeliveryDate": {
            "type": "boolean",
            "description": "If true, will sheduled shipping date on each item be calculated based on confirmed date rather than requested date."
          },
          "freightForEachShipment": {
            "type": "boolean",
            "description": "If unchecked there will only be calculated freight on one shipping advice if the particular sales order has serveral shipments."
          },
          "shippingDay": {
            "type": "string",
            "description": "Specifies when the goods should be shipped. This is used to calculate the scheduled shipping date for each item."
          },
          "consolidateShippingAdvices": {
            "type": "boolean",
            "description": "If true, sales orders will be consolidated when creating shipping advices via the \"Prepare for picking\" process  the . If false, each sales order will result in seperate shipping advice. The field to use when consolidating is specified in the ShippingAdviceConsolidationField. "
          },
          "shippingAdviceConsolidationField": {
            "type": "string",
            "description": "Field to use when consolidating sales order items into shipping advices in the \"Prepare for picking\" process."
          },
          "shippingAdviceItemSortBy": {
            "type": "string",
            "description": "Items in consolidated shipping advices will be sorted by this fields when they are created in the 'Prepare for picking' process"
          },
          "specialHandling": {
            "type": "object",
            "properties": {
              "specialHandlingId": {
                "type": "integer",
                "description": "Special handling identifier",
                "format": "int32"
              },
              "specialHandlingLink": {
                "type": "string",
                "description": "Special handling code reference"
              }
            },
            "description": "Special handling to use for this shipment."
          },
          "shippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "shippingServiceLink": {
                "type": "string",
                "description": "Shipping service reference"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "integer",
                    "description": "Carrier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of carrier"
                  },
                  "carrierLink": {
                    "type": "string",
                    "description": "Carrier reference"
                  }
                }
              }
            }
          }
        }
      },
      "Payment4": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "type": "string",
            "description": "Terms of payment. Defaut value is retrieved from the customer. The due date of the sales order and sales invoice is calculated based on this field."
          },
          "paymentMethod": {
            "type": "string",
            "description": "Method of payment. Default value is retrieved from the customer. "
          },
          "dueDate": {
            "type": "string",
            "description": "Date the object is due to be paid",
            "format": "date"
          },
          "creditCardTransaction": {
            "type": "object",
            "properties": {
              "creditCardTransactionId": {
                "type": "integer",
                "description": "Credit card transaction identifier",
                "format": "int32"
              },
              "creditCardTransactionLink": {
                "type": "string",
                "description": "Credit card transaction reference"
              }
            }
          }
        }
      },
      "Service1": {
        "type": "object",
        "properties": {
          "specialHandling": {
            "type": "object",
            "properties": {
              "specialHandlingId": {
                "type": "integer",
                "description": "Special handling identifier",
                "format": "int32"
              },
              "specialHandlingLink": {
                "type": "string",
                "description": "Special handling code reference"
              }
            },
            "description": "Special handling to use for this shipment."
          }
        }
      },
      "Product17": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the product",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "internalNote": {
            "type": "string",
            "description": "Internal note regardig the product. Should not be exposed to customers."
          },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Shortname/code of the manufacturer "
              }
            }
          },
          "sales": {
            "type": "object",
            "properties": {
              "stockQuantity": {
                "type": "number",
                "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                "format": "double"
              },
              "availableStockQuantity": {
                "type": "number",
                "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                "format": "double"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product identifier"
          }
        }
      },
      "Price7": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "Discount price",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "assumingQuantity": {
            "type": "number",
            "description": "Quantity used to calculate price.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the price was based on. Could be QUOTE or STANDARD."
          },
          "salesQuoteItem": {
            "type": "object",
            "properties": {
              "salesQuoteItemId": {
                "type": "integer",
                "description": "Sales quote item identifier",
                "format": "int32"
              },
              "agreement": {
                "type": "object",
                "properties": {
                  "expirationDate": {
                    "type": "string",
                    "description": "The agreement will have an expiration date. Note that this date might be different from the validity expiration date of the purchase quote. ",
                    "format": "date"
                  }
                },
                "description": "If the quote is accepted by the supplier, an agreement is made. The status of the quote item will then be set to 4."
              },
              "salesQuote": {
                "type": "object",
                "properties": {
                  "salesQuoteId": {
                    "type": "integer",
                    "description": "Sales quote identifier",
                    "format": "int32"
                  },
                  "validity": {
                    "type": "object",
                    "properties": {
                      "effectiveDate": {
                        "type": "string",
                        "description": "Valid from",
                        "format": "date"
                      },
                      "expirationDate": {
                        "type": "string",
                        "description": "Valid to",
                        "format": "date"
                      }
                    }
                  },
                  "salesQuoteLink": {
                    "type": "string",
                    "description": "Sales quote reference"
                  }
                }
              },
              "salesQuoteItemLink": {
                "type": "string",
                "description": "Sales quote item referene"
              }
            },
            "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
          }
        }
      },
      "LastSalesInvoiceItem": {
        "type": "object",
        "properties": {
          "salesInvoiceItemId": {
            "type": "integer",
            "description": "Reference to the item id of the object",
            "format": "int32"
          },
          "salesInvoice": {
            "type": "object",
            "properties": {
              "salesInvoiceId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "salesInvoiceLink": {
                "type": "string",
                "description": "Document reference"
              }
            }
          },
          "salesInvoiceItemLink": {
            "type": "string",
            "description": "Document item reference"
          }
        }
      },
      "Materials": {
        "type": "object",
        "properties": {
          "initialEstimatedAmount": {
            "type": "number",
            "description": "Total Intial estimated revenues for material at the time the project order is started. In sales currency.",
            "format": "double"
          },
          "remainingEstimatedAmount": {
            "type": "number",
            "description": "Total remaining estimated revenues for material, in sales currency.",
            "format": "double"
          },
          "pendingAmount": {
            "type": "number",
            "description": "Total pending revenues for material, in sales currency. Revenues for material are to be understood as pending when the internal sales order for \"Material to project order\" has been created, but material is not confirmed as consumed yet.",
            "format": "double"
          },
          "accruedAmount": {
            "type": "number",
            "description": "Total accrued revenues for material, in sales currency.",
            "format": "double"
          },
          "forecastAmount": {
            "type": "number",
            "description": "Total forecasted revenues for material, in sales currency. ",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced revenues for material. In sales currency.",
            "format": "double"
          }
        }
      },
      "Expenses": {
        "type": "object",
        "properties": {
          "initialEstimatedAmount": {
            "type": "number",
            "description": "Total initial estimated revenues for expenses at the time the project order is started. In sales currency.",
            "format": "double"
          },
          "remainingEstimatedAmount": {
            "type": "number",
            "description": "Total remaining estimated revenues for expenses. In sales currency.",
            "format": "double"
          },
          "pendingAmount": {
            "type": "number",
            "description": "Total pending revenues for expenses. In sales currency.|",
            "format": "double"
          },
          "accruedAmount": {
            "type": "number",
            "description": "Total accrued revenues for expenses, in sales currency.",
            "format": "double"
          },
          "forecastAmount": {
            "type": "number",
            "description": "Total forecasted revenues for expenses, in sales currency.",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced revenues for expenses. In sales currency",
            "format": "double"
          }
        }
      },
      "Totals26": {
        "type": "object",
        "properties": {
          "initialEstimatedAmount": {
            "type": "number",
            "description": "Total initial estimated revenues at the time the project order is registered, in sales currency. Includes initial estimated revenues for both hours, material and expenses.",
            "format": "double"
          },
          "remainingEstimatedAmount": {
            "type": "number",
            "description": "Total remaining estimated revenues, in sales currency. Includes revenues for both hours, material and expenses.",
            "format": "double"
          },
          "pendingAmount": {
            "type": "number",
            "description": "Total pending revenues, in sales currency. Includes pending revenues for both hours, material and expenses.",
            "format": "double"
          },
          "accruedAmount": {
            "type": "number",
            "description": "Total accrued revenues, in sales currency. Includes accrued revenues for both hours, material and expenses.",
            "format": "double"
          },
          "forecastAmount": {
            "type": "number",
            "description": "Total forecast revenues for the project order, in sales currency. Includes forecast revenue for both hour, material and expenses for a project order with price model 'Time & material'. For price model 'Fixed price' it's equal to the sales price that is given to the customer in the belonging sales transaction.",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Total invoiced revenues, in sales currency. Includes invoiced revenues for both hours, material and expenses.",
            "format": "double"
          },
          "billableSalesAmount": {
            "type": "number",
            "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has not been created yet, or where it has been created, but is yet not registered",
            "format": "double"
          },
          "invoicePendingRegistrationAmount": {
            "type": "number",
            "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has been created, but is yet not registered.",
            "format": "double"
          }
        }
      },
      "AdvanceInvoicing": {
        "type": "object",
        "properties": {
          "isInvoicedInAdvance": {
            "type": "boolean",
            "description": "True if plan is invoiced in advance"
          },
          "baseDateAdvanceDays": {
            "type": "integer",
            "description": "Number of days to advance invoicing from base date",
            "format": "int32"
          }
        }
      },
      "UsageUnit": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "type": "integer",
            "description": "Measurement unit identifier",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Measurement unit (ex. mm, km, dl, kg)"
          },
          "measurementUnitLink": {
            "type": "string",
            "description": "Material unit reference"
          }
        }
      },
      "NotificationRule": {
        "type": "object",
        "properties": {
          "notificationRuleId": {
            "type": "integer",
            "description": "The unique notification identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "notificationType": {
            "type": "integer",
            "description": "The type of notification to be given.\r\nLink to a domain value (DOV).\r\nExamples: Renewval, Review and Expired",
            "format": "int32"
          },
          "daysBeforeExpirationDate": {
            "type": "integer",
            "description": "Number of days to notify before the event. Used to calculate the value NotifyDate",
            "format": "int32"
          },
          "notifyDate": {
            "type": "string",
            "description": "Recalculated everytime ExpirationDate or DaysBeforeExpirationDate is updated",
            "format": "date"
          },
          "notifyBy": {
            "type": "integer",
            "description": "How the notification should be sent stored as a domain link (DOV).\r\nExamples: Email or Task",
            "format": "int32"
          },
          "notifyEmployee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Link to the person who should be notified"
          },
          "notificationRuleLink": {
            "type": "string",
            "description": "Supplier purchase contract notification reference"
          }
        }
      },
      "Intercompany1": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          }
        }
      },
      "Source4": {
        "type": "object",
        "properties": {
          "registrationDate": {
            "type": "string",
            "description": "Date of registration",
            "format": "date"
          }
        }
      },
      "Contact1": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "integer",
            "description": "Contact identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Status of the contact. 1:New, 4:Active, 9:Inactive",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "Firstname/givenname of the contact"
          },
          "lastName": {
            "type": "string",
            "description": "Surname/familyname/lastname of the contact"
          },
          "jobTitle": { "type": "string", "description": "Professional title" },
          "category": {
            "type": "string",
            "description": "Category of the contact"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "Three character code following the ISO 639-2 standard."
          },
          "defaultEmail": {
            "type": "object",
            "properties": {
              "emailId": {
                "type": "integer",
                "description": "Email identifier",
                "format": "int32"
              },
              "createdAt": {
                "type": "string",
                "description": "Date and time of creation",
                "format": "date-time"
              },
              "type": { "type": "string", "description": "Type of email" },
              "address": {
                "type": "string",
                "description": "The email address"
              },
              "emailLink": {
                "type": "string",
                "description": "Email reference"
              }
            }
          },
          "defaultPhone": {
            "type": "object",
            "properties": {
              "phoneId": {
                "type": "integer",
                "description": "Phone identifier",
                "format": "int32"
              },
              "phoneNumber": {
                "type": "string",
                "description": "The phone number"
              },
              "type": { "type": "string", "description": "Type of phone " },
              "createdAt": {
                "type": "string",
                "description": "Date and time of creation",
                "format": "date-time"
              },
              "phoneLink": {
                "type": "string",
                "description": "Phone reference"
              }
            }
          },
          "contactLink": {
            "type": "string",
            "description": "Contact reference"
          }
        }
      },
      "Billing": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Year of billing",
            "format": "int32"
          },
          "billingAmount": {
            "type": "number",
            "description": "Billing amount by year",
            "format": "double"
          }
        }
      },
      "DueAmountByGranularity": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "fromDate": {
            "type": "string",
            "description": "Starting date of granularity",
            "format": "date"
          },
          "toDate": {
            "type": "string",
            "description": "Ending date of granularity",
            "format": "date"
          },
          "dueAmount": {
            "type": "number",
            "description": "Due amount for speicific granuality range",
            "format": "double"
          }
        }
      },
      "Product18": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Auction1": {
        "type": "object",
        "properties": {
          "auctionId": {
            "type": "integer",
            "description": "Auction identifier",
            "format": "int32"
          },
          "type": { "type": "string", "description": "Type of auction" },
          "auctionLink": {
            "type": "string",
            "description": "Auction reference"
          }
        }
      },
      "OutputCondition": {
        "type": "object",
        "properties": {
          "outputConditionId": {
            "type": "integer",
            "description": "Output condition identifier",
            "format": "int32"
          },
          "outputBy": { "type": "string", "description": "Output type" },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "True if output is mandatory, and cannot be removed from the output object"
          },
          "numberOfCopies": {
            "type": "integer",
            "description": "Number of copies to output",
            "format": "int32"
          },
          "outputObjectDefinition": {
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the Output Object"
              },
              "description": {
                "type": "string",
                "description": "Description of the Output Object Definition"
              },
              "outputObjectDefinitionLink": {
                "type": "string",
                "description": "Output object definition reference"
              }
            }
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the output design"
              },
              "outputDesignLink": {
                "type": "string",
                "description": "Output design reference"
              }
            }
          },
          "recipient": {
            "type": "object",
            "properties": {
              "details": {
                "type": "string",
                "description": "Details of recipient. Ex. the email address when output by is EMAIL."
              },
              "reference": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  },
                  "itemId": {
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  }
                }
              }
            },
            "description": "The destination of the output"
          },
          "outputConditionLink": {
            "type": "string",
            "description": "Output condition reference"
          }
        }
      },
      "ProductionDeliverySnapshot": {
        "type": "object",
        "properties": {
          "productionDeliverySnapshotId": {
            "type": "integer",
            "description": "Production delivery snapshot identifier",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Date of production delivery snapshot",
            "format": "date"
          },
          "milestone": {
            "type": "string",
            "description": "User defined milestone for production delivery snapshot"
          },
          "note": {
            "type": "string",
            "description": "Note for the production delivery snapshot"
          },
          "percentCompleted": {
            "type": "number",
            "description": "User defined percent completed of the project",
            "format": "double"
          },
          "isLastDayOfAccountingPeriod": {
            "type": "boolean",
            "description": "This date is last day of a accounting period."
          },
          "productionTotals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "salesBacklog": {
                "type": "number",
                "description": "Total sales backlog of the delivery project",
                "format": "double"
              },
              "accruedIncome": {
                "type": "number",
                "description": "Salesbacklog multiplied with percent completed. If percent completed is not specified for the production delivery snapshot, the accrued income is aggregated from each of the work breakdown structure elements. The accrued income will be the same as invoiced amount by the end of the delivery project.",
                "format": "double"
              },
              "invoicedAmount": {
                "type": "number",
                "description": "Total invoiced amount of the delivery project",
                "format": "double"
              },
              "advanceInvoicedAmount": {
                "type": "number",
                "description": "Total advance invoice amount for the delivery project",
                "format": "double"
              },
              "salesValue": {
                "type": "number",
                "description": "Totals.SalesBacklog + Totals.InvoicedAmount",
                "format": "double"
              },
              "planned": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "description": "Total accrued hours for the delivery project",
                    "format": "double"
                  },
                  "materialCost": {
                    "type": "number",
                    "description": "SUMPLANNEDMATERIALCOST",
                    "format": "double"
                  },
                  "fixedAdditionalCost": {
                    "type": "number",
                    "description": "SUMPLANNEDADDEDFIXEDCOST",
                    "format": "double"
                  },
                  "variableAdditionalCost": {
                    "type": "number",
                    "description": "SUMPLANNEDADDEDVARCOST",
                    "format": "double"
                  },
                  "fixedOperationCost": {
                    "type": "number",
                    "description": "SUMPLANNEDOPERATIONFIXEDCOST",
                    "format": "double"
                  },
                  "variableOperationCost": {
                    "type": "number",
                    "description": "SUMPLANNEDOPERATIONVARCOST",
                    "format": "double"
                  },
                  "totalCost": {
                    "type": "number",
                    "description": "Total planned cost of the delivery project",
                    "format": "double"
                  }
                }
              },
              "accrued": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "description": "Total accrued hours for the delivery project",
                    "format": "double"
                  },
                  "materialCost": {
                    "type": "number",
                    "description": "SUMACCRUEDMATERIALCOST",
                    "format": "double"
                  },
                  "fixedAdditionalCost": {
                    "type": "number",
                    "description": "SUMACCRUEDADDEDFIXEDCOST",
                    "format": "double"
                  },
                  "variableAdditionalCost": {
                    "type": "number",
                    "description": "SUMACCRUEDADDEDVARCOST",
                    "format": "double"
                  },
                  "fixedOperationCost": {
                    "type": "number",
                    "description": "SUMACCRUEDOPERATIONFIXEDCOST",
                    "format": "double"
                  },
                  "variableOperationCost": {
                    "type": "number",
                    "description": "SUMACCRUEDOPERATIONVARCOST",
                    "format": "double"
                  },
                  "totalCost": {
                    "type": "number",
                    "description": "Total accrued cost of the delivery project",
                    "format": "double"
                  }
                }
              }
            }
          },
          "financeProjectTotals": {
            "type": "object",
            "properties": {
              "costOfGoods": {
                "type": "number",
                "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\n'Other cost of goods' for a delivery project are 'material' costs that are not already included based on accumulated values for material/parts that are linked to the included COA items or via work orders (PWOs) that are linked to the COA items and connected sub PWOs.  So other cost of goods must exclude the general ledger (GL) accounts that are connected to inventory flow.",
                "format": "double"
              },
              "salaryCost": {
                "type": "number",
                "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\nProject wages is project labour cost that is not already added via the logged work at the included work orders (PWOs), example:  Engineering cost.\r\nTo be connected to PRS by a dedicated ACG.",
                "format": "double"
              },
              "otherCost": {
                "type": "number",
                "description": "Field from finance linked to PRO by PRO.PRJNO.",
                "format": "double"
              },
              "income": {
                "type": "number",
                "description": "Field from finance linked to PRO by PRO.PRJNO.\r\n\r\nUser must exclude the GL accounts that are used for invoices that are created based on the customer orders (COAs) that are linked to the PRO.",
                "format": "double"
              },
              "stockValue": {
                "type": "number",
                "description": "Inventory value for a delivery project is sum of all inventory on the related finance project. Use SVR with filter on the given project to find the correct value.",
                "format": "double"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "income": {
                "type": "number",
                "description": "InvoicedAmount + OtherIncome",
                "format": "double"
              },
              "cost": {
                "type": "number",
                "description": "Accrued.ToyalCost + OtherCostOfGoods + Wages + OtherExpences",
                "format": "double"
              },
              "profit": {
                "type": "number",
                "description": "TotalIncome - TotalCost",
                "format": "double"
              }
            }
          },
          "deliveryProject": {
            "type": "object",
            "properties": {
              "deliveryProjectId": {
                "type": "integer",
                "description": "Sales delivery project identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of sales delivery"
              },
              "deliveryProjectLink": {
                "type": "string",
                "description": "Sales delivery project reference"
              }
            }
          },
          "productionDeliverySnapshotLink": {
            "type": "string",
            "description": "Production delivery snapshot reference"
          }
        }
      },
      "AccountingLine2": {
        "type": "object",
        "properties": {
          "accountingLineId": {
            "type": "integer",
            "description": "Accounting line identifier of the receivable journal entry ",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the accounting line",
            "format": "int32"
          },
          "fixedAsset": {
            "type": "object",
            "properties": {
              "fixedAssetId": {
                "type": "integer",
                "description": "Fixed asset identifier",
                "format": "int32"
              },
              "fixedAssetLink": {
                "type": "string",
                "description": "Link to Fixed asset document"
              }
            }
          },
          "generalLedgerPostingItem": {
            "type": "object",
            "properties": {
              "generalLedgerPostingItemId": {
                "type": "integer",
                "description": "General ledger posting item identifier.",
                "format": "int32"
              },
              "generalLedgerPosting": {
                "type": "object",
                "properties": {
                  "generalLedgerPostingId": {
                    "type": "integer",
                    "description": "General ledger posting identifier",
                    "format": "int32"
                  },
                  "generalLedgerPostingLink": {
                    "type": "string",
                    "description": "General ledger posting reference"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "generalLedgerPostingItemLink": {
                "type": "string",
                "description": "General ledger posting reference"
              }
            }
          },
          "accountDimensions": {
            "type": "object",
            "properties": {
              "generalLedgerAccount": {
                "type": "object",
                "properties": {
                  "generalLedgerAccountId": {
                    "type": "integer",
                    "description": "General ledger account identifier",
                    "format": "int32"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "The account number of the general ledger account"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of general ledger account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of account"
                  },
                  "generalLedgerAccountLink": {
                    "type": "string",
                    "description": "General ledger account reference"
                  }
                }
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value for this dimension defintion."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the dimension value."
                    },
                    "dimensionDefinition": {
                      "type": "object",
                      "properties": {
                        "dimensionDefinitionId": {
                          "type": "integer",
                          "description": "Dimension identifier",
                          "format": "int32"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of dimension"
                        },
                        "dimensionDefinitionLink": {
                          "type": "string",
                          "description": "Dimension reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              },
              "vATPercent": {
                "type": "number",
                "description": "Value added tax percent",
                "format": "double"
              },
              "description": {
                "type": "string",
                "description": "Description of VAT Code definition"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount.",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "exchangeRate": {
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              },
              "debitAmount": {
                "type": "number",
                "description": "Total debit amount in company currency.",
                "format": "double"
              },
              "creditAmount": {
                "type": "number",
                "description": "Total credit amount in company currency.",
                "format": "double"
              }
            }
          },
          "receivableJournalEntry": {
            "type": "object",
            "properties": {
              "receivableJournalEntryId": {
                "type": "integer",
                "description": "Receivable journal entry identifier",
                "format": "int32"
              },
              "intercompany": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Abbreviation/code to identify the company"
                  }
                }
              },
              "accountingPeriod": {
                "type": "object",
                "properties": {
                  "accountingPeriodId": {
                    "type": "integer",
                    "description": "Accounting period identifier",
                    "format": "int32"
                  },
                  "period": {
                    "type": "integer",
                    "description": "Accounting period",
                    "format": "int32"
                  },
                  "accountingPeriodLink": {
                    "type": "string",
                    "description": "Accounting period reference"
                  }
                }
              },
              "receivableJournalEntryLink": {
                "type": "string",
                "description": "Receivable journal entry reference"
              }
            }
          },
          "accountingLineLink": {
            "type": "string",
            "description": "Accounting line reference"
          }
        }
      },
      "ReceivableTransaction": {
        "type": "object",
        "properties": {
          "accountsReceivableTransaction": {
            "type": "object",
            "properties": {
              "accountsReceivableTransactionId": {
                "type": "integer",
                "description": "Accounts receivable transaction identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the accounts receivable transaction",
                "format": "int32"
              },
              "dueDate": {
                "type": "string",
                "description": "Date the object is due to be paid",
                "format": "date"
              },
              "source": {
                "type": "object",
                "properties": {
                  "registrationDate": {
                    "type": "string",
                    "description": "Date of registration",
                    "format": "date"
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "Three character code following the ISO 4217 standard"
                  },
                  "totalAmount": {
                    "type": "number",
                    "description": "Total amount",
                    "format": "double"
                  }
                }
              },
              "accountsReceivableTransactionLink": {
                "type": "string",
                "description": "Accounts receivable transaction reference"
              }
            }
          },
          "paymentItem": {
            "type": "object",
            "properties": {
              "paymentItemId": {
                "type": "integer",
                "description": "Item-/line-number of the payment.",
                "format": "int32"
              },
              "payment": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "integer",
                    "description": "Payment identifier",
                    "format": "int32"
                  },
                  "issueDate": {
                    "type": "string",
                    "description": "Date when the document was issued.",
                    "format": "date"
                  },
                  "registrationDate": {
                    "type": "string",
                    "description": "Date of registration",
                    "format": "date"
                  },
                  "accountingPeriod": {
                    "type": "object",
                    "properties": {
                      "accountingPeriodId": {
                        "type": "integer",
                        "description": "Accounting period identifier",
                        "format": "int32"
                      },
                      "period": {
                        "type": "integer",
                        "description": "Accounting period",
                        "format": "int32"
                      },
                      "accountingPeriodLink": {
                        "type": "string",
                        "description": "Accounting period reference"
                      }
                    }
                  },
                  "paymentLink": {
                    "type": "string",
                    "description": "Payment reference"
                  }
                }
              },
              "paymentItemLink": {
                "type": "string",
                "description": "Payment item reference"
              }
            }
          }
        }
      },
      "ChangedBy1": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Price8": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "expectedPrice": {
            "type": "number",
            "description": "The expected price received from the customer. This price will be rejected or accepted by the seller",
            "format": "double"
          }
        }
      },
      "ProductLocation1": {
        "type": "object",
        "properties": {
          "location": {
            "type": "object",
            "properties": {
              "shortName": {
                "type": "string",
                "description": "Unique abbreviation/short name of the location"
              }
            }
          },
          "stock": {
            "type": "object",
            "properties": {
              "stockQuantity": {
                "type": "number",
                "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                "format": "double"
              },
              "availableStockQuantity": {
                "type": "number",
                "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                "format": "double"
              }
            }
          }
        },
        "description": "When specifying object type and object id, we also have a product location we can show availbable stock quantity from"
      },
      "LowestPrice1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "Discount price",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
          },
          "salesQuoteItem": {
            "type": "object",
            "properties": {
              "salesQuoteItemId": {
                "type": "integer",
                "description": "Sales quote item identifier",
                "format": "int32"
              },
              "salesQuote": {
                "type": "object",
                "properties": {
                  "salesQuoteId": {
                    "type": "integer",
                    "description": "Sales quote identifier",
                    "format": "int32"
                  },
                  "salesQuoteLink": {
                    "type": "string",
                    "description": "Sales quote reference"
                  }
                }
              },
              "salesQuoteItemLink": {
                "type": "string",
                "description": "Sales quote item referene"
              }
            },
            "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
          }
        }
      },
      "Price9": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "Discount price",
            "format": "double"
          },
          "netPrice": {
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "basedOn": {
            "type": "string",
            "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
          },
          "salesQuoteItem": {
            "type": "object",
            "properties": {
              "salesQuoteItemId": {
                "type": "integer",
                "description": "Sales quote item identifier",
                "format": "int32"
              },
              "remainingQuantity": {
                "type": "number",
                "description": "Remaining number of units to be forwarded.",
                "format": "double"
              },
              "salesQuote": {
                "type": "object",
                "properties": {
                  "salesQuoteId": {
                    "type": "integer",
                    "description": "Sales quote identifier",
                    "format": "int32"
                  },
                  "salesQuoteLink": {
                    "type": "string",
                    "description": "Sales quote reference"
                  }
                }
              },
              "salesQuoteItemLink": {
                "type": "string",
                "description": "Sales quote item referene"
              }
            },
            "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
          }
        }
      },
      "Assignment1": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "description": "Assignment identifier ",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity assigned",
            "format": "double"
          },
          "assignedTo": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "pickOperation": {
                "type": "object",
                "properties": {
                  "pickOperationId": {
                    "type": "integer",
                    "description": "Pick operation identifier",
                    "format": "int32"
                  },
                  "pickOperationLink": {
                    "type": "string",
                    "description": "Pick operation reference"
                  }
                }
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            }
          },
          "picking": {
            "type": "object",
            "properties": {
              "pickStatus": {
                "type": "integer",
                "description": "Status of the picking from this assignment. Note that the pick status of the assignment might differ from the status of the pick operation of the assigned item. ",
                "format": "int32"
              },
              "pickedQuantity": {
                "type": "number",
                "description": "Total picked quantity of this assignment. Will not get a value before pick operation has started.",
                "format": "double"
              }
            }
          },
          "assignmentRegister": {
            "type": "object",
            "properties": {
              "assignmentRegisterId": {
                "type": "integer",
                "description": "Assignment register identifier",
                "format": "int32"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "itemId": {
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "productStructureRevision": {
                    "type": "string",
                    "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
                  },
                  "measurementUnit": {
                    "type": "object",
                    "properties": {
                      "measurementUnitId": {
                        "type": "integer",
                        "description": "Material unit reference",
                        "format": "int32"
                      },
                      "measurementUnitLink": {
                        "type": "string",
                        "description": "Material unit reference"
                      }
                    }
                  },
                  "object": {
                    "type": "object",
                    "properties": {
                      "database": {
                        "type": "string",
                        "description": "Database of the object"
                      },
                      "objectId": {
                        "type": "integer",
                        "description": "Identifier of the object",
                        "format": "int32"
                      },
                      "objectType": {
                        "type": "string",
                        "description": "Type of object"
                      },
                      "objectLink": {
                        "type": "string",
                        "description": "API reference to the object"
                      }
                    }
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              },
              "assignmentRegisterLink": {
                "type": "string",
                "description": "Assignment register reference"
              }
            }
          },
          "assignmentLink": {
            "type": "string",
            "description": "Assignment reference"
          }
        }
      },
      "Payment5": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "description": "Payment identifier",
            "format": "int32"
          },
          "paymentLink": {
            "type": "string",
            "description": "Payment reference"
          }
        }
      },
      "ProjectOrderItem2": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "The category of this project order item: Material, Hours or Expenses"
          },
          "projectOrderItemLink": {
            "type": "string",
            "description": "Project order item reference"
          }
        }
      },
      "QuantityChange": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Change in quantity (delta value)",
            "format": "double"
          }
        }
      },
      "PriceChangeConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Change to cost price in local currency",
            "format": "double"
          }
        }
      },
      "ChangeReference": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "description": "The object type name for the archive"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectLink": {
            "type": "string",
            "description": "Document reference"
          },
          "itemId": {
            "type": "integer",
            "description": "Reference to the item id of the object",
            "format": "int32"
          },
          "itemLink": {
            "type": "string",
            "description": "Document item reference"
          }
        }
      },
      "Product19": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "measurementUnit": {
            "type": "object",
            "properties": {
              "measurementUnitId": {
                "type": "integer",
                "description": "Measurement unit identifier",
                "format": "int32"
              },
              "unit": {
                "type": "string",
                "description": "Measurement unit (ex. mm, km, dl, kg)"
              },
              "measurementUnitLink": {
                "type": "string",
                "description": "Material unit reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Invoiced": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Invoiced revenues, in sales currency.",
            "format": "double"
          }
        }
      },
      "BillableSales": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has not been created yet, or where it has been created, but is yet not registered",
            "format": "double"
          }
        }
      },
      "Remaining": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Estimated sales price for the remaining quantity, in local currency.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Estimated revenues for the remaining quantity, in local currency.",
            "format": "double"
          }
        }
      },
      "Pending": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Pending sales price, in local currency. Revenues are to be understood as pendig e.g if hours are logged, but yet not approved by manager (status 3), or when the internal sales order for \"Material for project order\" has been created, but material has been confirmed as consumed yet.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Pending revenues, in local currency. Revenues are to be understood as pending e.g if hours are logged, but yet not approved by manager (status 3), or when internal sales order for \"Material to project order\" has been created, but material has been confirmed as consumed yet.",
            "format": "double"
          }
        }
      },
      "Forecast": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Forecasted sales price, in local currency. Is calculated based on remaining, pending and accured sales price in local currency.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Forecasted revenues, in local currency. Is a sum of remaining, pending and accrued revenues in local currency.",
            "format": "double"
          }
        }
      },
      "Accrued1": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Accrued sales price, in local currency. Revenues are understood as accrued e.g when logged hours are approved, or when material has been confirmed as consumed.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Accrued revenues, in local currency. Revenues are to be understood as accrued e.g if logged hours have been approved or when material has been confirmed as consumed.",
            "format": "double"
          }
        }
      },
      "ProductUnit3": {
        "type": "object",
        "properties": {
          "productUnitId": {
            "type": "integer",
            "description": "Product unit identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of product unit",
            "format": "int32"
          },
          "serialNumber": { "type": "string", "description": "Serial number" },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            },
            "description": "References ART for creating RQMs (requirements) in a production structure"
          },
          "productUnitLink": {
            "type": "string",
            "description": "Product unit reference"
          }
        }
      },
      "KeyFigure4": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "GroupBy can be \"RUT\" (RentalUnit), \"RUTYEARMONTH\" ( RentalUnit, Year, Month) or \"YEARMONTH\" (Year or month)"
          },
          "occurrences": {
            "type": "integer",
            "description": "Number of occurrences with the specified key.",
            "format": "int32"
          },
          "totalHours": {
            "type": "number",
            "description": "Key figure values for the month",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "Description of the key."
          }
        }
      },
      "ApplicableAccessory": {
        "type": "object",
        "properties": {
          "accessory": {
            "type": "object",
            "properties": {
              "accessoryId": {
                "type": "integer",
                "description": "Accessory identifier",
                "format": "int32"
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "status": {
                    "type": "integer",
                    "description": "Status of the product",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "stock": {
                    "type": "object",
                    "properties": {
                      "stockQuantity": {
                        "type": "number",
                        "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                        "format": "double"
                      },
                      "availableStockQuantity": {
                        "type": "number",
                        "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                        "format": "double"
                      }
                    }
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              },
              "accessoryLink": {
                "type": "string",
                "description": "Accessory reference"
              }
            }
          },
          "productLocation": {
            "type": "object",
            "properties": {
              "location": {
                "type": "object",
                "properties": {
                  "shortName": {
                    "type": "string",
                    "description": "Unique abbreviation/short name of the location"
                  }
                }
              },
              "stock": {
                "type": "object",
                "properties": {
                  "stockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                    "format": "double"
                  },
                  "availableStockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                    "format": "double"
                  }
                }
              }
            },
            "description": "When specifying object type and object id, we also have a product location we can show availbable stock quantity from"
          },
          "lowestPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "grossPrice": {
                "type": "number",
                "description": "Represents the price per unit before any discounting is applied.",
                "format": "double"
              },
              "discount": {
                "type": "number",
                "description": "Discount price",
                "format": "double"
              },
              "netPrice": {
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              },
              "basedOn": {
                "type": "string",
                "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
              },
              "salesQuoteItem": {
                "type": "object",
                "properties": {
                  "salesQuoteItemId": {
                    "type": "integer",
                    "description": "Sales quote item identifier",
                    "format": "int32"
                  },
                  "salesQuote": {
                    "type": "object",
                    "properties": {
                      "salesQuoteId": {
                        "type": "integer",
                        "description": "Sales quote identifier",
                        "format": "int32"
                      },
                      "salesQuoteLink": {
                        "type": "string",
                        "description": "Sales quote reference"
                      }
                    }
                  },
                  "salesQuoteItemLink": {
                    "type": "string",
                    "description": "Sales quote item referene"
                  }
                },
                "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
              }
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "grossPrice": {
                  "type": "number",
                  "description": "Represents the price per unit before any discounting is applied.",
                  "format": "double"
                },
                "discount": {
                  "type": "number",
                  "description": "Discount price",
                  "format": "double"
                },
                "netPrice": {
                  "type": "number",
                  "description": "Final price per unit after deducting all discounts etc.",
                  "format": "double"
                },
                "basedOn": {
                  "type": "string",
                  "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
                },
                "salesQuoteItem": {
                  "type": "object",
                  "properties": {
                    "salesQuoteItemId": {
                      "type": "integer",
                      "description": "Sales quote item identifier",
                      "format": "int32"
                    },
                    "remainingQuantity": {
                      "type": "number",
                      "description": "Remaining number of units to be forwarded.",
                      "format": "double"
                    },
                    "salesQuote": {
                      "type": "object",
                      "properties": {
                        "salesQuoteId": {
                          "type": "integer",
                          "description": "Sales quote identifier",
                          "format": "int32"
                        },
                        "salesQuoteLink": {
                          "type": "string",
                          "description": "Sales quote reference"
                        }
                      }
                    },
                    "salesQuoteItemLink": {
                      "type": "string",
                      "description": "Sales quote item referene"
                    }
                  },
                  "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
                }
              }
            }
          }
        }
      },
      "ApplicableReplacement": {
        "type": "object",
        "properties": {
          "replacement": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the product",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "description": {
                "type": "string",
                "description": "Description of the product"
              },
              "stock": {
                "type": "object",
                "properties": {
                  "stockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                    "format": "double"
                  },
                  "availableStockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                    "format": "double"
                  }
                }
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          },
          "replacementFor": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          },
          "productLocation": {
            "type": "object",
            "properties": {
              "location": {
                "type": "object",
                "properties": {
                  "shortName": {
                    "type": "string",
                    "description": "Unique abbreviation/short name of the location"
                  }
                }
              },
              "stock": {
                "type": "object",
                "properties": {
                  "stockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand. The total number of units that are physically located at all locations at the current time. This includes items already assigned to fulfilling production needs or sales orders. So, this number may differ from the available quantity.",
                    "format": "double"
                  },
                  "availableStockQuantity": {
                    "type": "number",
                    "description": "Quantity on hand which is not assigned. The total number of the product that are physically located in all warehouse locations and are currently available for new orders or fulfilling production needs",
                    "format": "double"
                  }
                }
              }
            },
            "description": "When specifying object type and object id, we also have a product location we can show availbable stock quantity from"
          },
          "lowestPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "grossPrice": {
                "type": "number",
                "description": "Represents the price per unit before any discounting is applied.",
                "format": "double"
              },
              "discount": {
                "type": "number",
                "description": "Discount price",
                "format": "double"
              },
              "netPrice": {
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              },
              "basedOn": {
                "type": "string",
                "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
              },
              "salesQuoteItem": {
                "type": "object",
                "properties": {
                  "salesQuoteItemId": {
                    "type": "integer",
                    "description": "Sales quote item identifier",
                    "format": "int32"
                  },
                  "salesQuote": {
                    "type": "object",
                    "properties": {
                      "salesQuoteId": {
                        "type": "integer",
                        "description": "Sales quote identifier",
                        "format": "int32"
                      },
                      "salesQuoteLink": {
                        "type": "string",
                        "description": "Sales quote reference"
                      }
                    }
                  },
                  "salesQuoteItemLink": {
                    "type": "string",
                    "description": "Sales quote item referene"
                  }
                },
                "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
              }
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "grossPrice": {
                  "type": "number",
                  "description": "Represents the price per unit before any discounting is applied.",
                  "format": "double"
                },
                "discount": {
                  "type": "number",
                  "description": "Discount price",
                  "format": "double"
                },
                "netPrice": {
                  "type": "number",
                  "description": "Final price per unit after deducting all discounts etc.",
                  "format": "double"
                },
                "basedOn": {
                  "type": "string",
                  "description": "Specifies what the lowest price was based on. Could be QUOTE, STANDARD or IPA."
                },
                "salesQuoteItem": {
                  "type": "object",
                  "properties": {
                    "salesQuoteItemId": {
                      "type": "integer",
                      "description": "Sales quote item identifier",
                      "format": "int32"
                    },
                    "remainingQuantity": {
                      "type": "number",
                      "description": "Remaining number of units to be forwarded.",
                      "format": "double"
                    },
                    "salesQuote": {
                      "type": "object",
                      "properties": {
                        "salesQuoteId": {
                          "type": "integer",
                          "description": "Sales quote identifier",
                          "format": "int32"
                        },
                        "salesQuoteLink": {
                          "type": "string",
                          "description": "Sales quote reference"
                        }
                      }
                    },
                    "salesQuoteItemLink": {
                      "type": "string",
                      "description": "Sales quote item referene"
                    }
                  },
                  "description": "If the price is based on a sales quote, a reference to the related quote will be provided."
                }
              }
            }
          }
        }
      },
      "RecurringPrice1": {
        "type": "object",
        "properties": {
          "recurringPriceId": {
            "type": "integer",
            "description": "Recurring price indentifier",
            "format": "int32"
          },
          "recurringPriceLink": {
            "type": "string",
            "description": "Recurring price reference"
          }
        }
      },
      "RecurringInvoicePlanItem": {
        "type": "object",
        "properties": {
          "recurringInvoicePlanItemId": {
            "type": "integer",
            "description": "Recurring invoice plan item identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of item creation",
            "format": "date"
          },
          "status": {
            "type": "integer",
            "description": "Status of the item: 9 = Done, 4 = Active, 3 = Future",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of invoiced item",
            "format": "int32"
          },
          "customersReferenceNumber": {
            "type": "string",
            "description": "Customer item reference number. Comes originally from sales order item but updates independently."
          },
          "priceChangeAgreement": {
            "type": "integer",
            "description": "Type of recurring price (FIXED, MANUAL, AUTO). Defines if and how the recurring price can be updated.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Item description"
          },
          "source": {
            "type": "object",
            "properties": {
              "recurringInvoicePlanItemId": {
                "type": "integer",
                "description": "Source item of recurring invoice plan. Used for tracking the source.",
                "format": "int32"
              },
              "recurringInvoicePlan": {
                "type": "object",
                "properties": {
                  "recurringInvoicePlanId": {
                    "type": "integer",
                    "description": "Source identifier of recurring invoice plan. Used for tracking the source.",
                    "format": "int32"
                  },
                  "recurringInvoicePlanLink": {
                    "type": "string",
                    "description": "Recurring invoice plan reference"
                  }
                }
              },
              "recurringInvoicePlanItemLink": {
                "type": "string",
                "description": "Reference to the recurring invoice plan item."
              }
            }
          },
          "salesOrderItem": {
            "type": "object",
            "properties": {
              "salesOrderItemId": {
                "type": "integer",
                "description": "Sales order item identifier",
                "format": "int32"
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "References ART for creating RQMs (requirements) in a production structure"
              },
              "salesOrder": {
                "type": "object",
                "properties": {
                  "salesOrderId": {
                    "type": "integer",
                    "description": "Sales order identifier",
                    "format": "int32"
                  },
                  "salesOrderLink": {
                    "type": "string",
                    "description": "Sales order reference"
                  }
                },
                "description": "Value set from the originating sales order ORDERID"
              },
              "salesOrderItemLink": {
                "type": "string",
                "description": "Reference to the order item."
              }
            }
          },
          "period": {
            "type": "object",
            "properties": {
              "startAt": {
                "type": "string",
                "description": "Start date of the recurring invoice plan",
                "format": "date-time"
              },
              "endAt": {
                "type": "string",
                "description": "Actual end date and time of the recurring invoice plan",
                "format": "date-time"
              },
              "expectedEndAt": {
                "type": "string",
                "description": "Expected end date of the recurring invoice plan. Used for the prognosis.",
                "format": "date-time"
              }
            }
          },
          "recurringPrice": {
            "type": "object",
            "properties": {
              "recurringPriceId": {
                "type": "integer",
                "description": "Recurring price identifier",
                "format": "int32"
              },
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "priceInterval": {
                "type": "integer",
                "description": "Interval of recurring price",
                "format": "int32"
              },
              "hasOneTimeFee": {
                "type": "boolean",
                "description": "Boolean indicating if the recurring price has a one-time fee."
              },
              "hasUsageStep": {
                "type": "boolean",
                "description": "Boolean indicating if the recurring price has any usage steps."
              },
              "recurringPriceLink": {
                "type": "string",
                "description": "Recurring price indentifier"
              }
            }
          },
          "currentPriceStep": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Value of a price step",
                "format": "double"
              }
            }
          },
          "recurringInvoicePlanItemLink": {
            "type": "string",
            "description": "Reference to the recurring invoice plan item."
          }
        }
      },
      "Product20": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the product",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "ApplicableDay": {
        "type": "object",
        "properties": {
          "day": { "type": "string", "description": "Date of the day" }
        }
      },
      "NotificationRule1": {
        "type": "object",
        "properties": {
          "notificationRuleId": {
            "type": "integer",
            "description": "The unique notification identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "notificationType": {
            "type": "integer",
            "description": "The type of notification to be given.\r\nLink to a domain value (DOV).\r\nExamples: Renewval, Review and Expired",
            "format": "int32"
          },
          "daysBeforeExpirationDate": {
            "type": "integer",
            "description": "Number of days to notify before the event. Used to calculate the value NotifyDate",
            "format": "int32"
          },
          "notifyDate": {
            "type": "string",
            "description": "Recalculated everytime ExpirationDate or DaysBeforeExpirationDate is updated",
            "format": "date"
          },
          "notifyBy": {
            "type": "integer",
            "description": "How the notification should be sent stored as a domain link (DOV).\r\nExamples: Email or Task",
            "format": "int32"
          },
          "notifyEmployee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            },
            "description": "Link to the person who should be notified"
          }
        }
      },
      "DerivedFrom": {
        "type": "object",
        "properties": {
          "purchaseQuoteItemId": {
            "type": "integer",
            "description": "Purchase quote item identifier",
            "format": "int32"
          },
          "purchaseQuote": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "purchaseQuoteId": {
                "type": "integer",
                "description": "Purchase quote identifier",
                "format": "int32"
              },
              "purchaseQuoteLink": {
                "type": "string",
                "description": "Purchase quote reference"
              }
            }
          },
          "purchaseQuoteItemLink": {
            "type": "string",
            "description": "Purchase quote item link"
          }
        }
      },
      "LandedCostConverted1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "purchasePrice": {
            "type": "number",
            "description": "Purchase price in sales currency.",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Freigth cost in sales currency.",
            "format": "double"
          },
          "duty": {
            "type": "number",
            "description": "Duty costs in sales currency.",
            "format": "double"
          },
          "charge": {
            "type": "number",
            "description": "Other cost in sales currency",
            "format": "double"
          },
          "grossPrice": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) in sales currency",
            "format": "double"
          }
        }
      },
      "ProjectOrderItem3": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          },
          "projectOrderItemLink": {
            "type": "string",
            "description": "Reference to the project order item."
          }
        }
      },
      "Customer8": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the customer. 1:New, 2:Pending internal approvement, 4:Active, 9:Obsolete",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
          },
          "firstName": {
            "type": "string",
            "description": "Secondary name of a company or firstname of a person"
          },
          "customerLink": {
            "type": "string",
            "description": "Customer reference"
          }
        }
      },
      "ParticipatingAuction": {
        "type": "object",
        "properties": {
          "auction": {
            "type": "object",
            "properties": {
              "auctionId": {
                "type": "integer",
                "description": "Auction identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of auction",
                "format": "int32"
              },
              "type": { "type": "string", "description": "Type of auction" },
              "title": { "type": "string", "description": "Title of auction" },
              "description": {
                "type": "string",
                "description": "Description of auction"
              },
              "auctionLink": {
                "type": "string",
                "description": "Auction reference"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "numberOfLots": {
                "type": "integer",
                "description": "Total number of lots the provided supplier is selling in this auction",
                "format": "int32"
              },
              "sumOfStartingBidPrice": {
                "type": "number",
                "description": "Sum of starting bid prices for all lots the provided supplier is selling in this auction",
                "format": "double"
              },
              "sumOfEstimatedPrice": {
                "type": "number",
                "description": "Sum of all lots estimated prices for provided supplier in this auction",
                "format": "double"
              }
            }
          }
        }
      },
      "OutputCondition1": {
        "type": "object",
        "properties": {
          "outputConditionId": {
            "type": "integer",
            "description": "Output condition identifier",
            "format": "int32"
          },
          "outputBy": { "type": "string", "description": "Output type" },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "True if output is mandatory, and cannot be removed from the output object"
          },
          "numberOfCopies": {
            "type": "integer",
            "description": "Number of copies to output",
            "format": "int32"
          },
          "outputObjectDefinition": {
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the Output Object"
              },
              "description": {
                "type": "string",
                "description": "Description of the Output Object Definition"
              },
              "outputObjectDefinitionLink": {
                "type": "string",
                "description": "Output object definition reference"
              }
            }
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the output design"
              },
              "outputDesignLink": {
                "type": "string",
                "description": "Output design reference"
              }
            }
          },
          "recipient": {
            "type": "object",
            "properties": {
              "details": {
                "type": "string",
                "description": "Details of recipient. Ex. the email address when output by is EMAIL."
              },
              "reference": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  },
                  "itemId": {
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "type": "string",
                    "description": "Type of item"
                  },
                  "itemLink": {
                    "type": "string",
                    "description": "API reference to the item"
                  }
                }
              }
            },
            "description": "The destination of the output"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "integer",
            "description": "Subscription identifier",
            "format": "int32"
          },
          "subscriptionLink": {
            "type": "string",
            "description": "Subscription reference"
          }
        }
      },
      "ExchangeRateFluctuation": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "number",
            "description": "Represents the exchange rate fluctuation amount",
            "format": "double"
          },
          "percent": {
            "type": "number",
            "description": "The percent of change that resulted in fluctuation price change",
            "format": "double"
          }
        }
      },
      "Product21": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "customField1": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "customField2": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Company name of the manufacturer."
              },
              "shortName": {
                "type": "string",
                "description": "Shortname/code of the manufacturer "
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "LandedCost1": {
        "type": "object",
        "properties": {
          "purchaseCurrency": {
            "type": "string",
            "description": "Purchase currency is the currency this product normally is purchased in. This is also the base currency used in the gross margin calculation. By default the purchase currency is retrieved from the product."
          },
          "purchasePrice": {
            "type": "number",
            "description": "Purchase price for each unit",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Estimated freight cost of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "duty": {
            "type": "number",
            "description": "Duty cost of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "charge": {
            "type": "number",
            "description": "Other costs of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "grossPrice": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) of getting each unit in stock, including purchase price, duties, charges, freight etc.",
            "format": "double"
          },
          "purchaseExchangeRate": {
            "type": "number",
            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
            "format": "double"
          },
          "isDerivedFromUserInput": {
            "type": "boolean",
            "description": "True if landed cost is derived from manual user input. Landed cost can only be manually updated for products without assignments"
          },
          "isDerivedFromPreferredPurchasePrice": {
            "type": "boolean",
            "description": "True if the landed cost for this item is derived from preferred purchase price. This means that parts (or all) of the item has not reserved goods in stock, nor incoming goods (supplier backlog or production backlog)."
          },
          "isDerivedFromAssignedSupplierBacklog": {
            "type": "boolean",
            "description": "True if landed cost for this item is derived from assigned supplier backlog. This means that the item has reserved incoming goods (supplier backlog or production backlog)."
          },
          "isDerivedFromAssignedStock": {
            "type": "boolean",
            "description": "True if landed cost for this item is derived from assigned stock. This means that the item has reserved goods in stock."
          },
          "derivedFrom": {
            "type": "object",
            "properties": {
              "purchaseQuoteItemId": {
                "type": "integer",
                "description": "Purchase quote item identifier",
                "format": "int32"
              },
              "purchaseQuote": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Database of the object"
                  },
                  "purchaseQuoteId": {
                    "type": "integer",
                    "description": "Purchase quote identifier",
                    "format": "int32"
                  },
                  "purchaseQuoteLink": {
                    "type": "string",
                    "description": "Purchase quote reference"
                  }
                }
              },
              "purchaseQuoteItemLink": {
                "type": "string",
                "description": "Purchase quote item link"
              }
            }
          }
        }
      },
      "RecurringInvoicePeriod": {
        "type": "object",
        "properties": {
          "recurringInvoicePeriodId": {
            "type": "integer",
            "description": "Recurring invoice period identifier",
            "format": "int32"
          },
          "period": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "description": "Start date that was used to process absence statistics data",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "description": "End date that was used to process absence statistics data",
                "format": "date"
              }
            }
          },
          "recurringInvoicePeriodLink": {
            "type": "docref-customlink",
            "description": "Recurring invoice period reference"
          }
        }
      },
      "FormulaParameter": {
        "type": "object",
        "properties": {
          "parameterId": {
            "type": "integer",
            "description": "Parameter identifier",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of the parameter"
          },
          "translatedTitle": {
            "type": "string",
            "description": "Title of the parameter"
          },
          "description": {
            "type": "string",
            "description": "Description of the parameter"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the parameter"
          },
          "datatype": {
            "type": "string",
            "description": "Datatype of the parameter"
          },
          "minimumValue": {
            "type": "number",
            "description": "Minimum value of the parameter",
            "format": "double"
          },
          "maximumValue": {
            "type": "number",
            "description": "Maximum value of the parameter",
            "format": "double"
          },
          "parameterLink": {
            "type": "string",
            "description": "Parameter reference"
          }
        }
      },
      "PriceConverted3": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "expectedPrice": {
            "type": "number",
            "description": "Expected price in company currency",
            "format": "double"
          }
        }
      },
      "Totals27": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "expectedAmount": {
            "type": "number",
            "description": "Represents the expected item amount",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining value of item in document currency. The sum of remaining quantity and open forwarded quantity, multiplied with netprice",
            "format": "double"
          }
        }
      },
      "TotalsConverted14": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "expectedAmount": {
            "type": "number",
            "description": "Total net amount in company currency.",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "description": "Total remaining amount in company currency.",
            "format": "double"
          }
        }
      },
      "VATCodeDefinition2": {
        "type": "object",
        "properties": {
          "vATCode": {
            "type": "string",
            "description": "Code that determines VAT rules used for VAT calculations."
          }
        }
      },
      "Deviation1": {
        "type": "object",
        "properties": {
          "deviationId": {
            "type": "integer",
            "description": "Deviation identifier",
            "format": "int32"
          },
          "deviationType": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "deviationTypeId": {
                "type": "integer",
                "description": "Deviation definition identifier",
                "format": "int32"
              },
              "category": {
                "type": "integer",
                "description": "Type of deviation",
                "format": "int32"
              },
              "goodsHandling": {
                "type": "integer",
                "description": "Specifies how the goods should be handled ",
                "format": "int32"
              },
              "accountingHandling": {
                "type": "integer",
                "description": "Specifies how accounting should handle the deviation",
                "format": "int32"
              },
              "interCompanyHandling": {
                "type": "integer",
                "description": "Specifies how the deviation should be handled in the inter company trading.",
                "format": "int32"
              },
              "landedCostCalculation": {
                "type": "integer",
                "description": "Specifies how landed cost should be calculated.",
                "format": "int32"
              },
              "deviationTypeLink": {
                "type": "string",
                "description": "Deviation definition reference"
              }
            }
          },
          "deviationLink": {
            "type": "string",
            "description": "Deviation reference"
          }
        }
      },
      "SalesForecast": {
        "type": "object",
        "properties": {
          "salesForecastId": {
            "type": "integer",
            "description": "Sales forecast identifier",
            "format": "int32"
          },
          "salesForecastLink": {
            "type": "string",
            "description": "Sales forecast reference"
          }
        }
      },
      "ProjectOrderItem4": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "The category of this project order item: Material, Hours or Expenses"
          },
          "projectOrderLink": {
            "type": "string",
            "description": "Project order item reference"
          }
        }
      },
      "Sales4": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Equals to ACCRUEDPRICE if this billing basis is not yet invoiced and will be used as price in the invoice. Will not be changed billing basis is invoiced, even if ACCRUEDPRICE is changed",
            "format": "double"
          }
        }
      },
      "SalesConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Equals to CACCRUEDPRICE if this billing basis is not yet invoiced and will be used as cprice in the invoice. Will not be changed billing basis is invoiced, even if CACCRUEDPRICE is changed",
            "format": "double"
          }
        }
      },
      "Object6": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "registrationDate": {
            "type": "string",
            "description": "Date of registration",
            "format": "date"
          },
          "accountingPeriod": {
            "type": "object",
            "properties": {
              "accountingPeriodId": {
                "type": "integer",
                "description": "Accounting period identifier",
                "format": "int32"
              },
              "period": {
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              },
              "accountingPeriodLink": {
                "type": "string",
                "description": "Accounting period reference"
              }
            }
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        }
      },
      "Source5": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "description": "The object type name for the archive"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectLink": {
            "type": "string",
            "description": "Document reference"
          },
          "itemId": {
            "type": "integer",
            "description": "Reference to the item id of the object",
            "format": "int32"
          },
          "itemLink": {
            "type": "string",
            "description": "Document item reference"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "BillableSale": {
        "type": "object",
        "properties": {
          "billableSaleId": {
            "type": "integer",
            "description": "The billing basis sequence number",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of billing basis",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "The object type name for the archive"
          },
          "isForwarded": {
            "type": "boolean",
            "description": "Determines whether CIN (sales invoice) has been forwarded to CCN (sales credit note)"
          },
          "incurredCostDate": {
            "type": "string",
            "description": "The date the revenues became incurred. E.g the date a worker logs hours for (WOL.EndDate)",
            "format": "date"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity that will be invoiced; consumed quantity for material, billable hours from work log and \"1\" for expenses",
            "format": "double"
          },
          "note": {
            "type": "string",
            "description": "A note that will be copied to note in sales invoice item"
          },
          "projectOrderItem": {
            "type": "object",
            "properties": {
              "projectOrderItemId": {
                "type": "integer",
                "description": "Project order item identifier",
                "format": "int32"
              },
              "category": {
                "type": "string",
                "description": "The category of this project order item: Material, Hours or Expenses"
              },
              "projectOrderLink": {
                "type": "string",
                "description": "Project order item reference"
              }
            }
          },
          "sales": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "price": {
                "type": "number",
                "description": "Equals to ACCRUEDPRICE if this billing basis is not yet invoiced and will be used as price in the invoice. Will not be changed billing basis is invoiced, even if ACCRUEDPRICE is changed",
                "format": "double"
              }
            }
          },
          "salesConverted": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "price": {
                "type": "number",
                "description": "Equals to CACCRUEDPRICE if this billing basis is not yet invoiced and will be used as cprice in the invoice. Will not be changed billing basis is invoiced, even if CACCRUEDPRICE is changed",
                "format": "double"
              }
            }
          },
          "billingItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": { "type": "string", "description": "Type of item" },
              "status": {
                "type": "integer",
                "description": "Status of the item/object.",
                "format": "int32"
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "References ART for creating RQMs (requirements) in a production structure"
              },
              "object": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "registrationDate": {
                    "type": "string",
                    "description": "Date of registration",
                    "format": "date"
                  },
                  "accountingPeriod": {
                    "type": "object",
                    "properties": {
                      "accountingPeriodId": {
                        "type": "integer",
                        "description": "Accounting period identifier",
                        "format": "int32"
                      },
                      "period": {
                        "type": "integer",
                        "description": "Accounting period",
                        "format": "int32"
                      },
                      "accountingPeriodLink": {
                        "type": "string",
                        "description": "Accounting period reference"
                      }
                    }
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  }
                }
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "itemLink": {
                "type": "string",
                "description": "API reference to the item"
              }
            }
          },
          "source": {
            "type": "object",
            "properties": {
              "objectType": {
                "type": "string",
                "description": "The object type name for the archive"
              },
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectLink": {
                "type": "string",
                "description": "Document reference"
              },
              "itemId": {
                "type": "integer",
                "description": "Reference to the item id of the object",
                "format": "int32"
              },
              "itemLink": {
                "type": "string",
                "description": "Document item reference"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              }
            }
          },
          "billableSaleLink": {
            "type": "string",
            "description": "Project order billing basis reference"
          }
        }
      },
      "InitialSalesEstimate": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "markupPercent": {
            "type": "number",
            "description": "A copy of markup percent at the time the project order was activated.",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "description": "Initial estimated quantity. Will be a copy of the forecasted value at the time the project order is activated.",
            "format": "double"
          },
          "price": {
            "type": "number",
            "description": "Initial estimated sales price, in sales currency. Will be a copy of the forecasted value at the time the project order is activated.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Initial estimated revenues, in sales currency. Will be a copy of the forecasted value at the time the project order is activated.",
            "format": "double"
          }
        }
      },
      "InitialSalesEstimateConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Initial estimated sales price, in local currency. Will not be updated after the project order has been activated.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Initial estimated revenues, in local currency. Will not be updated after the project order has been activated.",
            "format": "double"
          }
        }
      },
      "InitialCostEstimate": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "price": {
            "type": "number",
            "description": "Initial estimated cost pr unit, in local currency. Will not be updated after the project order has been activated.",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "Initial estimated cost, in local currency. Will not be updated after the project order has been activated.",
            "format": "double"
          }
        }
      },
      "Sales5": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "markupPercent": {
            "type": "number",
            "description": "If chosen product matches a price agreement (IPA) and this holds a gross margin  percentage, this will be recalculated to a markup percentage. Can be changed during the project, it will then recalculated prices. ",
            "format": "double"
          },
          "remaining": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Remaining estimated quantity is the expected remaining quantity to deliver. Will e.g be reduced when work hours are logged, but can be manually adjusted anytime.",
                "format": "double"
              },
              "price": {
                "type": "number",
                "description": "Estimated sales price for the remaining quantity, in sales currency. May be adjusted during the process.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Estimated revenues for the remaining quantity, in sales currency.",
                "format": "double"
              }
            }
          },
          "pending": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Pending quantity. Quantity is to be understood as pending e.g if hours are logged, but yet not approved by manager (status 3), or when the internal sales order for \"Material to project order\" has been created, but material is not confirmed as consumed yet.",
                "format": "double"
              },
              "price": {
                "type": "number",
                "description": "Pending sales price, in sales currency. Revenues are to be understood as pending e.g when hours are logged, but not approved by manager (status 3), -or when the internal sales order for \"Material to project order\" has been created, but material has not been confirmed as consumed yet.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Pending revenues, in sales currency. Revenues are to be understood as pending e.g if hours are logged, but yet not approved by manager (status 3), or when the internal sales order for \"Material to project order\" has been created, but material is not confirmed as consumed yet.",
                "format": "double"
              }
            }
          },
          "accrued": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Accrued quantity. Quantity that has been accrued is to be understood as e.g logged hours that are approved, or material has been confirmed as consumed.",
                "format": "double"
              },
              "price": {
                "type": "number",
                "description": "Accrued sales price, in sales currency. Revenues are to be understood as accrued e.g when logged hours have been approved, or when material has been confirmed as consumed.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Accrued revenues, in sales currency. Revenues are to be understood as accrued e.g if logged hours have been approved or when material has been confirmed as consumed.",
                "format": "double"
              }
            }
          },
          "forecast": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Forecasted quantity is an accumulated value of RemainingQty + PendingQty + AccruedQty. It's the total quantity one expect to deliver based on the situation at the moment.",
                "format": "double"
              },
              "price": {
                "type": "number",
                "description": "Forecasted sales price, in sales currency. Is calculated based on remaining, pending and accrued sales price.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Forecasted revenues, in sales currency. Is a sum of remaining, pending and accrued revenues.",
                "format": "double"
              }
            }
          },
          "invoiced": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Invoiced revenues, in sales currency.",
                "format": "double"
              }
            }
          },
          "billableSales": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has not been created yet, or where it has been created, but is yet not registered",
                "format": "double"
              }
            }
          }
        }
      },
      "SalesConverted1": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "remaining": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Estimated sales price for the remaining quantity, in local currency.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Estimated revenues for the remaining quantity, in local currency.",
                "format": "double"
              }
            }
          },
          "pending": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Pending sales price, in local currency. Revenues are to be understood as pendig e.g if hours are logged, but yet not approved by manager (status 3), or when the internal sales order for \"Material for project order\" has been created, but material has been confirmed as consumed yet.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Pending revenues, in local currency. Revenues are to be understood as pending e.g if hours are logged, but yet not approved by manager (status 3), or when internal sales order for \"Material to project order\" has been created, but material has been confirmed as consumed yet.",
                "format": "double"
              }
            }
          },
          "accrued": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Accrued sales price, in local currency. Revenues are understood as accrued e.g when logged hours are approved, or when material has been confirmed as consumed.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Accrued revenues, in local currency. Revenues are to be understood as accrued e.g if logged hours have been approved or when material has been confirmed as consumed.",
                "format": "double"
              }
            }
          },
          "forecast": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Forecasted sales price, in local currency. Is calculated based on remaining, pending and accured sales price in local currency.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Forecasted revenues, in local currency. Is a sum of remaining, pending and accrued revenues in local currency.",
                "format": "double"
              }
            }
          },
          "invoiced": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Invoiced revenues, in sales currency.",
                "format": "double"
              }
            }
          },
          "billableSales": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The total sum of billing basis, in sales currency for a specific project order, where invoice or credit note has not been created yet, or where it has been created, but is yet not registered",
                "format": "double"
              }
            }
          }
        }
      },
      "CostConverted": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "remaining": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Estimated sales price for the remaining quantity, in local currency.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Estimated revenues for the remaining quantity, in local currency.",
                "format": "double"
              }
            }
          },
          "pending": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Pending sales price, in local currency. Revenues are to be understood as pendig e.g if hours are logged, but yet not approved by manager (status 3), or when the internal sales order for \"Material for project order\" has been created, but material has been confirmed as consumed yet.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Pending revenues, in local currency. Revenues are to be understood as pending e.g if hours are logged, but yet not approved by manager (status 3), or when internal sales order for \"Material to project order\" has been created, but material has been confirmed as consumed yet.",
                "format": "double"
              }
            }
          },
          "forecast": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Forecasted sales price, in local currency. Is calculated based on remaining, pending and accured sales price in local currency.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Forecasted revenues, in local currency. Is a sum of remaining, pending and accrued revenues in local currency.",
                "format": "double"
              }
            }
          },
          "accrued": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Accrued sales price, in local currency. Revenues are understood as accrued e.g when logged hours are approved, or when material has been confirmed as consumed.",
                "format": "double"
              },
              "amount": {
                "type": "number",
                "description": "Accrued revenues, in local currency. Revenues are to be understood as accrued e.g if logged hours have been approved or when material has been confirmed as consumed.",
                "format": "double"
              }
            }
          }
        }
      },
      "ReadBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Product22": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "countryOfOriginCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "customField1": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "customField2": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "standardLeadTime": {
            "type": "integer",
            "description": "The expected lead time, in number of days, from ordering from supplier to delivery. Used in different purchase processes, typically when supplier is unknown. Note that this might differ from the standard lead times defined on the different suppliers. ",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "The weight of the product in kilograms.",
            "format": "double"
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Company name of the manufacturer."
              },
              "shortName": {
                "type": "string",
                "description": "Shortname/code of the manufacturer "
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "LandedCost2": {
        "type": "object",
        "properties": {
          "purchaseCurrency": {
            "type": "string",
            "description": "Purchase currency is the currency this product normally is purchased in. This is also the base currency used in the gross margin calculation. By default the purchase currency is retrieved from the product."
          },
          "purchasePrice": {
            "type": "number",
            "description": "Purchase price for each unit",
            "format": "double"
          },
          "freight": {
            "type": "number",
            "description": "Estimated freight cost of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "duty": {
            "type": "number",
            "description": "Duty cost of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "charge": {
            "type": "number",
            "description": "Other costs of getting each unit in stock. Used for calculating landed cost.",
            "format": "double"
          },
          "grossPrice": {
            "type": "number",
            "description": "Total cost (landed cost or true cost) of getting each unit in stock, including purchase price, duties, charges, freight etc.",
            "format": "double"
          },
          "purchaseExchangeRate": {
            "type": "number",
            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
            "format": "double"
          },
          "isDerivedFromPreferredPurchasePrice": {
            "type": "boolean",
            "description": "True if the landed cost for this item is derived from preferred purchase price. This means that parts (or all) of the item has not reserved goods in stock, nor incoming goods (supplier backlog or production backlog)."
          },
          "derivedFrom": {
            "type": "object",
            "properties": {
              "purchaseQuoteItemId": {
                "type": "integer",
                "description": "Purchase quote item identifier",
                "format": "int32"
              },
              "purchaseQuote": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Database of the object"
                  },
                  "purchaseQuoteId": {
                    "type": "integer",
                    "description": "Purchase quote identifier",
                    "format": "int32"
                  },
                  "purchaseQuoteLink": {
                    "type": "string",
                    "description": "Purchase quote reference"
                  }
                }
              },
              "purchaseQuoteItemLink": {
                "type": "string",
                "description": "Purchase quote item link"
              }
            }
          }
        }
      },
      "Product23": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "type": { "type": "string", "description": "Type of product" },
          "countryOfOriginCode": {
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "customField1": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "customField2": {
            "type": "string",
            "description": "Custom field for grouping, sorting, categorizing and other purposes."
          },
          "weight": {
            "type": "number",
            "description": "The weight of the product in kilograms.",
            "format": "double"
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Company name of the manufacturer."
              },
              "shortName": {
                "type": "string",
                "description": "Shortname/code of the manufacturer "
              },
              "manufacturerLink": {
                "type": "string",
                "description": "Manufacturer reference"
              }
            }
          },
          "productClassification": {
            "type": "object",
            "properties": {
              "productClassificationId": {
                "type": "string",
                "description": "Product classification identifier"
              },
              "productClassificationLink": {
                "type": "string",
                "description": "Product classification reference"
              }
            }
          },
          "stock": {
            "type": "object",
            "properties": {
              "isNonStock": {
                "type": "boolean",
                "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
              }
            }
          },
          "productLink": {
            "type": "string",
            "description": "Product reference"
          }
        }
      },
      "Period3": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "string",
            "description": "Start date of the recurring invoice plan",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "description": "Actual end date and time of the recurring invoice plan",
            "format": "date-time"
          },
          "expectedEndAt": {
            "type": "string",
            "description": "Expected end date of the recurring invoice plan. Used for the prognosis.",
            "format": "date-time"
          }
        }
      },
      "Totals28": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "estimatedAmount": {
            "type": "number",
            "description": "Accumulated value of all amounts from recurring invoice periods",
            "format": "double"
          },
          "accruedAmount": {
            "type": "number",
            "description": "Value of accrued amount from recurring invoice period",
            "format": "double"
          },
          "invoicedAmount": {
            "type": "number",
            "description": "Accumulated value of invoiced amounts from recurring invoice periods",
            "format": "double"
          },
          "forecastAmount": {
            "type": "number",
            "description": "Accumulated value of forecasted amounts",
            "format": "double"
          }
        }
      },
      "SalesOrderItem3": {
        "type": "object",
        "properties": {
          "salesOrderItemId": {
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            },
            "description": "References ART for creating RQMs (requirements) in a production structure"
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              },
              "salesOrderLink": {
                "type": "string",
                "description": "Sales order reference"
              }
            },
            "description": "Value set from the originating sales order ORDERID"
          },
          "salesOrderItemLink": {
            "type": "string",
            "description": "Reference to the order item."
          }
        }
      },
      "Source6": {
        "type": "object",
        "properties": {
          "recurringInvoicePlanItemId": {
            "type": "integer",
            "description": "Source item of recurring invoice plan. Used for tracking the source.",
            "format": "int32"
          },
          "recurringInvoicePlan": {
            "type": "object",
            "properties": {
              "recurringInvoicePlanId": {
                "type": "integer",
                "description": "Source identifier of recurring invoice plan. Used for tracking the source.",
                "format": "int32"
              },
              "recurringInvoicePlanLink": {
                "type": "string",
                "description": "Recurring invoice plan reference"
              }
            }
          },
          "recurringInvoicePlanItemLink": {
            "type": "string",
            "description": "Reference to the recurring invoice plan item."
          }
        }
      },
      "PurchaseQuoteItem": {
        "type": "object",
        "properties": {
          "purchaseQuoteItemId": {
            "type": "integer",
            "description": "Purchase quote item identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of purchase quote item",
            "format": "int32"
          },
          "leadTime": {
            "type": "integer",
            "description": "The lead time, in number of days, from ordering to delivery.",
            "format": "int32"
          },
          "resale": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "minimumNetPrice": {
                "type": "number",
                "description": "The minimum net price to use in sales order. Lower than 5% of this price will need approval before registering the sales order.",
                "format": "double"
              }
            }
          },
          "agreement": {
            "type": "object",
            "properties": {
              "expirationDate": {
                "type": "string",
                "description": "The agreement will have an expiration date. Note that this date might be different from the validity expiration date of the purchase quote. ",
                "format": "date"
              }
            },
            "description": "If the quote is accepted by the supplier, an agreement is made. The status of the quote item will then be set to 4."
          },
          "price": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "grossPrice": {
                "type": "number",
                "description": "Represents the price per unit before any discounting is applied.",
                "format": "double"
              }
            }
          },
          "purchaseQuote": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database of the object"
              },
              "purchaseQuoteId": {
                "type": "integer",
                "description": "Purchase quote identifier",
                "format": "int32"
              },
              "validity": {
                "type": "object",
                "properties": {
                  "effectiveDate": {
                    "type": "string",
                    "description": "Valid from",
                    "format": "date"
                  },
                  "expirationDate": {
                    "type": "string",
                    "description": "Valid to",
                    "format": "date"
                  }
                }
              },
              "supplier": {
                "type": "object",
                "properties": {
                  "supplierId": {
                    "type": "integer",
                    "description": "RamBase supplier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
                  },
                  "supplierLink": {
                    "type": "string",
                    "description": "Supplier reference"
                  }
                }
              },
              "purchaseQuoteLink": {
                "type": "string",
                "description": "Purchase quote reference"
              }
            }
          },
          "purchaseQuoteItemLink": {
            "type": "string",
            "description": "Purchase quote item link"
          }
        }
      },
      "Production2": {
        "type": "object",
        "properties": {
          "isManufacturedExternally": {
            "type": "boolean",
            "description": "True if product structure is manufactured externally, and not by ourself"
          }
        }
      },
      "PurchaseQuoteRequest": {
        "type": "object",
        "properties": {
          "purchaseQuoteRequestId": {
            "type": "integer",
            "description": "Purchase quote request identifier",
            "format": "int32"
          },
          "supplier": {
            "type": "object",
            "properties": {
              "supplierId": {
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
              },
              "supplierLink": {
                "type": "string",
                "description": "Supplier reference"
              }
            }
          },
          "purhcaseQuoteRequestLink": {
            "type": "string",
            "description": "Purchase quote request reference"
          }
        }
      },
      "SalesInvoice": {
        "type": "object",
        "properties": {
          "salesInvoiceId": {
            "type": "integer",
            "description": "Sales invoice identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "issueDate": {
            "type": "string",
            "description": "Invoice date",
            "format": "date"
          },
          "status": {
            "type": "integer",
            "description": "Status of the sales invoice",
            "format": "int32"
          },
          "salesInvoiceLink": {
            "type": "string",
            "description": "Sales invoice reference"
          }
        }
      },
      "WorkLog": {
        "type": "object",
        "properties": {
          "workLogId": {
            "type": "integer",
            "description": "Work log identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Status of work log",
            "format": "int32"
          },
          "period": {
            "type": "object",
            "properties": {
              "startedAt": {
                "type": "string",
                "description": "Start date and time of work log entry",
                "format": "date-time"
              },
              "endedAt": {
                "type": "string",
                "description": "End date and time of work log entry",
                "format": "date-time"
              },
              "totalHours": {
                "type": "number",
                "description": "Total hours of work log entry",
                "format": "double"
              },
              "billableHours": {
                "type": "number",
                "description": "Billable hours of work log entry",
                "format": "double"
              }
            }
          },
          "employee": {
            "type": "object",
            "properties": {
              "employeeId": {
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of employee"
              },
              "firstName": {
                "type": "string",
                "description": "First name of employee"
              },
              "employeeLink": {
                "type": "string",
                "description": "Employee reference"
              }
            }
          },
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            },
            "description": "References ART for creating RQMs (requirements) in a production structure"
          },
          "cost": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "description": "Cost pr hour in local currency",
                "format": "double"
              },
              "total": {
                "type": "number",
                "description": "Total cost in local currency",
                "format": "double"
              }
            }
          },
          "approval": {
            "type": "object",
            "properties": {
              "approvedAt": {
                "type": "string",
                "description": "The date and time the work log entry was approved to status 4 by manager",
                "format": "date-time"
              },
              "approvedBy": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "integer",
                    "description": "Employee identifier",
                    "format": "int32"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of employee"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of employee"
                  },
                  "employeeLink": {
                    "type": "string",
                    "description": "Employee reference"
                  }
                }
              }
            }
          },
          "internalNote": { "type": "string", "description": "Internal note" },
          "externalNote": { "type": "string", "description": "External note" },
          "initialWorkLog": {
            "type": "object",
            "properties": {
              "workLogId": {
                "type": "integer",
                "description": "Work log identifier",
                "format": "int32"
              }
            },
            "description": "Reference to the initial worklog entry if there are several versions"
          },
          "projectOrderItem": {
            "type": "object",
            "properties": {
              "projectOrderItemId": {
                "type": "integer",
                "description": "Project order item identifier",
                "format": "int32"
              },
              "productDescription": {
                "type": "string",
                "description": "Description of the item. If not specified, the description is by default copied from the product."
              },
              "projectOrder": {
                "type": "object",
                "properties": {
                  "projectOrderId": {
                    "type": "integer",
                    "description": "Project order identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the project order"
                  },
                  "projectOrderLink": {
                    "type": "string",
                    "description": "Project order reference"
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "References ART for creating RQMs (requirements) in a production structure"
              },
              "projectOrderItemLink": {
                "type": "string",
                "description": "Project order item reference"
              }
            }
          }
        }
      },
      "Totals29": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "oneTimeFeeAmount": {
            "type": "number",
            "description": "Accumulated value of fee amounts (sum of one-time fees of active RPR)",
            "format": "double"
          },
          "recurringAmount": {
            "type": "number",
            "description": "Accumulated value of recurring amounts",
            "format": "double"
          },
          "usageAmount": {
            "type": "number",
            "description": "Accumulated value of usage amounts (usage unit defined in referenced RPR)",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "description": "Accumulated value of discount amounts",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "description": "Aggregated value of all amounts",
            "format": "double"
          }
        }
      },
      "Discount": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "description": "Discount identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "description": "Reason of a discount (i.e. service)"
          },
          "amount": {
            "type": "number",
            "description": "Discount amount",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "comment": {
            "type": "string",
            "description": "Comment about a discount"
          }
        }
      },
      "UsageUnit1": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "type": "string",
            "description": "Measurement unit identifier"
          },
          "unit": {
            "type": "string",
            "description": "Measurement unit (ex. mm, km, dl, kg)"
          },
          "measurementUnitLink": {
            "type": "string",
            "description": "Material unit reference"
          }
        }
      },
      "Interval": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Length/quantity/value of the interval",
            "format": "double"
          },
          "unit": { "type": "string", "description": "Unit of the interval" }
        }
      },
      "RestrictedToCompany": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          }
        },
        "description": "Shortname for company database name (eg. TEM-NO). Application can only run for the company. "
      },
      "Permission": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission to use this application",
            "format": "int32"
          },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        }
      },
      "RedirectToApplication": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "description": "Wrapper application. This field holds the Id for the main application. Wrapper Apps are used to have different application match names for the same application (ex: CUS and CUSTOMER)",
            "format": "int32"
          },
          "applicationLink": {
            "type": "string",
            "description": "Application reference"
          }
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The users login name"
          },
          "oneTimePassword": {
            "type": "object",
            "properties": {
              "mobilePhone": {
                "type": "string",
                "description": "Users email address. Used to send change notifications and one time passwords"
              },
              "email": {
                "type": "string",
                "description": "Users mobile number. Used to send one time passwords to user."
              },
              "sendBy": {
                "type": "integer",
                "description": "Domain value id for onetime password delivery type (email, sms)",
                "format": "int32"
              },
              "allow": {
                "type": "boolean",
                "description": "Sets a flag if the user should be allowed to login to RamBase from other locations than the main office by two factor authentication."
              }
            }
          }
        }
      },
      "ConsultantFor": {
        "type": "object",
        "properties": {
          "ramBasePartnerId": {
            "type": "integer",
            "description": "Unique identifier for a customers partner",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of a customers partner"
          }
        }
      },
      "Repository1": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "description": "Scope of the DOV (LOCAL/GLOBAL)"
          }
        }
      },
      "ExportAPI": {
        "type": "object",
        "properties": {
          "exportAPIId": {
            "type": "integer",
            "description": "Export API identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of export API",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "uri": { "type": "string", "description": "Uri of API" },
          "context": {
            "type": "integer",
            "description": "Usage context of the export API",
            "format": "int32"
          },
          "exportAPILink": {
            "type": "string",
            "description": "Export API reference"
          }
        }
      },
      "PrintGroup": {
        "type": "object",
        "properties": {
          "printGroupId": {
            "type": "integer",
            "description": "Print group identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the print group"
          },
          "printGroupLink": {
            "type": "string",
            "description": "Print group reference"
          }
        }
      },
      "Module1": {
        "type": "object",
        "properties": {
          "moduleId": {
            "type": "integer",
            "description": "Module identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the module" },
          "moduleLink": { "type": "string", "description": "Module reference" }
        }
      },
      "ParentSystemSettingDefinition": {
        "type": "object",
        "properties": {
          "systemSettingDefinitionId": {
            "type": "integer",
            "description": "System setting definition identifier",
            "format": "int32"
          },
          "systemSettingDefinitionLink": {
            "type": "string",
            "description": "System setting definition reference"
          }
        }
      },
      "User3": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "status": {
            "type": "integer",
            "description": "User status ID ",
            "format": "int32"
          },
          "admittanceLevel": {
            "type": "integer",
            "description": "Accumulated admittance level for employee at given date.",
            "format": "int32"
          },
          "priceCategory": {
            "type": "integer",
            "description": "The level a user has in regards to licensing. We have 4 price categories; Self service- (most basic), Single task-, Functional- and Cross functional user (most advanced). Calculated admittance level for a user will define the price category based on threshold values.",
            "format": "int32"
          },
          "licensedRamBaseSystem": {
            "type": "object",
            "properties": {
              "ramBaseSystemId": {
                "type": "integer",
                "description": "The system identificator name of the system a user belogs to.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The descriptive name of the system a user belogs to."
              }
            }
          },
          "authentication": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The users login name"
              },
              "oneTimePassword": {
                "type": "object",
                "properties": {
                  "mobilePhone": {
                    "type": "string",
                    "description": "Users email address. Used to send change notifications and one time passwords"
                  },
                  "email": {
                    "type": "string",
                    "description": "Users mobile number. Used to send one time passwords to user."
                  },
                  "sendBy": {
                    "type": "integer",
                    "description": "Domain value id for onetime password delivery type (email, sms)",
                    "format": "int32"
                  },
                  "allow": {
                    "type": "boolean",
                    "description": "Sets a flag if the user should be allowed to login to RamBase from other locations than the main office by two factor authentication."
                  }
                }
              }
            }
          },
          "consultantFor": {
            "type": "object",
            "properties": {
              "ramBasePartnerId": {
                "type": "integer",
                "description": "Unique identifier for a customers partner",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The name of a customers partner"
              }
            }
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "ExclusivelyForCompany": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          },
          "companyLink": {
            "type": "string",
            "description": "Company reference"
          }
        },
        "description": "Company this course belongs to"
      },
      "Permission1": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the permission" },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "description": "Application identifier",
            "format": "int32"
          },
          "highestApplicationVersion": {
            "type": "object",
            "properties": {
              "applicationVersionId": {
                "type": "integer",
                "description": "Unique identifier for an application version",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of application",
                "format": "int32"
              },
              "type": {
                "type": "string",
                "description": "Type of HTML5 component. Used for widgets."
              },
              "name": {
                "type": "string",
                "description": "Name of application"
              },
              "descriptiveName": {
                "type": "string",
                "description": "Descriptive name of the application"
              },
              "description": {
                "type": "string",
                "description": "The descriptive tag of an application or component"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace of the Application"
              },
              "masterUrl": {
                "type": "string",
                "description": "Url of application"
              },
              "lookupKey": {
                "type": "string",
                "description": "Matching Keyword"
              },
              "lookupPriority": {
                "type": "integer",
                "description": "The priority of whitch the application lookup will select applications with the same applicationmatch.",
                "format": "int32"
              },
              "contentType": {
                "type": "string",
                "description": "Content Type"
              },
              "changeDescription": {
                "type": "string",
                "description": "Version description."
              },
              "createdAt": {
                "type": "string",
                "description": "Date and time when this version was created",
                "format": "date-time"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "description": "User identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the user"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user"
                  },
                  "userLink": {
                    "type": "string",
                    "description": "User reference"
                  }
                },
                "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
              },
              "restrictedToCompany": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "description": "Abbreviation/code to identify the company"
                  }
                },
                "description": "Shortname for company database name (eg. TEM-NO). Application can only run for the company. "
              },
              "permission": {
                "type": "object",
                "properties": {
                  "permissionId": {
                    "type": "integer",
                    "description": "Permission to use this application",
                    "format": "int32"
                  },
                  "permissionLink": {
                    "type": "string",
                    "description": "Permission reference"
                  }
                }
              },
              "redirectToApplication": {
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "integer",
                    "description": "Wrapper application. This field holds the Id for the main application. Wrapper Apps are used to have different application match names for the same application (ex: CUS and CUSTOMER)",
                    "format": "int32"
                  },
                  "applicationLink": {
                    "type": "string",
                    "description": "Application reference"
                  }
                }
              },
              "applicationVersionLink": {
                "type": "string",
                "description": "Application reference"
              }
            }
          },
          "applicationLink": {
            "type": "string",
            "description": "Application reference"
          }
        }
      },
      "Translation7": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of the translation of the application for this language",
            "format": "int32"
          },
          "isCertified": {
            "type": "boolean",
            "description": "True if the translation has been certified."
          },
          "language": {
            "type": "string",
            "description": "Three character code following the ISO 639-2 standard."
          }
        }
      },
      "CustomFieldOrder": {
        "type": "object",
        "properties": {
          "fieldOrder": {
            "type": "string",
            "description": "A json structure describing the field order"
          },
          "fieldOrderChecksum": {
            "type": "string",
            "description": "An md5 hash of the fieldorder"
          }
        },
        "description": "It is possible for a customer to rearrange the fields within a component. If they choose to do so for one or more of the components in this application, the fieldorder will contain a json structure that will keep information about the field order they have selected."
      },
      "Action": {
        "type": "object",
        "properties": {
          "automatedFlowActionId": {
            "type": "integer",
            "description": "Automated flow action identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the action" },
          "description": {
            "type": "string",
            "description": "Description of the action"
          },
          "automatedFlowActionLink": {
            "type": "string",
            "description": "Automated flow action link"
          }
        }
      },
      "ParentContextMenuItem": {
        "type": "object",
        "properties": {
          "contextMenuItemId": {
            "type": "integer",
            "description": "Context menu item id",
            "format": "int32"
          },
          "contextMenuItemLink": {
            "type": "string",
            "description": "Context menu item reference"
          }
        },
        "description": "If this field has a value it indicates that this menu item is a child of another menu item. The value of the field will tell what menu item this menu item is a child of."
      },
      "ContextMenuCollection": {
        "type": "object",
        "properties": {
          "contextMenuCollectionId": {
            "type": "integer",
            "description": "Context menu collection id. A unique Id representing a single context menu collection.",
            "format": "int32"
          },
          "contextMenuCollectionLink": {
            "type": "string",
            "description": "Context menu collection reference"
          }
        }
      },
      "TargetApplication": {
        "type": "object",
        "properties": {
          "applicationMatch": {
            "type": "string",
            "description": "Matching Keyword"
          }
        },
        "description": "Specifies APPMATCH of the application the menu item will navigate to."
      },
      "ApiOperation": {
        "type": "object",
        "properties": {
          "apiOperationId": {
            "type": "integer",
            "description": "Api operation identifiers",
            "format": "int32"
          },
          "apiOperationLink": {
            "type": "string",
            "description": "Api operation reference"
          }
        },
        "description": "If the actiontype is Operation this field will contain the AOP number to execute when clicking this menu item."
      },
      "AccessRule": {
        "type": "object",
        "properties": {
          "accessRuleId": {
            "type": "integer",
            "description": "Access Rule identifier",
            "format": "int32"
          },
          "accessRuleLink": {
            "type": "string",
            "description": "Reference to access rule details"
          }
        },
        "description": "Fill this field with a valid ARU (Access rule) number if you want an access rule to be evaluated before showing/executing this menu item."
      },
      "Repository2": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the DOV (LOCAL/GLOBAL)"
          },
          "overriddenStatus": {
            "type": "string",
            "description": "Contains the global overridden object status if object status has been changed locally."
          },
          "changedBy": {
            "type": "integer",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change",
            "format": "int32"
          }
        }
      },
      "ContextMenuItem": {
        "type": "object",
        "properties": {
          "contextMenuItemId": {
            "type": "integer",
            "description": "Context menu item id",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "The status of the context menu item",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title of the context menu item. This is the text that will be visible in the context menu."
          },
          "translatedTitle": {
            "type": "string",
            "description": "This is the translated version of the Title field."
          },
          "sortingPriority": {
            "type": "integer",
            "description": "A nuber that will be used for sorting the menu on screen. ",
            "format": "int32"
          },
          "confirmationDialogText": {
            "type": "string",
            "description": "If you want a confirmation from the user before running this menu item, this will be the text shown in the confirmation dialog box."
          },
          "translatedConfirmationDialogText": {
            "type": "string",
            "description": "The translated version of the ConfirmationDialogText field"
          },
          "actionType": {
            "type": "integer",
            "description": "The type of action that should happen when a user click this menu item.\nPossible values:\n0: Operation\n1: Popup\n2: Legacy Popup\n3: Code\n4: Navigate",
            "format": "int32"
          },
          "actionConfigurations": {
            "type": "string",
            "description": "Keeps configurations like what application this menu item should navigate to, what popup it should open, how wide and heigh the popup should be, parameter mapping between components and the collection and so on. Stored as JSON"
          },
          "parentContextMenuItem": {
            "type": "object",
            "properties": {
              "contextMenuItemId": {
                "type": "integer",
                "description": "Context menu item id",
                "format": "int32"
              },
              "contextMenuItemLink": {
                "type": "string",
                "description": "Context menu item reference"
              }
            },
            "description": "If this field has a value it indicates that this menu item is a child of another menu item. The value of the field will tell what menu item this menu item is a child of."
          },
          "contextMenuCollection": {
            "type": "object",
            "properties": {
              "contextMenuCollectionId": {
                "type": "integer",
                "description": "Context menu collection id. A unique Id representing a single context menu collection.",
                "format": "int32"
              },
              "contextMenuCollectionLink": {
                "type": "string",
                "description": "Context menu collection reference"
              }
            }
          },
          "targetApplication": {
            "type": "object",
            "properties": {
              "applicationMatch": {
                "type": "string",
                "description": "Matching Keyword"
              }
            },
            "description": "Specifies APPMATCH of the application the menu item will navigate to."
          },
          "apiOperation": {
            "type": "object",
            "properties": {
              "apiOperationId": {
                "type": "integer",
                "description": "Api operation identifiers",
                "format": "int32"
              },
              "apiOperationLink": {
                "type": "string",
                "description": "Api operation reference"
              }
            },
            "description": "If the actiontype is Operation this field will contain the AOP number to execute when clicking this menu item."
          },
          "accessRule": {
            "type": "object",
            "properties": {
              "accessRuleId": {
                "type": "integer",
                "description": "Access Rule identifier",
                "format": "int32"
              },
              "accessRuleLink": {
                "type": "string",
                "description": "Reference to access rule details"
              }
            },
            "description": "Fill this field with a valid ARU (Access rule) number if you want an access rule to be evaluated before showing/executing this menu item."
          },
          "contextMenuItemLink": {
            "type": "string",
            "description": "Context menu item reference"
          }
        }
      },
      "Deprecation": {
        "type": "object",
        "properties": {
          "isDeprecated": {
            "type": "boolean",
            "description": "True if COS is deprecated"
          },
          "message": {
            "type": "string",
            "description": "Message to show if COS is deprecated"
          }
        }
      },
      "Repository3": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change"
          }
        }
      },
      "Cos": {
        "type": "object",
        "properties": {
          "cosId": {
            "type": "integer",
            "description": "COS identifier",
            "format": "int32"
          },
          "cosLink": { "type": "string", "description": "COS reference" }
        },
        "description": "The cos number the datasource uses"
      },
      "Repository4": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "overriddenStatus": {
            "type": "integer",
            "description": "Contains the global overridden object status if object status has been changed locally.",
            "format": "int32"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the OOD (LOCAL/GLOBAL)"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change"
          }
        }
      },
      "DeploymentPackage": {
        "type": "object",
        "properties": {
          "deploymentPackageId": {
            "type": "integer",
            "description": "Deployment package identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of deployment package",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of deployment object package"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of deployment package object"
          },
          "numberOfObjects": {
            "type": "integer",
            "description": "Number of objects in package",
            "format": "int32"
          },
          "numberOfFolders": {
            "type": "integer",
            "description": "Number of folders in package",
            "format": "int32"
          },
          "numberOfControls": {
            "type": "integer",
            "description": "Number of control in deployment package",
            "format": "int32"
          },
          "committedAt": {
            "type": "string",
            "description": "Date and time deployment package was committed",
            "format": "date-time"
          },
          "committedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "riskAssessment": {
            "type": "object",
            "properties": {
              "isEmergency": {
                "type": "boolean",
                "description": "True if deployment is urgent"
              },
              "riskScore": {
                "type": "integer",
                "description": "Risk score of assessment",
                "format": "int32"
              },
              "reducedProductQuality": {
                "type": "object",
                "properties": {
                  "severity": {
                    "type": "integer",
                    "description": "Severity of reduced product quality",
                    "format": "int32"
                  },
                  "likelihood": {
                    "type": "integer",
                    "description": "Likelihood of reduced product quality",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "DomainValue": {
        "type": "object",
        "properties": {
          "domainValueId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": { "type": "string", "description": "Status of the DOV" },
          "object": {
            "type": "string",
            "description": "Object/archive/context of the DOV"
          },
          "field": { "type": "string", "description": "Fieldname of the DOV" },
          "value": { "type": "string", "description": "Value of the DOV" },
          "priority": {
            "type": "integer",
            "description": "Priority of the domainvalue",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          },
          "repository": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope of the DOV (LOCAL/GLOBAL)"
              }
            }
          }
        }
      },
      "ValueList": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Object/archive/context of the DOV"
          },
          "field": { "type": "string", "description": "Fieldname of the DOV" }
        }
      },
      "SubModule1": {
        "type": "object",
        "properties": {
          "subModuleId": {
            "type": "integer",
            "description": "Submodule identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the sub-module" },
          "translatedName": {
            "type": "string",
            "description": "Translated name of the submodule. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
          },
          "module": {
            "type": "object",
            "properties": {
              "moduleId": {
                "type": "integer",
                "description": "Module identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the module" },
              "translatedName": {
                "type": "string",
                "description": "Translated name of the module. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
              },
              "moduleLink": {
                "type": "string",
                "description": "Module reference"
              }
            }
          },
          "subModuleLink": {
            "type": "string",
            "description": "Submodule reference"
          }
        }
      },
      "MainImage2": {
        "type": "object",
        "properties": {
          "mediumId": {
            "type": "integer",
            "description": "Identifier of media",
            "format": "int32"
          },
          "url": { "type": "string", "description": "Url to media" },
          "description": {
            "type": "string",
            "description": "Description of media. Typically used in html img alt-attribute."
          },
          "mediumLink": {
            "type": "string",
            "description": "Reference to document"
          }
        }
      },
      "DeploymentPackage1": {
        "type": "object",
        "properties": {
          "deploymentPackageId": {
            "type": "integer",
            "description": "Deployment package identifier",
            "format": "int32"
          },
          "deploymentPackageLink": {
            "type": "string",
            "description": "Deployment package reference"
          }
        }
      },
      "RamBaseServer": {
        "type": "object",
        "properties": {
          "ramBaseServerId": {
            "type": "integer",
            "description": "RamBase server reference",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of RamBase server"
          },
          "ramBaseServerLink": {
            "type": "string",
            "description": "RamBase server reference"
          }
        }
      },
      "OutputObjectDefinition1": {
        "type": "object",
        "properties": {
          "outputObjectDefinitionId": {
            "type": "integer",
            "description": "Output object definition identifier",
            "format": "int32"
          },
          "outputObjectDefinitionLink": {
            "type": "string",
            "description": "Output object definition reference"
          }
        }
      },
      "SystemJobDefinition": {
        "type": "object",
        "properties": {
          "systemJobDefinitionId": {
            "type": "integer",
            "description": "System job definition reference",
            "format": "int32"
          },
          "severity": {
            "type": "string",
            "description": "Severity/impact of the job"
          },
          "name": {
            "type": "string",
            "description": "Name of system job definition"
          },
          "systemJobDefinitionLink": {
            "type": "string",
            "description": "System job definition reference"
          }
        }
      },
      "JobSequence": {
        "type": "object",
        "properties": {
          "jobSequenceId": {
            "type": "integer",
            "description": "Job sequence identifier",
            "format": "int32"
          },
          "jobSequenceLink": {
            "type": "string",
            "description": "Job sequence reference\r\n"
          }
        },
        "description": "Identifier of the job sequence definition to which the IO extension is related"
      },
      "Repository5": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "scope": {
            "type": "string",
            "description": "Scope of a folder type"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change"
          }
        }
      },
      "HighestJobSequenceVersion": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of job sequence ",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of job sequence " }
        }
      },
      "Child": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name" },
          "namespace": { "type": "string", "description": "Namespace" }
        }
      },
      "OutputFormats": {
        "type": "object",
        "properties": {
          "supportsPrint": {
            "type": "boolean",
            "description": "If true then you will be allowed to add print settings"
          },
          "supportsEmail": {
            "type": "boolean",
            "description": "If true then you will be allowed to add email settings"
          },
          "supportsFTP": {
            "type": "boolean",
            "description": "If true then you will be allowed to add FTP settings"
          }
        }
      },
      "OutputObjectDefinition2": {
        "type": "object",
        "properties": {
          "outputObjectDefinitionId": {
            "type": "integer",
            "description": "Output object definition identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Output Object Definition status",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the Output Object"
          },
          "description": {
            "type": "string",
            "description": "Description of the Output Object Definition"
          },
          "outputFormats": {
            "type": "object",
            "properties": {
              "supportsPrint": {
                "type": "boolean",
                "description": "If true then you will be allowed to add print settings"
              },
              "supportsEmail": {
                "type": "boolean",
                "description": "If true then you will be allowed to add email settings"
              },
              "supportsFTP": {
                "type": "boolean",
                "description": "If true then you will be allowed to add FTP settings"
              }
            }
          },
          "subModule": {
            "type": "object",
            "properties": {
              "subModuleId": {
                "type": "integer",
                "description": "Submodule identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the submodule"
              },
              "module": {
                "type": "object",
                "properties": {
                  "moduleId": {
                    "type": "integer",
                    "description": "Module identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the module"
                  },
                  "moduleLink": {
                    "type": "string",
                    "description": "Module reference"
                  }
                }
              },
              "subModuleLink": {
                "type": "string",
                "description": "Submodule reference"
              }
            }
          },
          "repository": {
            "type": "object",
            "properties": {
              "isChanged": {
                "type": "boolean",
                "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
              },
              "overriddenStatus": {
                "type": "integer",
                "description": "Contains the global overridden object status if object status has been changed locally.",
                "format": "int32"
              },
              "scope": {
                "type": "string",
                "description": "Scope of the OOD (LOCAL/GLOBAL)"
              },
              "changedBy": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "description": "User identifier",
                    "format": "int32"
                  },
                  "userLink": {
                    "type": "string",
                    "description": "User reference"
                  }
                },
                "description": "EmployeeId of the employee making the change"
              }
            }
          },
          "outputObjectDefinitionLink": {
            "type": "string",
            "description": "Output object definition reference"
          }
        }
      },
      "InstalledBy": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The employee that installed the print connector"
      },
      "Server": {
        "type": "object",
        "properties": {
          "iPAddress": {
            "type": "string",
            "description": "IP address of the server the print connector is intalled on"
          },
          "mACAddress": {
            "type": "string",
            "description": "MAC address of the server the print connector is intalled on"
          },
          "computerName": {
            "type": "string",
            "description": "Computer name of the server the print connector is installed on"
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system of the server the print connector is installed on"
          }
        }
      },
      "Duty": {
        "type": "object",
        "properties": {
          "dutyId": {
            "type": "integer",
            "description": "Duty identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the duty",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the duty" },
          "description": {
            "type": "string",
            "description": "Description of the duty"
          },
          "dutyLink": { "type": "string", "description": "Duty reference" }
        }
      },
      "Permission2": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the permission",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the permission" },
          "description": {
            "type": "string",
            "description": "Technical description of the permission"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description translated to selected language. If no translation exists for the given langauage, english description will show."
          },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        }
      },
      "Privilege": {
        "type": "object",
        "properties": {
          "privilegeId": {
            "type": "integer",
            "description": "Privilege identifier",
            "format": "int32"
          },
          "dataRestriction": {
            "type": "string",
            "description": "Datarestriction put on the link between a duty and a permission (privilege)\n"
          },
          "note": {
            "type": "string",
            "description": "The group title field. Used to identify different mappings of the same permission that have different datarestrictions"
          },
          "permission": {
            "type": "object",
            "properties": {
              "permissionId": {
                "type": "integer",
                "description": "Permission identifier",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the permission",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the permission"
              },
              "description": {
                "type": "string",
                "description": "Technical description of the permission"
              },
              "translatedDescription": {
                "type": "string",
                "description": "Description translated to selected language. If no translation exists for the given langauage, english description will show."
              },
              "permissionLink": {
                "type": "string",
                "description": "Permission reference"
              }
            }
          },
          "duty": {
            "type": "object",
            "properties": {
              "dutyId": {
                "type": "integer",
                "description": "Duty identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the duty" },
              "description": {
                "type": "string",
                "description": "Description of the duty"
              },
              "dutyLink": { "type": "string", "description": "Duty reference" }
            }
          },
          "repository": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope of the DOV (LOCAL/GLOBAL)"
              }
            }
          },
          "privilegeLink": {
            "type": "string",
            "description": "Privilege reference"
          }
        }
      },
      "RamBaseEventType": {
        "type": "object",
        "properties": {
          "ramBaseEventTypeId": {
            "type": "integer",
            "description": "RamBase event type identifier",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "description": "Key of the Event Type. This key will be used to identify which event to fire."
          },
          "name": {
            "type": "string",
            "description": "Name of the rambase event type. This should be more human readable than eventtype."
          },
          "namespace": {
            "type": "string",
            "description": "Namespace of the rambase event type"
          },
          "ramBaseEventTypeLink": {
            "type": "string",
            "description": "RamBase event type reference"
          }
        }
      },
      "ParentMenuItem": {
        "type": "object",
        "properties": {
          "parentMenuItemId": {
            "type": "integer",
            "description": "A reference to the parent menu item id. Will contain the RamBaseMenuItemId of the parent menu item.",
            "format": "int32"
          },
          "parentMenuLink": {
            "type": "string",
            "description": "An parent object reference. Will link to the parent menu item"
          }
        }
      },
      "RootMenuItem": {
        "type": "object",
        "properties": {
          "rootMenuItemId": {
            "type": "integer",
            "description": "A reference to the root menu item (the root of the tree). Will contain the RamBaseMenuItemId of the RamBase menu item at the root of the tree.",
            "format": "int32"
          },
          "rootMenuLink": {
            "type": "string",
            "description": "A root object reference. Will link to the menu item at the root of the tree."
          }
        }
      },
      "RequestedBy": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        },
        "description": "The user that requested the output of the report"
      },
      "Report": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "description": "Report definition identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of report definition",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of report definition"
          },
          "description": {
            "type": "string",
            "description": "Description of the report definition"
          },
          "translatedName": {
            "type": "string",
            "description": "Name translated to selected language. If no translation exists for the given langauage, english name will show."
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description translated to selected language. If no translation exists for the given langauage, english description will show."
          },
          "reportLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "Report Definition (RPD) that RPQ has been set up for"
      },
      "OutputJob": {
        "type": "object",
        "properties": {
          "outputJobId": {
            "type": "integer",
            "description": "Output job identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of output job",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "description": "Date and time the output job started",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "description": "Date and time the output job finished",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "Message for the output job. Typically an error message. Always specified if external process has failed."
          },
          "outputJobLink": {
            "type": "string",
            "description": "Output job reference"
          }
        },
        "description": "Reference to the output job executed for the report job"
      },
      "Object7": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          }
        },
        "description": "The object related to the subtracted quantity. Typically a goods reception (stock) or a production work order"
      },
      "Role1": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the role",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the role" },
          "description": {
            "type": "string",
            "description": "Description of the role"
          },
          "requiredUserLevel": {
            "type": "integer",
            "description": "The user level required to have this role. Only user having the same level or higher can be assigned.\r\nThis field also controls which duties can be added to the role. Only duties with the same level or lower can be added.\r\n\r\nUser levels (highest level first): Administrator, Partner, User, Portal user",
            "format": "int32"
          },
          "repository": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope of the DOV (LOCAL/GLOBAL)"
              }
            }
          },
          "roleLink": { "type": "string", "description": "Role reference" }
        }
      },
      "Repository6": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "changedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "EmployeeId of the employee making the change"
          },
          "isPendingDeployment": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and is ready to be deployed from the Repository"
          }
        }
      },
      "SystemSetting": {
        "type": "object",
        "properties": {
          "systemSettingId": {
            "type": "integer",
            "description": "System setting identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the system setting value",
            "format": "int32"
          },
          "value": { "type": "string", "description": "System setting value" },
          "systemSettingDefinition": {
            "type": "object",
            "properties": {
              "systemSettingDefinitionId": {
                "type": "integer",
                "description": "System setting definition identifier",
                "format": "int32"
              },
              "key": {
                "type": "string",
                "description": "Setting name used to reference the setting"
              },
              "name": {
                "type": "string",
                "description": "Short name/description of the setting definition"
              },
              "translatedName": {
                "type": "string",
                "description": "Name translated to selected language. If no translation exists for the given langauage, english name will show."
              },
              "description": {
                "type": "string",
                "description": "Descrtiption of the setting definition"
              },
              "translatedDescription": {
                "type": "string",
                "description": "Description translated to selected language. If no translation exists for the given langauage, english description will show."
              },
              "defaultValue": {
                "type": "string",
                "description": "Default value if setting not set for system"
              },
              "dataType": {
                "type": "string",
                "description": "Allowed values for setting. Used for validation of input from user."
              },
              "minimumValue": {
                "type": "number",
                "description": "For data type integer or decimal a minimum value can be specified, e.g. if a value range is allowed.",
                "format": "double"
              },
              "maximumValue": {
                "type": "number",
                "description": "For data type integer or decimal a maximum value can be specified, e.g. if a value range is allowed.",
                "format": "double"
              },
              "isRequired": {
                "type": "boolean",
                "description": "Flag if setting is required/must be set before using system. If this is a sub-setting, this settings must be set when the parent setting is turned on. The user must activate this setting (a system setting value must exist for this setting). If a default value is also specified, that will actually be a suggested value, the setting must still be activated."
              },
              "numberOfChildSettings": {
                "type": "integer",
                "description": "Number of system setting definitions this setting is parent for.",
                "format": "int32"
              },
              "module": {
                "type": "object",
                "properties": {
                  "moduleId": {
                    "type": "integer",
                    "description": "Module identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the module"
                  },
                  "moduleLink": {
                    "type": "string",
                    "description": "Module reference"
                  }
                }
              },
              "parentSystemSettingDefinition": {
                "type": "object",
                "properties": {
                  "systemSettingDefinitionId": {
                    "type": "integer",
                    "description": "System setting definition identifier",
                    "format": "int32"
                  },
                  "systemSettingDefinitionLink": {
                    "type": "string",
                    "description": "System setting definition reference"
                  }
                }
              },
              "domainValueList": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "description": "Object/archive/context of the DOV"
                  },
                  "field": {
                    "type": "string",
                    "description": "Fieldname of the DOV"
                  }
                }
              },
              "systemSettingDefinitionLink": {
                "type": "string",
                "description": "System setting definition link"
              }
            }
          }
        }
      },
      "LicensedRamBaseSystem": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "type": "integer",
            "description": "The system identificator name of the system a user belogs to.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The descriptive name of the system a user belogs to."
          }
        }
      },
      "OneTimePassword": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "type": "string",
            "description": "Users email address. Used to send change notifications and one time passwords"
          },
          "email": {
            "type": "string",
            "description": "Users mobile number. Used to send one time passwords to user."
          },
          "sendBy": {
            "type": "integer",
            "description": "Domain value id for onetime password delivery type (email, sms)",
            "format": "int32"
          },
          "allow": {
            "type": "boolean",
            "description": "Sets a flag if the user should be allowed to login to RamBase from other locations than the main office by two factor authentication."
          }
        }
      },
      "RamBaseEventType1": {
        "type": "object",
        "properties": {
          "ramBaseEventTypeId": {
            "type": "integer",
            "description": "RamBase event type identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Key of the Event Type. This key will be used to identify which event to fire."
          },
          "ramBaseEventTypeLink": {
            "type": "string",
            "description": "RamBase event type reference"
          }
        }
      },
      "Repository7": {
        "type": "object",
        "properties": {
          "isChanged": {
            "type": "boolean",
            "description": "Tells whether this object has been changed locally and are ready to be committed to the Repository"
          },
          "changedBy": {
            "type": "integer",
            "description": "EmployeeId of the employee making the change",
            "format": "int32"
          }
        }
      },
      "AccessStatement": {
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "integer",
            "description": "Line number of access statement",
            "format": "int32"
          },
          "statementType": {
            "type": "string",
            "description": "Statement type of the access statement (ex. IF, THROW, AND, OR)"
          },
          "fieldSource": {
            "type": "string",
            "description": "Source of field (ex. DOC, SYS)"
          },
          "field": {
            "type": "string",
            "description": "Value of field (ex. DOC, PID )"
          },
          "operator": {
            "type": "string",
            "description": "Operator of comparison (ex. EQ, NE, LT, GE)"
          },
          "valueSource": {
            "type": "string",
            "description": "Source of value (ex. DOC, SYS, blank)"
          },
          "value": {
            "type": "string",
            "description": "Value to compare with. If ValueSource is given, Value can be field of source (ex. PID, DOCTYPE)"
          },
          "parentLineNumber": {
            "type": "integer",
            "description": "Reference to parent statement identified with LineNumber",
            "format": "int32"
          }
        }
      },
      "CreatedFor": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "Parameter1": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "Error Key",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "Value of the error parameter"
          }
        }
      },
      "SystemJob": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "percentComplete": {
            "type": "integer",
            "description": "Percent complete",
            "format": "int32"
          },
          "objectLink": {
            "type": "string",
            "description": "API reference to the object"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        },
        "description": "Contains a reference to the system job, if a system job was started"
      },
      "Component": {
        "type": "object",
        "properties": {
          "applicationID": {
            "type": "string",
            "description": "The identifier for the component"
          },
          "status": {
            "type": "string",
            "description": "Status of the component"
          },
          "name": { "type": "string", "description": "Name of the component" },
          "applicationMatch": {
            "type": "string",
            "description": "Matching Keyword"
          },
          "checksum": { "type": "string", "description": "Checksum" },
          "description": {
            "type": "string",
            "description": "The descriptive tag of an application or component"
          }
        }
      },
      "ValueRestrictions": {
        "type": "object",
        "properties": {
          "minimumValue": {
            "type": "number",
            "description": "Minimum allowed value of parameter. This field can only be set on datatype with a numeric type.",
            "format": "double"
          },
          "maximumValue": {
            "type": "number",
            "description": "Maximum allowed value of parameter. This field can only be set on datatype with a numeric type.",
            "format": "double"
          },
          "regularExpression": {
            "type": "string",
            "description": "A regular expression used to restrict possible values for this parameter."
          },
          "domainValueList": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string",
                "description": "Object/archive/context of the DOV"
              },
              "field": {
                "type": "string",
                "description": "Fieldname of the DOV"
              }
            }
          }
        }
      },
      "AutomatedFlowActionParameter": {
        "type": "object",
        "properties": {
          "automatedFlowActionParameterId": {
            "type": "integer",
            "description": "Automated flow action parameter identifier",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Descriptive name of the parameter"
          },
          "key": {
            "type": "string",
            "description": "Key of the parameter. The key used to reference the value when the action is executed."
          },
          "description": {
            "type": "string",
            "description": "Description of the parameter"
          },
          "datatype": {
            "type": "string",
            "description": "Datatype of the parameter."
          },
          "defaultValue": {
            "type": "string",
            "description": "Default value of the parameter"
          },
          "isOptional": {
            "type": "boolean",
            "description": "True if the parameter is optional, meaning it is not required for the action to run"
          },
          "valueRestrictions": {
            "type": "object",
            "properties": {
              "minimumValue": {
                "type": "number",
                "description": "Minimum allowed value of parameter. This field can only be set on datatype with a numeric type.",
                "format": "double"
              },
              "maximumValue": {
                "type": "number",
                "description": "Maximum allowed value of parameter. This field can only be set on datatype with a numeric type.",
                "format": "double"
              },
              "regularExpression": {
                "type": "string",
                "description": "A regular expression used to restrict possible values for this parameter."
              },
              "domainValueList": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "description": "Object/archive/context of the DOV"
                  },
                  "field": {
                    "type": "string",
                    "description": "Fieldname of the DOV"
                  }
                }
              }
            }
          },
          "automatedFlowActionParameterLink": {
            "type": "string",
            "description": "Automated flow action parameter link"
          }
        }
      },
      "Cos1": {
        "type": "object",
        "properties": {
          "cosId": {
            "type": "integer",
            "description": "COS identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the COS (1-9)",
            "format": "int32"
          },
          "method": { "type": "string", "description": "Method of the COS" },
          "platform": {
            "type": "string",
            "description": "Platform of the COS"
          },
          "application": {
            "type": "string",
            "description": "Application of the COS"
          },
          "script": { "type": "string", "description": "Script of the COS" },
          "namespace": { "type": "string", "description": "Namespace of COS" }
        }
      },
      "Parameter2": {
        "type": "object",
        "properties": {
          "parameterId": {
            "type": "integer",
            "description": "A unique id for this specific parameter",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the paramter needed in this collection"
          },
          "description": {
            "type": "string",
            "description": "The description of this parameter"
          },
          "parameterLink": {
            "type": "string",
            "description": "Reference to parameter of context menu collection"
          }
        }
      },
      "CosVersion": {
        "type": "object",
        "properties": {
          "cosVersionId": {
            "type": "integer",
            "description": "COS version identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of COS version",
            "format": "int32"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "cos": {
            "type": "object",
            "properties": {
              "cosId": {
                "type": "integer",
                "description": "COS identifier",
                "format": "int32"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace of COS"
              },
              "type": {
                "type": "string",
                "description": "Platform of the COS"
              },
              "method": {
                "type": "string",
                "description": "Method of the COS"
              },
              "application": {
                "type": "string",
                "description": "Application of the COS"
              },
              "action": {
                "type": "string",
                "description": "Script of the COS"
              },
              "cosLink": { "type": "string", "description": "COS reference" }
            }
          }
        }
      },
      "Column": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of column" },
          "datatype": { "type": "string", "description": "Datatype of column" },
          "isAlwaysDefined": {
            "type": "boolean",
            "description": "True if column is always defined. Note that the value null means that this is unknown."
          }
        }
      },
      "RequestedBy1": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Reviewer": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "ArchiveClass": {
        "type": "object",
        "properties": {
          "archiveClassId": {
            "type": "integer",
            "description": "Archive class identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of archive class",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of archive class" },
          "description": {
            "type": "string",
            "description": "Desciption of archive class"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference of archive class"
          },
          "documentationUrl": {
            "type": "string",
            "description": "Url to documentation of archive class"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace of archive class. Updates of this archive class will only be allowed in COSes with this (or a sub) namespace. "
          },
          "firstId": {
            "type": "integer",
            "description": "First number when generating id/no for objects of archive class",
            "format": "int32"
          },
          "syncronizationMethod": {
            "type": "integer",
            "description": "Tells how this archive class is syncronized globally",
            "format": "int32"
          },
          "defaultDataSharing": {
            "type": "integer",
            "description": "Default setup for data sharing between companies.",
            "format": "int32"
          },
          "archiveTemplate": {
            "type": "object",
            "properties": {
              "archiveTemplateId": {
                "type": "integer",
                "description": "Archive template identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ArchiveTemplate": {
        "type": "object",
        "properties": {
          "archiveTemplateId": {
            "type": "integer",
            "description": "Template identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of template",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of template" },
          "subName": { "type": "string", "description": "SubName of template" },
          "tableNameSuffix": {
            "type": "string",
            "description": "Suffix of table in SQL"
          },
          "description": {
            "type": "string",
            "description": "Description of template"
          },
          "tableNumber": {
            "type": "integer",
            "description": "TableNumber of template (0 is main, 1-7 is table)",
            "format": "int32"
          },
          "parentArchiveTemplateId": {
            "type": "integer",
            "description": "Parent template identifier",
            "format": "int32"
          },
          "canUnlock": {
            "type": "boolean",
            "description": "Can the archive template be unlocked"
          },
          "unlockedToSystem": {
            "type": "string",
            "description": "Which system (if one) the archive template is locked to."
          },
          "canApply": {
            "type": "boolean",
            "description": "Is there any modifications made to this archive template that can be applied?"
          }
        }
      },
      "Publisher": {
        "type": "object",
        "properties": {
          "publisherId": {
            "type": "integer",
            "description": "Publisher identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Publisher name" },
          "description": {
            "type": "string",
            "description": "Publisher description"
          },
          "prefix": {
            "type": "string",
            "description": "Unique prefix used for extension objects created by the publisher, e.g. custom fields."
          },
          "publisherLink": {
            "type": "string",
            "description": "Publisher reference"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "description": "Field identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of field",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of field" },
          "archiveTemplateId": {
            "type": "integer",
            "description": "Template identifier",
            "format": "int32"
          },
          "dataTypeId": {
            "type": "integer",
            "description": "DataType identifier",
            "format": "int32"
          },
          "fieldNumber": {
            "type": "integer",
            "description": "Field placement in hardware",
            "format": "int32"
          },
          "isSynonym": {
            "type": "boolean",
            "description": "True if field is a synonym"
          },
          "synonymTo": {
            "type": "string",
            "description": "Synonym field name"
          },
          "description": {
            "type": "string",
            "description": "Description of field"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference of field"
          }
        }
      },
      "Translation8": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The language of the translated error-message"
          },
          "translatedMessage": {
            "type": "string",
            "description": "The translated error-message"
          }
        }
      },
      "ImportJobDefinition": {
        "type": "object",
        "properties": {
          "importJobDefinitionId": {
            "type": "integer",
            "description": "Import job definition reference",
            "format": "int32"
          },
          "severity": {
            "type": "string",
            "description": "Severity/impact of the import job"
          },
          "name": {
            "type": "string",
            "description": "Name of import job definition"
          },
          "importJobDefinitionLink": {
            "type": "string",
            "description": "Import job definition reference"
          }
        }
      },
      "OutputPrinter": {
        "type": "object",
        "properties": {
          "printerId": {
            "type": "integer",
            "description": "Identifier of the printer",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the printer" }
        },
        "description": "The name of the printer used"
      },
      "PrintConnector1": {
        "type": "object",
        "properties": {
          "printConnectorId": {
            "type": "integer",
            "description": "Print connector identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Readable name of the print connector"
          },
          "printConnectorLink": {
            "type": "string",
            "description": "Reference to the print connector"
          }
        }
      },
      "ForwardedFrom2": {
        "type": "object",
        "properties": {
          "outputJobId": {
            "type": "integer",
            "description": "Output job identifier",
            "format": "int32"
          },
          "outputJobLink": {
            "type": "string",
            "description": "Output job reference"
          }
        },
        "description": "Where the output job was forwarded from"
      },
      "ForwardedTo2": {
        "type": "object",
        "properties": {
          "outputJobId": {
            "type": "integer",
            "description": "Output job identifier",
            "format": "int32"
          },
          "outputJobLink": {
            "type": "string",
            "description": "Output job reference"
          }
        },
        "description": "Where the output job was forwarded to"
      },
      "OutputFile": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          },
          "filename": {
            "type": "string",
            "description": "Filename to display for the file version. Will be used when downloading the file."
          },
          "fileExtension": {
            "type": "string",
            "description": "Extension of the file (ex. jpg)"
          },
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "fileVersionLink": {
            "type": "string",
            "description": "File reference"
          }
        }
      },
      "CreatedFor1": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database of the object"
          },
          "objectId": {
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "ResourceVersion": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "integer",
            "description": "API resource identifier",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "description": "Version of the resource",
            "format": "int32"
          },
          "objectStatus": {
            "type": "string",
            "description": "Status of the resource version"
          },
          "verb": {
            "type": "string",
            "description": "Verb of the resource version"
          },
          "uri": {
            "type": "string",
            "description": "Uri of the resource version"
          }
        }
      },
      "CodeReview1": {
        "type": "object",
        "properties": {
          "codeReviewId": {
            "type": "integer",
            "description": "Code review identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of code review",
            "format": "int32"
          },
          "externalReference": {
            "type": "string",
            "description": "External reference of code review"
          },
          "requestedAt": {
            "type": "utcdatetime",
            "description": "Date and time code review was requested"
          },
          "startedAt": {
            "type": "utcdatetime",
            "description": "Date and time the code review started"
          },
          "completedAt": {
            "type": "utcdatetime",
            "description": "Date and time the code review was completed"
          },
          "requestedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          },
          "reviewer": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "Submodule1": {
        "type": "object",
        "properties": {
          "submoduleId": {
            "type": "integer",
            "description": "Submodule identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the submodule",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the submodule" },
          "translatedName": {
            "type": "string",
            "description": "Translated name of the submodule. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
          },
          "description": {
            "type": "string",
            "description": "Description of the submodule"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Translated description of the submodule. The language used is specified either in $lang or by user settings. If translated description doesn't exist in desired language, english will be used."
          },
          "isRequiredForSystem": {
            "type": "boolean",
            "description": "True if the submodule is required to run RamBase"
          },
          "isRequiredForModule": {
            "type": "boolean",
            "description": "True if the submodule is required to run the module"
          },
          "module": {
            "type": "object",
            "properties": {
              "moduleId": {
                "type": "integer",
                "description": "Module identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the module" },
              "translatedName": {
                "type": "string",
                "description": "Translated name of the module. The language used is specified either in $lang or by user settings. If translated name doesn't exist in desired language, english will be used."
              },
              "description": {
                "type": "string",
                "description": "Descrtiption of the module"
              },
              "translatedDescription": {
                "type": "string",
                "description": "Translated description of the module. The language used is specified either in $lang or by user settings. If translated description doesn't exist in desired language, english will be used."
              },
              "moduleLink": {
                "type": "string",
                "description": "Module reference"
              }
            }
          },
          "submoduleLink": {
            "type": "string",
            "description": "Submodule reference"
          }
        }
      },
      "TestOutputDesign": {
        "type": "object",
        "properties": {
          "outputDesignId": {
            "type": "integer",
            "description": "Test output design identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the test output design"
          },
          "outputDesignLink": {
            "type": "string",
            "description": "Test output design reference"
          }
        }
      },
      "Employee2": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Last name of employee" },
          "firstName": {
            "type": "string",
            "description": "First name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        }
      },
      "OutputObjectDefinition3": {
        "type": "object",
        "properties": {
          "outputObjectDefinitionId": {
            "type": "integer",
            "description": "Output object definition identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the Output Object"
          },
          "outputObjectDefinitionLink": {
            "type": "string",
            "description": "Output object definition reference"
          }
        }
      },
      "Printer": {
        "type": "object",
        "properties": {
          "printerId": {
            "type": "integer",
            "description": "Identifier of the printer",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the printer" },
          "printConnector": {
            "type": "object",
            "properties": {
              "printConnectorId": {
                "type": "integer",
                "description": "Print connector identifier",
                "format": "int32"
              },
              "printConnectorLink": {
                "type": "string",
                "description": "Reference to the print connector"
              }
            }
          },
          "printerLink": {
            "type": "string",
            "description": "Reference to the printer"
          }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "integer",
            "description": "Identifier of the room",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the room" },
          "roomLink": {
            "type": "string",
            "description": "Reference to the room"
          }
        }
      },
      "RamBaseMenuItem": {
        "type": "object",
        "properties": {
          "ramBaseMenuItemId": {
            "type": "integer",
            "description": "A unique identifier for a RamBase Menu Item",
            "format": "int32"
          },
          "objectStatus": {
            "type": "string",
            "description": "The status of the RamBase Menu Item. The following values will be legal: 1 - Edit state, 4 - Active State, 9 - Discontinued state. For a menu item to show up in a menu it has to be in status 4."
          },
          "title": {
            "type": "string",
            "description": "The title of the RamBase Menu Item. This is the title/text that will be displayed in the menu tree."
          },
          "translatedTitle": {
            "type": "string",
            "description": "This is the same as the title field, except from the title being translated into the current user preffered language. If a translation in that language does not exist, the english title will be returned."
          },
          "url": {
            "type": "string",
            "description": "The URL we will navigate to when clicking a menu item. This can be either a relative or an absolute URL."
          },
          "path": {
            "type": "string",
            "description": "The sub-menu items path"
          },
          "iconName": {
            "type": "string",
            "description": "Each RamBase Menu Item can have an icon associated with it.  If your RamBase Menu Item should have an icon this field must contain the name of an icon that exists in the RamBase icon set."
          },
          "permission": {
            "type": "string",
            "description": "RamBase cotain a Role and Permission concept that can restrict what a user can see and do. To restrict users from accessing a menu item that he shouldn't have access to you can require a named permission by specifing an existing permission in this field."
          },
          "orderIndex": {
            "type": "integer",
            "description": "The order of menu items is controlled by this index field. A lower number will mean a higher rank in the menu. Index 0 will be on the top of the menu.",
            "format": "int32"
          },
          "treeLevel": {
            "type": "integer",
            "description": "The level at which this menu item exist in the tree. Level 0 will mean that it is a root level node.",
            "format": "int32"
          },
          "isVisibleToCurrentUser": {
            "type": "boolean",
            "description": "If a RamBase user doesn't have permission to run an application, that application should not be visible in the menu either. This boolean field will tell you if this menu item should be shown to the end user or not."
          },
          "hasSubmenuItems": {
            "type": "boolean",
            "description": "Indicates if this menu items has any sub menu items connected to it."
          },
          "parentMenuItem": {
            "type": "object",
            "properties": {
              "parentMenuItemId": {
                "type": "integer",
                "description": "A reference to the parent menu item id. Will contain the RamBaseMenuItemId of the parent menu item.",
                "format": "int32"
              },
              "parentMenuLink": {
                "type": "string",
                "description": "An parent object reference. Will link to the parent menu item"
              }
            }
          },
          "rootMenuItem": {
            "type": "object",
            "properties": {
              "rootMenuItemId": {
                "type": "integer",
                "description": "A reference to the root menu item (the root of the tree). Will contain the RamBaseMenuItemId of the RamBase menu item at the root of the tree.",
                "format": "int32"
              },
              "rootMenuLink": {
                "type": "string",
                "description": "A root object reference. Will link to the menu item at the root of the tree."
              }
            }
          },
          "ramBaseMenuItemLink": {
            "type": "string",
            "description": "RamBase Menu Item reference"
          }
        }
      },
      "Report1": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status of the accounts receivable transaction",
                  "format": "int32"
                },
                "source": {
                  "type": "string",
                  "description": "Invoice, credit reference or payment item reference"
                },
                "customerId": {
                  "type": "integer",
                  "description": "Customer identifier",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                },
                "customersReferenceNumber": {
                  "type": "string",
                  "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
                },
                "sellersReferenceNumber": {
                  "type": "string",
                  "description": "Sellers reference number. "
                },
                "date": {
                  "type": "string",
                  "description": "Date the object was issued",
                  "format": "date"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Date the object is due to be paid",
                  "format": "date"
                },
                "dunningLevel": {
                  "type": "integer",
                  "description": "Severity of the dunning letter varies according to the dunning level",
                  "format": "int32"
                },
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "grossAmount": {
                  "type": "number",
                  "description": "Total amount",
                  "format": "double"
                },
                "convertedGrossAmount": {
                  "type": "number",
                  "description": "Amount/{CUR}",
                  "format": "double"
                },
                "balance": {
                  "type": "number",
                  "description": "Balance/{CUR}",
                  "format": "double"
                },
                "inspect": {
                  "type": "object",
                  "properties": {
                    "targetApplication": {
                      "type": "string",
                      "description": "Application reference when inspecting a line in a report."
                    }
                  }
                }
              }
            }
          },
          "columnParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key that is used in description to lookup value from COS. The key is referenced by encapsulating it in curly braces."
                },
                "value": {
                  "type": "string",
                  "description": "The value of the column parameter from COS that will be shown in the column headers referencing the column parameter key."
                }
              }
            }
          }
        }
      },
      "Inspect": {
        "type": "object",
        "properties": {
          "targetApplication": {
            "type": "string",
            "description": "Application reference when inspecting a line in a report."
          }
        }
      },
      "ColumnParameter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key that is used in description to lookup value from COS. The key is referenced by encapsulating it in curly braces."
          },
          "value": {
            "type": "string",
            "description": "The value of the column parameter from COS that will be shown in the column headers referencing the column parameter key."
          }
        }
      },
      "Report2": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status of general ledger posting"
                },
                "gLPostingItem": {
                  "type": "object",
                  "properties": {
                    "generalLedgerPostingItemId": {
                      "type": "integer",
                      "description": "Accounting line identifier of the general ledger posting",
                      "format": "int32"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the general ledger posting"
                    },
                    "generalLedgerPosting": {
                      "type": "object",
                      "properties": {
                        "generalLedgerPostingId": {
                          "type": "integer",
                          "description": "General ledger posting identifier",
                          "format": "int32"
                        },
                        "generalLedgerPostingLink": {
                          "type": "string",
                          "description": "General ledger posting reference"
                        }
                      }
                    },
                    "generalLedgerPostingItemLink": {
                      "type": "string",
                      "description": "Accounting line reference"
                    }
                  },
                  "description": "Accounting line reference"
                },
                "category": {
                  "type": "string",
                  "description": "Category of general ledger posting"
                },
                "type": {
                  "type": "string",
                  "description": "Type of general ledger posting"
                },
                "period": {
                  "type": "integer",
                  "description": "Accounting period",
                  "format": "int32"
                },
                "transactionDate": {
                  "type": "string",
                  "description": "Transaction date of general ledger posting",
                  "format": "date"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date and time of creation",
                  "format": "date-time"
                },
                "gLAccount": {
                  "type": "object",
                  "properties": {
                    "accountNumber": {
                      "type": "string",
                      "description": "The account number of the general ledger account"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of general ledger account"
                    },
                    "generalLedgerAccountLink": {
                      "type": "string",
                      "description": "General ledger account reference"
                    },
                    "gLAccountDescription": {
                      "type": "string",
                      "description": "Description of account"
                    }
                  },
                  "description": "General ledger account reference"
                },
                "vATCodeDefinition": {
                  "type": "object",
                  "properties": {
                    "vATCode": {
                      "type": "string",
                      "description": "Code that determines VAT rules used for VAT calculations."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of VAT Code definition"
                    },
                    "vATPercent": {
                      "type": "number",
                      "description": "Value added tax percent",
                      "format": "double"
                    },
                    "vATCodeDefinitionLink": {
                      "type": "string",
                      "description": "VAT code reference"
                    }
                  },
                  "description": "VAT code reference"
                },
                "department": {
                  "type": "object",
                  "properties": {
                    "departmentId": {
                      "type": "integer",
                      "description": "Department identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of department"
                    },
                    "departmentLink": {
                      "type": "string",
                      "description": "Finance department reference"
                    }
                  },
                  "description": "The department related to the budget account item."
                },
                "project": {
                  "type": "object",
                  "properties": {
                    "financeProjectId": {
                      "type": "integer",
                      "description": "Finance project identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of finance project "
                    },
                    "financeProjectLink": {
                      "type": "string",
                      "description": "Finance project reference"
                    }
                  },
                  "description": "Finance project reference. One of the system/fixed account dimensions."
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "assetId": {
                      "type": "integer",
                      "description": "Asset identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of asset"
                    },
                    "assetLink": {
                      "type": "string",
                      "description": "Asset reference"
                    }
                  },
                  "description": "The asset related to the fixed asset. One of the system/fixed account dimensions."
                },
                "customDimension4": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS4DESCR}"
                },
                "customDimension5": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS5DESCR}"
                },
                "customDimension6": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS6DESCR}"
                },
                "customDimension7": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS7DESCR}"
                },
                "customDimension8": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS8DESCR}"
                },
                "customDimension9": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS9DESCR}"
                },
                "customDimension10": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Description of dimension"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of a dimension value"
                    }
                  },
                  "description": "{CUS10DESCR}"
                },
                "intercompany": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Intercompany database the supplier belongs to."
                    }
                  }
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "locationId": {
                      "type": "integer",
                      "description": "Location identifier",
                      "format": "int32"
                    },
                    "shortName": {
                      "type": "string",
                      "description": "Unique abbreviation/short name of the location"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of warehouse location"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "countryCode": {
                          "type": "string",
                          "description": "Two-character code (ISO 3166) identifying the country."
                        }
                      },
                      "description": "Address of the bank associated with the bank account"
                    },
                    "locationLink": {
                      "type": "string",
                      "description": "Location reference"
                    }
                  },
                  "description": "Location of general ledger posting item."
                },
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "exchangeRate": {
                  "type": "number",
                  "description": "The exchange rate used in convertion",
                  "format": "double"
                },
                "currencyAmount": {
                  "type": "number",
                  "description": "Amount",
                  "format": "double"
                },
                "convertedDebitAmount": {
                  "type": "number",
                  "description": "Debit amount / {SYSCUR}",
                  "format": "double"
                },
                "convertedCreditAmount": {
                  "type": "number",
                  "description": "Credit amount / {SYSCUR}",
                  "format": "double"
                },
                "convertedAmount": {
                  "type": "number",
                  "description": "Amount/{SYSCUR}",
                  "format": "double"
                },
                "inspect": {
                  "type": "object",
                  "properties": {
                    "targetApplication": {
                      "type": "string",
                      "description": "Application reference when inspecting a line in a report."
                    }
                  }
                }
              }
            }
          },
          "aggregated": {
            "type": "object",
            "properties": {
              "currencyAmount": {
                "type": "number",
                "description": "Amount",
                "format": "double"
              },
              "convertedDebitAmount": {
                "type": "number",
                "description": "Debit amount / {SYSCUR}",
                "format": "double"
              },
              "convertedCreditAmount": {
                "type": "number",
                "description": "Credit amount / {SYSCUR}",
                "format": "double"
              },
              "convertedAmount": {
                "type": "number",
                "description": "Amount/{SYSCUR}",
                "format": "double"
              }
            }
          },
          "columnParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key that is used in description to lookup value from COS. The key is referenced by encapsulating it in curly braces."
                },
                "value": {
                  "type": "string",
                  "description": "The value of the column parameter from COS that will be shown in the column headers referencing the column parameter key."
                }
              }
            }
          }
        }
      },
      "Report3": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status code of the the payment item.",
                  "format": "int32"
                },
                "paymentItem": {
                  "type": "object",
                  "properties": {
                    "paymentItemId": {
                      "type": "integer",
                      "description": "Item-/line-number of the payment.",
                      "format": "int32"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "paymentId": {
                          "type": "integer",
                          "description": "Payment identifier",
                          "format": "int32"
                        },
                        "issueDate": {
                          "type": "string",
                          "description": "Date when the document was issued.",
                          "format": "date"
                        },
                        "registrationDate": {
                          "type": "string",
                          "description": "Date of registration",
                          "format": "date"
                        },
                        "accountingPeriod": {
                          "type": "object",
                          "properties": {
                            "accountingPeriodId": {
                              "type": "integer",
                              "description": "Accounting period identifier",
                              "format": "int32"
                            },
                            "period": {
                              "type": "integer",
                              "description": "Accounting period",
                              "format": "int32"
                            },
                            "accountingPeriodLink": {
                              "type": "string",
                              "description": "Accounting period reference"
                            }
                          }
                        },
                        "paymentLink": {
                          "type": "string",
                          "description": "Payment reference"
                        }
                      }
                    },
                    "paymentItemLink": {
                      "type": "string",
                      "description": "Payment item reference"
                    }
                  }
                },
                "bankAccount": {
                  "type": "object",
                  "properties": {
                    "bankAccountId": {
                      "type": "integer",
                      "description": "Bank account identifier",
                      "format": "int32"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "Account number used to identify the bank account"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of bank account"
                    },
                    "bankLink": {
                      "type": "string",
                      "description": "Bank reference"
                    }
                  },
                  "description": "Bank account reference"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "integer",
                      "description": "Customer identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Secondary name of a company or firstname of a person"
                    },
                    "customerLink": {
                      "type": "string",
                      "description": "Customer reference"
                    }
                  }
                },
                "supplier": {
                  "type": "object",
                  "properties": {
                    "supplierId": {
                      "type": "integer",
                      "description": "RamBase supplier identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of supplier (name of company or surname/familyname/lastname of a person)"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Firstname/givenname if the supplier is a person"
                    },
                    "supplierLink": {
                      "type": "string",
                      "description": "Supplier reference"
                    }
                  }
                },
                "employee": {
                  "type": "object",
                  "properties": {
                    "employeeId": {
                      "type": "integer",
                      "description": "Employee identifier",
                      "format": "int32"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of employee"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of employee"
                    },
                    "employeeLink": {
                      "type": "string",
                      "description": "Employee reference"
                    }
                  }
                },
                "postingDate": {
                  "type": "string",
                  "description": "Date when the document was issued.",
                  "format": "date"
                },
                "transactionDate": {
                  "type": "string",
                  "description": "Date of the transaction",
                  "format": "date"
                },
                "period": {
                  "type": "integer",
                  "description": "The accounting period the object belongs to",
                  "format": "int32"
                },
                "currency": {
                  "type": "string",
                  "description": "Payment Currency\r\n"
                },
                "exchangeRate": {
                  "type": "number",
                  "description": "Payment Currency Rate",
                  "format": "double"
                },
                "currencyAmount": {
                  "type": "number",
                  "description": "Total paid amount",
                  "format": "double"
                },
                "inspect": {
                  "type": "object",
                  "properties": {
                    "targetApplication": {
                      "type": "string",
                      "description": "Application reference when inspecting a line in a report."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter used when inspecting a line in a report."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Report4": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status of the accounts receivable transaction"
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "objectId": {
                      "type": "integer",
                      "description": "Identifier of the object",
                      "format": "int32"
                    },
                    "objectType": {
                      "type": "string",
                      "description": "Type of object"
                    },
                    "itemId": {
                      "type": "integer",
                      "description": "Item-number of the object",
                      "format": "int32"
                    },
                    "ramBaseKey": {
                      "type": "string",
                      "description": "Internal RamBase identifier of the object/item"
                    },
                    "objectLink": {
                      "type": "string",
                      "description": "Filter used in the link to the related document."
                    }
                  },
                  "description": "Document reference"
                },
                "period": {
                  "type": "integer",
                  "description": "Accounting period identifier",
                  "format": "int32"
                },
                "issueDate": {
                  "type": "string",
                  "description": "Date when the document was issued.",
                  "format": "date"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "integer",
                      "description": "Customer identifier",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
                    },
                    "customerLink": {
                      "type": "string",
                      "description": "Customer reference"
                    }
                  }
                },
                "currency": {
                  "type": "string",
                  "description": "Three character code following the ISO 4217 standard"
                },
                "convertedTotalAmount": {
                  "type": "number",
                  "description": "The total amount in company currency, including VAT.",
                  "format": "double"
                },
                "inspect": {
                  "type": "object",
                  "properties": {
                    "targetApplication": {
                      "type": "string",
                      "description": "Application reference when inspecting a line in a report."
                    }
                  }
                }
              }
            }
          },
          "aggregated": {
            "type": "object",
            "properties": {
              "convertedTotalAmount": {
                "type": "number",
                "description": "The total amount in company currency, including VAT.",
                "format": "double"
              }
            }
          }
        }
      },
      "CosChange": {
        "type": "object",
        "properties": {
          "cosChangeId": {
            "type": "integer",
            "description": "Repository idendifier for COS change",
            "format": "int32"
          },
          "timeStamp": {
            "type": "string",
            "description": "TimeStamp of the change",
            "format": "date-time"
          },
          "suggestedChangeId": {
            "type": "integer",
            "description": "Suggested change identifier",
            "format": "int32"
          },
          "deniedChangeId": {
            "type": "integer",
            "description": "Denied change identifier",
            "format": "int32"
          },
          "approvedChangeId": {
            "type": "integer",
            "description": "Approved change identifier",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description specified on commit"
          },
          "tag": { "type": "string", "description": "Tag specified on commit" },
          "committedByUsername": {
            "type": "string",
            "description": "Username of the developer that committed the change into the repository"
          },
          "deniedByUsername": {
            "type": "string",
            "description": "Username of the person that denied the change"
          },
          "approvedByUsername": {
            "type": "string",
            "description": "Username of the person that approved the change"
          },
          "cos": {
            "type": "object",
            "properties": {
              "cosNo": {
                "type": "integer",
                "description": "Identifier of the COS",
                "format": "int32"
              },
              "status": {
                "type": "integer",
                "description": "Status of the COS (1-9)",
                "format": "int32"
              },
              "method": {
                "type": "string",
                "description": "Documentation field: Method of the COS"
              },
              "functionName": {
                "type": "string",
                "description": "Function name of the COS"
              },
              "platform": {
                "type": "string",
                "description": "Documentation field: Platform of the COS"
              },
              "application": {
                "type": "string",
                "description": "Documentation field: Application of the COS"
              },
              "script": {
                "type": "string",
                "description": "Documentation field: Script of the COS"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace of COS"
              },
              "description": {
                "type": "string",
                "description": "Documentation field: General description"
              }
            }
          },
          "cof": {
            "type": "object",
            "properties": {
              "cofNo": {
                "type": "string",
                "description": "Identifier of the COF"
              },
              "status": {
                "type": "integer",
                "description": "Status of the COF (1-9)",
                "format": "int32"
              },
              "revision": {
                "type": "integer",
                "description": "Revision of the COF (1-9)",
                "format": "int32"
              },
              "version": {
                "type": "string",
                "description": "The version of the COF"
              },
              "pid": {
                "type": "integer",
                "description": "The creator of the COF",
                "format": "int32"
              },
              "versionReference": {
                "type": "integer",
                "description": "Reference to one or more HLDs that is related to this COF",
                "format": "int32"
              },
              "externalVersionReference": {
                "type": "string",
                "description": "External reference related to this COF"
              },
              "versionDescription": {
                "type": "string",
                "description": "Desription of the changes in this COF since last version"
              }
            }
          }
        }
      },
      "DeniedChange": {
        "type": "object",
        "properties": {
          "deniedChangeId": {
            "type": "integer",
            "description": "Denied change identifier",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Status of denied change object"
          },
          "timeStamp": {
            "type": "string",
            "description": "TimeStamp of the change",
            "format": "date-time"
          },
          "type": {
            "type": "integer",
            "description": "Type of change (COS, COMMON ARCHIVE etc)",
            "format": "int32"
          },
          "tag": { "type": "string", "description": "Tag specified on commit" },
          "deniedByUsername": {
            "type": "string",
            "description": "Username of the person that denied the change"
          },
          "committedByUsername": {
            "type": "string",
            "description": "Username of the developer that committed the change into the repository"
          },
          "description": {
            "type": "string",
            "description": "Description specified on commit"
          },
          "objectKey": {
            "type": "string",
            "description": "Readable key of the object"
          },
          "objectDescription": {
            "type": "string",
            "description": "Readable description of the object"
          },
          "sourceSystem": {
            "type": "integer",
            "description": "Source system identifier",
            "format": "int32"
          },
          "sourceSystemName": {
            "type": "string",
            "description": "Source system name"
          },
          "denialDescription": {
            "type": "string",
            "description": "Description of why the change was denied"
          },
          "response": {
            "type": "string",
            "description": "Response of the denied change (ex. RECOMMITTED)"
          }
        }
      },
      "User4": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "admittanceLevel": {
            "type": "integer",
            "description": "Accumulated admittance level for employee at given date.",
            "format": "int32"
          },
          "priceCategory": {
            "type": "string",
            "description": "How much the duty should weigh in regard to calculation of a users price category (for licence invoicing) . This field is accumulated for the duties a user is assigned, and the sum will define which price category the user should have."
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "RamBaseSystem2": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "type": "integer",
            "description": "RamBase system that the OTP-exception affects",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the rambasesystem."
          }
        }
      },
      "RamBaseSystem3": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "type": "integer",
            "description": "RamBase system identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the rambasesystem."
          },
          "description": {
            "type": "string",
            "description": "Description of the rambasesytem."
          },
          "isTestSystem": {
            "type": "boolean",
            "description": "A boolean that indicates if the system is a test-system."
          }
        }
      },
      "SystemPermission": {
        "type": "object",
        "properties": {
          "systemPermissionId": {
            "type": "integer",
            "description": "Unique identifier for a users system permission",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "A description of the permissions to the rambasesystem",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date when the system permission was created",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "description": "A reason for granting a systempermission to production systems must be given."
          },
          "loginCompany": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Abbreviation/code to identify the company"
              }
            },
            "description": "User main company name in database format"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "All activities are assigned an owner who is responsible for completing/follow up the activity"
          },
          "ramBaseSystem": {
            "type": "object",
            "properties": {
              "ramBaseSystemId": {
                "type": "integer",
                "description": "RamBase system identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The name of the rambasesystem."
              },
              "description": {
                "type": "string",
                "description": "Description of the rambasesytem."
              },
              "isTestSystem": {
                "type": "boolean",
                "description": "A boolean that indicates if the system is a test-system."
              }
            }
          },
          "portal": {
            "type": "object",
            "properties": {
              "contact": {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "integer",
                    "description": "Contact identifier",
                    "format": "int32"
                  },
                  "contactLink": {
                    "type": "string",
                    "description": "Contact reference"
                  }
                }
              },
              "representing": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "ramBaseKey": {
                    "type": "string",
                    "description": "Internal RamBase identifier of the object/item"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  }
                },
                "description": "The customer or supplier represented by the portal user."
              }
            }
          }
        }
      },
      "ObjectReference2": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "objectType": { "type": "string", "description": "Type of object" },
          "objectLink": {
            "type": "string",
            "description": "Identifier of the object"
          },
          "itemId": {
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": { "type": "string", "description": "Type of item" },
          "itemLink": {
            "type": "string",
            "description": "API reference to the item"
          },
          "ramBaseKey": {
            "type": "string",
            "description": "Internal RamBase identifier of the object/item"
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "integer",
            "description": "API resource identifier",
            "format": "int32"
          }
        }
      },
      "Permission3": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "Permission identifier",
            "format": "int32"
          },
          "name": {
            "type": "integer",
            "description": "Name of the permission",
            "format": "int32"
          },
          "permissionLink": {
            "type": "string",
            "description": "Permission reference"
          }
        },
        "description": "Permission to use this application"
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "version": {
            "type": "number",
            "description": "Reference to DAD",
            "format": "int64"
          },
          "gitRepositoryAddress": {
            "type": "string",
            "description": "Address to bitbucket repository"
          },
          "gitCommitId": { "type": "string", "description": "Git reference" }
        }
      },
      "SourceVersion": {
        "type": "object",
        "properties": {
          "cosVersionId": {
            "type": "integer",
            "description": "COS version identifier",
            "format": "int32"
          }
        }
      },
      "BranchProject": {
        "type": "object",
        "properties": {
          "developmentProjectId": {
            "type": "integer",
            "description": "Development project identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the development project"
          }
        }
      },
      "ParentFolder": {
        "type": "object",
        "properties": {
          "deploymentFolderId": {
            "type": "integer",
            "description": "Deployment folder identifier",
            "format": "int32"
          },
          "deploymentFolderLink": {
            "type": "string",
            "description": "Deployment folder reference"
          }
        }
      },
      "Index": {
        "type": "object",
        "properties": {
          "table": {
            "type": "integer",
            "description": "Table index belongs to",
            "format": "int32"
          },
          "indexId": { "type": "string", "description": "Index identifier" },
          "name": { "type": "string", "description": "Index name" },
          "type": { "type": "string", "description": "Index type" },
          "isUnique": { "type": "boolean", "description": "Is index unique" },
          "isPrimaryKey": {
            "type": "boolean",
            "description": "Is index primary key"
          }
        }
      },
      "BackwardCompatibility": {
        "type": "object",
        "properties": {
          "hasBreakingChanges": {
            "type": "boolean",
            "description": "True if version contains breaking changes, meaning that it is not backward compatible. When this occur, a new SQL view will be created and the old version will be deprecated."
          },
          "expirationDate": {
            "type": "string",
            "description": "Date of expiration. When reaching this date, the view will be deleted and cannot be used anymore.",
            "format": "date"
          }
        }
      },
      "ObjectType": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Type of object" },
          "showCustomField": {
            "type": "boolean",
            "description": "True if custom field should show for object type. Note that field still exists in database, but it is hidden."
          }
        }
      },
      "CreatedBy4": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of employee"
          },
          "employeeLink": {
            "type": "string",
            "description": "Employee reference"
          }
        },
        "description": "The user id of the person how created the version of the output design"
      },
      "LegacyDesigns": {
        "type": "object",
        "properties": {
          "layoutId": {
            "type": "integer",
            "description": "The identifier of the legacy layout",
            "format": "int32"
          },
          "logoId": {
            "type": "integer",
            "description": "The identifier of the logo used in the legacy layout",
            "format": "int32"
          },
          "dateFormatId": {
            "type": "integer",
            "description": "The identifier of the date formats used in the legacy layout",
            "format": "int32"
          },
          "barcodeId": {
            "type": "integer",
            "description": "The identifier of the barcodes used in the legacy layout",
            "format": "int32"
          }
        }
      },
      "DataSource": {
        "type": "object",
        "properties": {
          "dataSourceId": {
            "type": "integer",
            "description": "Data source identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the data source"
          },
          "dataSourceLink": {
            "type": "string",
            "description": "Data source reference"
          }
        }
      },
      "AdditionalTexts": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the additional text. Three character code following the ISO 639-2 standard."
          },
          "text": {
            "type": "string",
            "description": "Addition text of the output"
          }
        }
      },
      "Exception": {
        "type": "object",
        "properties": {
          "exceptionId": {
            "type": "integer",
            "description": "Print configuration exception identifier",
            "format": "int32"
          },
          "company": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "integer",
                "description": "Company identifier",
                "format": "int32"
              },
              "name": { "type": "string", "description": "Name of company" },
              "database": {
                "type": "string",
                "description": "Abbreviation/code to identify the company"
              },
              "companyLink": {
                "type": "string",
                "description": "Company reference"
              }
            }
          },
          "outputObjectDefinition": {
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the Output Object"
              },
              "outputObjectDefinitionLink": {
                "type": "string",
                "description": "Output object definition reference"
              }
            }
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the output design"
              },
              "outputDesignLink": {
                "type": "string",
                "description": "Output design reference"
              }
            }
          },
          "redirectTo": {
            "type": "object",
            "properties": {
              "printerId": {
                "type": "integer",
                "description": "Identifier of the printer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the printer"
              },
              "printConnector": {
                "type": "object",
                "properties": {
                  "printConnectorId": {
                    "type": "integer",
                    "description": "Print connector identifier",
                    "format": "int32"
                  },
                  "printConnectorLink": {
                    "type": "string",
                    "description": "Reference to the print connector"
                  }
                }
              },
              "printerLink": {
                "type": "string",
                "description": "Reference to the printer"
              }
            }
          }
        }
      },
      "ColumnDefinition": {
        "type": "object",
        "properties": {
          "columnDefinitionId": {
            "type": "integer",
            "description": "Report Definition column line identifier\r\n",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "isDefaultHidden": {
            "type": "boolean",
            "description": "True if column should not show in report"
          },
          "isAggregatedColumn": {
            "type": "boolean",
            "description": "True if column should be aggregated"
          },
          "aPIFieldName": {
            "type": "string",
            "description": "Reference to field name in API resource\r\n"
          },
          "aPIInspectFieldName": {
            "type": "string",
            "description": "Value used as inspect when user clicks the column value.\r\n"
          },
          "format": {
            "type": "object",
            "properties": {
              "alignment": {
                "type": "string",
                "description": "Alignement of content in column (Left, Right, or Center)"
              },
              "isRedWhenNegative": {
                "type": "boolean",
                "description": "True if negative numbers should be displayed with red colour."
              },
              "numberOfDecimals": {
                "type": "integer",
                "description": "Number of decimals ",
                "format": "int32"
              },
              "cSSClass": {
                "type": "string",
                "description": "CSS formatting when displaying the field\r\n"
              }
            }
          },
          "width": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string",
                "description": "Unit of the width, defining if the width is specified in pixels or percent"
              },
              "value": {
                "type": "integer",
                "description": "Column width in pixels or percent",
                "format": "int32"
              }
            }
          }
        }
      },
      "UserAssignment": {
        "type": "object",
        "properties": {
          "userAssignmentId": {
            "type": "integer",
            "description": "User assignment identifier",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status for the user assignments\r\n",
            "format": "int32"
          },
          "validFrom": {
            "type": "string",
            "description": "Valid from date\r\n",
            "format": "date"
          },
          "validTo": {
            "type": "string",
            "description": "Valid to date\r\n",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "description": "Description of why the user has been assigned to the role"
          },
          "database": {
            "type": "string",
            "description": "Database the user has been assigned the role for"
          },
          "user": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "name": { "type": "string", "description": "Name of the user" },
              "admittanceLevel": {
                "type": "integer",
                "description": "Accumulated admittance level for employee at given date.",
                "format": "int32"
              },
              "priceCategory": {
                "type": "string",
                "description": "How much the duty should weigh in regard to calculation of a users price category (for licence invoicing) . This field is accumulated for the duties a user is assigned, and the sum will define which price category the user should have."
              },
              "userLink": { "type": "string", "description": "User reference" }
            }
          }
        }
      },
      "User5": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "firstname": {
            "type": "string",
            "description": "First name of the user"
          },
          "userLink": { "type": "string", "description": "User reference" }
        }
      },
      "Error1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Full error message/description. The message is generated from the specified ErrorMessage object, expanded with the given parameter(s)."
          },
          "translatedMessage": {
            "type": "string",
            "description": "Full translated error description. The language used is specified either in $lang or by user settings. If error message don't exist in desired language, english will be used."
          },
          "stackTrace": {
            "type": "string",
            "description": "Stack trace for details about the error"
          },
          "errorMessage": {
            "type": "object",
            "properties": {
              "errorMessageId": {
                "type": "integer",
                "description": "Error message identifier",
                "format": "int32"
              },
              "errorMessageLink": {
                "type": "string",
                "description": "Error message reference"
              }
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer",
                  "description": "Error Key",
                  "format": "int32"
                },
                "value": {
                  "type": "string",
                  "description": "Value of the error parameter"
                }
              }
            }
          },
          "innerErrors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Full error message/description. The message is generated from the specified ErrorMessage object, expanded with the given parameter(s)."
                },
                "translatedMessage": {
                  "type": "string",
                  "description": "Full translated error description. The language used is specified either in $lang or by user settings. If error message don't exist in desired language, english will be used."
                },
                "stackTrace": {
                  "type": "string",
                  "description": "Stack trace for details about the error"
                },
                "errorMessage": {
                  "type": "object",
                  "properties": {
                    "errorMessageId": {
                      "type": "integer",
                      "description": "Error message identifier",
                      "format": "int32"
                    },
                    "errorMessageLink": {
                      "type": "string",
                      "description": "Error message reference"
                    }
                  }
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "index": {
                        "type": "integer",
                        "description": "Error Key",
                        "format": "int32"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value of the error parameter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResultValue": {
        "type": "object",
        "properties": {
          "key": { "type": "string", "description": "Key of the result value" },
          "value": {
            "type": "string",
            "description": "Value of the result value"
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "filterGroup": {
            "type": "string",
            "description": "Value or field to compare with"
          },
          "source": { "type": "string", "description": "Source object type " },
          "field": { "type": "string", "description": "Field to compare" },
          "operator": {
            "type": "string",
            "description": "Relationship operator (eq=equal, le=less or equal, lt=less than, ge=greater or equal, gt=greater than)"
          },
          "valueSource": {
            "type": "string",
            "description": "Value source for comparing field values"
          },
          "value": {
            "type": "string",
            "description": "Alternative Code ( A-Z and * )"
          }
        }
      },
      "TextTemplate": {
        "type": "object",
        "properties": {
          "textTemplateId": {
            "type": "integer",
            "description": "Text template identifier",
            "format": "int32"
          },
          "text": { "type": "string", "description": "Text of text template" },
          "textTemplateLink": {
            "type": "string",
            "description": "Text template reference"
          }
        }
      },
      "DomainValue1": {
        "type": "object",
        "properties": {
          "domainValueId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of the DOV",
            "format": "int32"
          },
          "value": { "type": "string", "description": "Value of the DOV" },
          "priority": {
            "type": "integer",
            "description": "Priority of the domainvalue",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          },
          "translatedDescription": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "Contents": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the content. Three character code following the ISO 639-2 standard."
          },
          "subject": {
            "type": "string",
            "description": "Subject of the content"
          },
          "body": { "type": "string", "description": "Body of the content" },
          "filename": {
            "type": "string",
            "description": "Filename for the content"
          }
        }
      },
      "AdditionalText": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the additional text. Three character code following the ISO 639-2 standard."
          },
          "text": {
            "type": "string",
            "description": "Addition text of the output"
          }
        }
      },
      "ArchiveTemplate1": {
        "type": "object",
        "properties": {
          "archiveTemplateId": {
            "type": "integer",
            "description": "Archive template identifier",
            "format": "int32"
          }
        }
      },
      "Placement": {
        "type": "object",
        "properties": {
          "row": {
            "type": "integer",
            "description": "The placement of a component (widget) in a dashboard.",
            "format": "int32"
          },
          "column": {
            "type": "integer",
            "description": "The placement of a component (widget) in a dashboard.",
            "format": "int32"
          }
        }
      },
      "APIResourceDependency": {
        "type": "object",
        "properties": {
          "aPIResourceDependencyId": {
            "type": "integer",
            "description": "API resource dependency identifier",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time"
          },
          "verb": {
            "type": "string",
            "description": "Verb of the API resource"
          },
          "uri": { "type": "string", "description": "API resource URI" },
          "aPIResource": {
            "type": "object",
            "properties": {
              "aPIResourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Column1": {
        "type": "object",
        "properties": {
          "columnId": {
            "type": "integer",
            "description": "Column identifier",
            "format": "int32"
          },
          "tableSchema": {
            "type": "string",
            "description": "Name of schema that contains the table."
          },
          "tableName": {
            "type": "string",
            "description": "Table name / qualifier"
          },
          "columnName": { "type": "string", "description": "Name of column" },
          "description": {
            "type": "string",
            "description": "Descriptive name of column"
          },
          "dictionary": {
            "type": "object",
            "properties": {
              "field": {
                "type": "object",
                "properties": {
                  "fieldId": {
                    "type": "integer",
                    "description": "Field identifier",
                    "format": "int32"
                  }
                }
              },
              "archiveClass": {
                "type": "object",
                "properties": {
                  "archiveClassId": {
                    "type": "integer",
                    "description": "Archive class identifier",
                    "format": "int32"
                  }
                }
              },
              "archiveTemplate": {
                "type": "object",
                "properties": {
                  "archiveTemplateId": {
                    "type": "integer",
                    "description": "Archive template identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "ResultColumn": {
        "type": "object",
        "properties": {
          "resultColumnId": {
            "type": "integer",
            "description": "Result column identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of result column" },
          "datatype": {
            "type": "string",
            "description": "Datatype of result column"
          },
          "maxLength": {
            "type": "integer",
            "description": "Maximum length (in bytes) of the column. -1 means that column data type is varchar(max), nvarchar(max), varbinary(max), or xml.",
            "format": "int32"
          },
          "descriptionTemplate": {
            "type": "string",
            "description": "Description of the result column"
          }
        }
      },
      "FieldAdmittance": {
        "type": "object",
        "properties": {
          "fieldAdmittanceId": {
            "type": "integer",
            "description": "Field admittance identifier of a privilege on a duty",
            "format": "int32"
          },
          "xPath": {
            "type": "string",
            "description": "XPath of field linked to a permission on a duty"
          }
        }
      },
      "RequiredDomainValue": {
        "type": "object",
        "properties": {
          "requiredDomainValueId": {
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          },
          "value": { "type": "string", "description": "Value of the DOV" },
          "priority": {
            "type": "integer",
            "description": "Priority of the domainvalue",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "Content1": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the content. Three character code following the ISO 639-2 standard."
          },
          "subject": {
            "type": "string",
            "description": "Subject of the content"
          },
          "body": { "type": "string", "description": "Body of the content" },
          "filename": {
            "type": "string",
            "description": "Filename for the content"
          }
        }
      },
      "Widget": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string",
            "description": "A unique id that  will indentify a specific widget on a dashboard"
          },
          "widgetApplicationMatch": {
            "type": "string",
            "description": "The lookup name of the widget/application"
          },
          "placement": {
            "type": "object",
            "properties": {
              "row": {
                "type": "integer",
                "description": "The placement of a component (widget) in a dashboard.",
                "format": "int32"
              },
              "column": {
                "type": "integer",
                "description": "The placement of a component (widget) in a dashboard.",
                "format": "int32"
              }
            }
          },
          "serializedSettingsObject": {
            "type": "string",
            "description": "A widget can have different settings. These settings are stored here as a json serialized string"
          }
        }
      },
      "Parameter3": {
        "type": "object",
        "properties": {
          "key": { "type": "string", "description": "Event Parameter Key" },
          "value": { "type": "string", "description": "Event Parameter Value" }
        }
      },
      "ObjectReference3": {
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        },
        "description": "Reference to the contact/supplier/employee/customer who sent the email"
      },
      "FileType2": {
        "required": ["fileTypeId"],
        "type": "object",
        "properties": {
          "fileTypeId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Reference to the file type this requirement will be fulfilled by.",
            "format": "int32"
          }
        }
      },
      "ResponsibleRole1": {
        "type": "object",
        "properties": {
          "roleId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Role identifier",
            "format": "int32"
          }
        },
        "description": "Role (department etc.) responsible for a task"
      },
      "AssignedTo2": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "The userId of the person this task is assigned to (responsible for doing the work)"
      },
      "Object8": {
        "required": ["objectId", "objectType"],
        "type": "object",
        "properties": {
          "database": {
            "pattern": "",
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          },
          "itemId": {
            "pattern": "",
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          },
          "itemType": {
            "pattern": "",
            "type": "string",
            "description": "Type of item"
          }
        }
      },
      "Recipient2": {
        "required": ["emailAddress"],
        "type": "object",
        "properties": {
          "emailAddress": {
            "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
            "type": "string",
            "description": "Email address of the recipient"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Used for specifing whether recipient was main receiver, recipients importance, level of involvment etc."
          },
          "objectReference": {
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "Reference to the contact/supplier/employee/customer who sent the email"
          }
        }
      },
      "Translation9": {
        "required": ["language", "name"],
        "type": "object",
        "properties": {
          "language": {
            "pattern": "",
            "type": "string",
            "description": "Language of the translation"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Translation of the name"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Translation of the description"
          }
        }
      },
      "FilePermission1": {
        "type": "object",
        "properties": {
          "entity": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canRead": {
            "pattern": "",
            "type": "boolean",
            "description": "Permission to view the contents of a file. This permission does not inhibit accessibility to see metadata for a file, such as filename, searchtags etc."
          },
          "canWrite": {
            "pattern": "",
            "type": "boolean",
            "description": "Permission to make a new version of a file. This permission deos not inhibit a user from updating a files metadata such as filename and searhtags etc"
          },
          "canDetach": {
            "pattern": "",
            "type": "boolean",
            "description": "Permission to detach a file from its RamBase Object."
          }
        }
      },
      "TriggerRestrictions": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            },
            "description": "References ART for creating RQMs (requirements) in a production structure"
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of production operation"
              },
              "productionOperationLink": {
                "type": "string",
                "description": "Production operation reference"
              }
            },
            "description": "Operation id that will create a requirement for this file type"
          },
          "productionResource": {
            "type": "object",
            "properties": {
              "productionResourceId": {
                "type": "integer",
                "description": "Production resource identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of  production resource"
              },
              "productionResourceLink": {
                "type": "string",
                "description": "Production resource reference"
              }
            }
          }
        }
      },
      "StopEvent1": {
        "type": "object",
        "properties": {
          "eventTypeId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "RamBase event type identifier",
            "format": "int32"
          }
        },
        "description": "Optional event type which requires file requirement to be met (ProductionOperationCompleted, ProductActivated). DOV"
      },
      "Tag2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Setting definition tag. String reference to value of a domain value."
          }
        }
      },
      "Entity2": {
        "required": ["objectId", "objectType"],
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        },
        "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
      },
      "Company3": {
        "required": ["database"],
        "type": "object",
        "properties": {
          "database": {
            "pattern": "",
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          }
        }
      },
      "ObjectReference4": {
        "type": "object",
        "properties": {
          "object": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              },
              "itemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              },
              "itemType": {
                "pattern": "",
                "type": "string",
                "description": "Type of item"
              }
            }
          }
        }
      },
      "Validity6": {
        "required": ["effectivePeriod"],
        "type": "object",
        "properties": {
          "effectivePeriod": {
            "maximum": 299912,
            "minimum": 199000,
            "pattern": "",
            "type": "integer",
            "description": "Period the budget is valid from",
            "format": "int32"
          }
        }
      },
      "SubModule2": {
        "required": ["subModuleId"],
        "type": "object",
        "properties": {
          "subModuleId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Submodule identifier",
            "format": "int32"
          }
        }
      },
      "Responsible3": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        }
      },
      "Totals30": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "amount": {
            "type": "number",
            "description": "Represents the item amount before any discounts etc. is applied.",
            "format": "double"
          }
        }
      },
      "Parent": {
        "type": "object",
        "properties": {
          "aPIDocumentationTreeNodeId": {
            "type": "integer",
            "description": "The identifier of the tree node.",
            "format": "int32"
          }
        },
        "description": "Identifier of the node that this node will be placed under"
      },
      "Field1": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of field" }
        }
      },
      "ParentFolder1": {
        "type": "object",
        "properties": {
          "projectFolderId": {
            "type": "integer",
            "description": "Project folder identifier",
            "format": "int32"
          }
        }
      },
      "User6": {
        "required": ["userId"],
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          }
        }
      },
      "WorkplaceConditions": {
        "type": "object",
        "properties": {
          "causedByWorkplace": {
            "type": "string",
            "description": "Caused by conditions at the work place"
          },
          "possibleProblems": {
            "type": "string",
            "description": "Description of workplace conditions that might have caused this self certification. Required if it is caused by workplace ."
          },
          "suggestedMeasures": {
            "type": "string",
            "description": "Description of possible measures at your workplace to prevent future sick leaves. Remedies, organization, work tasks, working hours and so on. Required if sick leave is caused by workplace."
          },
          "actions": {
            "type": "string",
            "description": "Filled out when absence is caused by workplace. Explains what actions the employer has done to improve conditions."
          }
        }
      },
      "SickChild": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of child. Required if the self-certified sick leave is related to your child."
          },
          "birthDate": {
            "type": "string",
            "description": "Birth year of child. Required if the self-certified sick leave is related to your child.",
            "format": "date"
          }
        },
        "description": "If the self-certified sick leave is related to your child, name and birth year of ill child is required. This is because you are only allowed to self-certify sick leave if the child is less than 12 years old  "
      },
      "TimeType3": {
        "required": ["timeTypeId"],
        "type": "object",
        "properties": {
          "timeTypeId": {
            "pattern": "",
            "type": "integer",
            "description": "Time type identifier",
            "format": "int32"
          }
        }
      },
      "Employee3": {
        "required": ["employeeId"],
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "The employee who aquired the certificate"
      },
      "Institution": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the institution for the education"
          },
          "city": { "type": "string", "description": "City for the education" }
        }
      },
      "TransportManagementSystem1": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "string",
            "description": "Carrier id in the external Transport Management System"
          }
        }
      },
      "Location6": {
        "type": "object",
        "properties": {
          "locationId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          }
        },
        "description": "Location of general ledger posting item."
      },
      "Carrier1": {
        "required": ["carrierId"],
        "type": "object",
        "properties": {
          "carrierId": {
            "minimum": 1000,
            "pattern": "",
            "type": "integer",
            "description": "Carrier identifier",
            "format": "int32"
          }
        }
      },
      "Product24": {
        "required": ["productId"],
        "type": "object",
        "properties": {
          "productId": {
            "pattern": "",
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          }
        }
      },
      "NotificationType3": {
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "pattern": "",
            "type": "string",
            "description": "Notification type identifier"
          }
        }
      },
      "Notification4": {
        "type": "object",
        "properties": {
          "regardingItem": {
            "type": "object",
            "properties": {
              "itemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-number of the object",
                "format": "int32"
              }
            }
          },
          "messageParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key of the message parameter. Found in the message of the notification definition."
                },
                "value": {
                  "type": "string",
                  "description": "The value that replaces the key in the message of the notification definition."
                }
              }
            },
            "description": "Parameters used when expanding the message."
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "pattern": "",
                "type": "string",
                "description": "Notification type identifier"
              }
            }
          }
        }
      },
      "Country1": {
        "required": ["countryCode"],
        "type": "object",
        "properties": {
          "countryCode": {
            "pattern": "",
            "type": "string",
            "description": "Country code of the company"
          }
        }
      },
      "DepartureTime": {
        "type": "object",
        "properties": {
          "departureTimeId": {
            "type": "integer",
            "description": "WBO close time identifier",
            "format": "int32"
          },
          "time": { "type": "time", "description": "WBO close time" }
        }
      },
      "Notification5": {
        "type": "object",
        "properties": {
          "messageParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key of the message parameter. Found in the message of the notification definition."
                },
                "value": {
                  "type": "string",
                  "description": "The value that replaces the key in the message of the notification definition."
                }
              }
            },
            "description": "Parameters used when expanding the message."
          },
          "notificationType": {
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "pattern": "",
                "type": "string",
                "description": "Notification type identifier"
              }
            }
          }
        }
      },
      "Supplier10": {
        "required": ["supplierId"],
        "type": "object",
        "properties": {
          "supplierId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "RamBase supplier identifier",
            "format": "int32"
          }
        }
      },
      "BuyersContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the RamBase contact (legal entity or person)"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the RamBase contact"
          },
          "email": {
            "type": "string",
            "description": "E-mail of the RamBase contact"
          }
        }
      },
      "Payment6": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "description": "The due date of the imported supplier invoice",
            "format": "date"
          },
          "accountName": {
            "type": "string",
            "description": "The bank account name to the payment receiver"
          },
          "accountNumber": {
            "type": "string",
            "description": "The bank account number to the payment receiver"
          },
          "iBAN": {
            "type": "string",
            "description": "The international bank account number (IBAN) to the payment receiver"
          },
          "sWIFTCode": {
            "type": "string",
            "description": "The bank identification code (BIC) to the account to the payment receiver"
          },
          "suppliersReference": {
            "type": "string",
            "description": "The reference to the payment receiver"
          }
        }
      },
      "Contact2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the suppliers contact (legal entity or person)"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the suppliers contact"
          },
          "email": {
            "type": "string",
            "description": "E-mail of the suppliers contact"
          }
        }
      },
      "ShipFrom1": {
        "type": "object",
        "properties": {
          "addressId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          }
        }
      },
      "ShippingService2": {
        "required": ["shippingServiceId"],
        "type": "object",
        "properties": {
          "shippingServiceId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Shipping service identifier",
            "format": "int32"
          }
        }
      },
      "Procurement3": {
        "type": "object",
        "properties": {
          "vATHandling": {
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          },
          "confirmedDeliveryDateBuffer": {
            "type": "integer",
            "description": "If the confirmed delivery date is unreliable, you can specify a buffer in days to be added.\r\n\r\nThis buffer will be used when the requested delivery date for purchase orders is calculated. \r\nThis buffer will also be added to the confirmed delivery date when creating purchase order responses.",
            "format": "int32"
          }
        }
      },
      "Payment7": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "type": "string",
            "description": "Terms of payment. Defaut value is retrieved from the customer. The due date of the sales order and sales invoice is calculated based on this field."
          },
          "paymentMethod": {
            "type": "string",
            "description": "Method of payment. Default value is retrieved from the customer. "
          }
        }
      },
      "Product25": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of product" },
          "suppliersIdentification": {
            "type": "string",
            "description": "An identifier or name, assigned by the supplier, for the product"
          },
          "buyersIdentification": {
            "type": "string",
            "description": "An identifier or name, assigned by the buyer, for the product"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "productReference": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "integer",
                "description": "RamBase product identificator",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the product"
              },
              "productLink": {
                "type": "string",
                "description": "Product reference"
              }
            }
          }
        }
      },
      "Price10": {
        "required": ["netPrice"],
        "type": "object",
        "properties": {
          "netPrice": {
            "pattern": "",
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          }
        }
      },
      "Price11": {
        "type": "object",
        "properties": {
          "netPrice": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Final price per unit after deducting all discounts etc.",
            "format": "double"
          },
          "freight": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Freight  pr unit. Is a part of landed cost for the received product.",
            "format": "double"
          },
          "freightPercent": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Freight in percent of net price. Used for including freight cost in the gross margin calculation in sales orders, sales invoices etc. ",
            "format": "double"
          }
        }
      },
      "Accounting6": {
        "type": "object",
        "properties": {
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              }
            }
          }
        },
        "description": "Accounting details for the item, including fixed/system dimensions. For all dimensions, see seperate resource. "
      },
      "ManufacturersProduct1": {
        "type": "object",
        "properties": {
          "manufacturersProductId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Manufacturer product identifier",
            "format": "int32"
          }
        }
      },
      "Contact3": {
        "type": "object",
        "properties": {
          "contactId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Contact identifier",
            "format": "int32"
          }
        },
        "description": "Link to the suppliers contact person"
      },
      "ApplicableInvoice1": {
        "type": "object",
        "properties": {
          "supplierInvoiceItem": {
            "required": ["supplierInvoiceItemId"],
            "type": "object",
            "properties": {
              "supplierInvoiceItemId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Item-/linenumber of supplier invoice",
                "format": "int32"
              },
              "supplierInvoice": {
                "required": ["supplierInvoiceId"],
                "type": "object",
                "properties": {
                  "supplierInvoiceId": {
                    "minimum": 100000,
                    "pattern": "",
                    "type": "integer",
                    "description": "Supplier invoice identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "File4": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File identifier",
            "format": "int32"
          }
        }
      },
      "MinimumSalesPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "netPrice": {
            "type": "number",
            "description": "Minimum sales price for product",
            "format": "double"
          }
        }
      },
      "Procurement4": {
        "type": "object",
        "properties": {
          "expectedLeadTime": {
            "type": "integer",
            "description": "The expected lead time, in number of days, from ordering from supplier to delivery. Used in different purchase processes, typically when supplier is unknown. Note that this might differ from the standard lead times defined on the different suppliers. ",
            "format": "int32"
          },
          "autoGenerateSerialNumbersForPurchaseOrders": {
            "type": "boolean",
            "description": "Serial numbers can be added to all newly created purchase order items. The serial number is specified in the company setting ProductionSerialNumberCounter, which will increase afterwards. If the company setting AutoProductionSerialNumberPrefix is specified, the serial number will be prefixed by this value."
          }
        }
      },
      "Cost2": {
        "type": "object",
        "properties": {
          "valueType": {
            "type": "string",
            "description": "Type of additional production cost value. Select AMOUNT for the fixed value or PERCENT for the percentage based value."
          },
          "value": {
            "type": "string",
            "description": "Additional production cost value"
          }
        }
      },
      "ExclusivelyFor2": {
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        }
      },
      "Changeover2": {
        "type": "object",
        "properties": {
          "setUpTime": {
            "type": "number",
            "description": "Planned setup time in hours for the production operation",
            "format": "double"
          },
          "cleanUpTime": {
            "type": "number",
            "description": "Planned cleanup time in hours for the production operation",
            "format": "double"
          }
        }
      },
      "ServiceInterval": {
        "type": "object",
        "properties": {
          "serviceIntervalId": {
            "type": "integer",
            "description": "Service interval identifier",
            "format": "int32"
          }
        },
        "description": "Service template of the product. This template will be used when performing service for this product."
      },
      "ProductionResourceGroup1": {
        "type": "object",
        "properties": {
          "productionResourceGroupId": {
            "type": "integer",
            "description": "Production resource group identifier",
            "format": "int32"
          }
        }
      },
      "TaskProcessTemplate2": {
        "type": "object",
        "properties": {
          "taskProcessTemplateId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Unique identifier for task process template",
            "format": "int32"
          }
        },
        "description": "refers to the process template this task template belongs to"
      },
      "RetriggerSettings": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "description": "Degree of details. State if the task should be triggered based on only product id or in addition one or more varaiables.",
            "format": "int32"
          },
          "intervalDays": {
            "type": "integer",
            "description": "Number of days since last production before the task process will be re triggered based on the degree of details.\r\nIf never triggerd before it will do it the first time production runs.",
            "format": "int32"
          },
          "checkQualityIssues": {
            "type": "boolean",
            "description": "Check for quality issues. If quality issue since last time trigger, re trigger\r\n"
          }
        }
      },
      "ProductionResource2": {
        "type": "object",
        "properties": {
          "productionResourceId": {
            "type": "integer",
            "description": "Production resource identifier",
            "format": "int32"
          }
        }
      },
      "ManufacturingArea1": {
        "type": "object",
        "properties": {
          "manufacturingAreaId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Manufacturing area identifier",
            "format": "int32"
          }
        }
      },
      "Customer9": {
        "required": ["customerId"],
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          }
        },
        "description": "The customer the bid is placed for"
      },
      "ExpectedWastage": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Quantity wasted",
            "format": "double"
          },
          "percent": {
            "type": "number",
            "description": "Standard percentage of wastage for product when used in a production work order in this location",
            "format": "double"
          }
        }
      },
      "Manufacturer5": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "minimum": 1000,
            "pattern": "",
            "type": "integer",
            "description": "Manufacturer identifier",
            "format": "int32"
          }
        },
        "description": "Manufacturer of the product"
      },
      "NotificationType4": {
        "required": ["notificationTypeId"],
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "The different levels of approval types a file will undergo to be fully approved, eg: Internal, external, document controller",
            "format": "int32"
          }
        }
      },
      "PurchaseConversion": {
        "type": "object",
        "properties": {
          "conversionFactor": {
            "type": "number",
            "description": "The factor to use when converting from the suppliers measurement unit to the products measurement unit. The purchase price is the suppliers price multiplied with the conversion factor.",
            "format": "double"
          },
          "suppliersPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "netPrice": {
                "type": "number",
                "description": "The suppliers sales price in suppliers measurement unit",
                "format": "double"
              }
            }
          },
          "suppliersUnit": {
            "type": "object",
            "properties": {
              "measurementUnitId": {
                "type": "integer",
                "description": "Measurement unit identifier",
                "format": "int32"
              },
              "unit": {
                "type": "string",
                "description": "Measurement unit (ex. mm, km, dl, kg)"
              },
              "measurementUnitLink": {
                "type": "string",
                "description": "Material unit reference"
              }
            }
          }
        },
        "description": "In RamBase, the products measurement unit defines both the purchase unit and the consumption / sales unit is. In other words, these units are always the same. In some cases suppliers might sell the product in other measurement units than the products measurement unit. By providing the suppliers price and the suppliers measurement unit together with a conversion factor, RamBase can convert the purcahse price."
      },
      "StockLocation2": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "pattern": "",
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          }
        }
      },
      "PriceList2": {
        "type": "object",
        "properties": {
          "priceListId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Price list identifier",
            "format": "int32"
          }
        }
      },
      "ProductUnit4": {
        "required": ["productUnitId"],
        "type": "object",
        "properties": {
          "productUnitId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Product unit identifier",
            "format": "int32"
          }
        }
      },
      "Department2": {
        "type": "object",
        "properties": {
          "departmentId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Department identifier",
            "format": "int32"
          }
        },
        "description": "The department related to the budget account item."
      },
      "Actions": {
        "type": "object",
        "properties": {
          "suggested": {
            "type": "string",
            "description": "String list of suggested actions"
          },
          "immediate": {
            "type": "string",
            "description": "String list of immediate actions."
          },
          "corrective": {
            "type": "string",
            "description": "String list of corrective actions"
          }
        }
      },
      "ProductionWorkOrder2": {
        "type": "object",
        "properties": {
          "productionWorkOrderId": {
            "type": "integer",
            "description": "Production work order identifier",
            "format": "int32"
          }
        }
      },
      "ConsequenceArea1": {
        "required": ["consequenceAreaId"],
        "type": "object",
        "properties": {
          "consequenceAreaId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Quality consequence identifier",
            "format": "int32"
          }
        }
      },
      "ConsequenceSeverity1": {
        "required": ["qualitySeverityId"],
        "type": "object",
        "properties": {
          "qualitySeverityId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Identifier for a consequence severity",
            "format": "int32"
          }
        }
      },
      "StandardRequirement2": {
        "required": ["standardRequirementId"],
        "type": "object",
        "properties": {
          "standardRequirementId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the domain value",
            "format": "int32"
          }
        }
      },
      "Task2": {
        "required": ["taskId"],
        "type": "object",
        "properties": {
          "taskId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Unique task identifier",
            "format": "int32"
          }
        }
      },
      "QualityIssue1": {
        "required": ["qualityIssueId"],
        "type": "object",
        "properties": {
          "qualityIssueId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "QHSES issue identifier",
            "format": "int32"
          }
        }
      },
      "Translation10": {
        "required": ["language"],
        "type": "object",
        "properties": {
          "language": {
            "pattern": "",
            "type": "string",
            "description": "Language of this translation"
          },
          "label": {
            "pattern": "",
            "type": "string",
            "description": "Translated label"
          }
        }
      },
      "Validity7": {
        "type": "object",
        "properties": {
          "effectiveDate": {
            "pattern": "",
            "type": "string",
            "description": "The start of the purchase contract",
            "format": "date"
          },
          "expirationDate": {
            "pattern": "",
            "type": "string",
            "description": "The end of the purchase contract",
            "format": "date"
          },
          "isTerminable": {
            "pattern": "",
            "type": "boolean",
            "description": "Specifies if the contract is terminable not not"
          },
          "terminationNoticePeriod": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The length in days of the termination period. This will not have a meaning if the contract in non-terminable",
            "format": "int32"
          },
          "renewalDueDays": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The minimum number of days before EndDate where the contract can be either cancelled (if set to automatically renew) or renewed (if set to be renewed by consent)",
            "format": "int32"
          }
        }
      },
      "MainResponsible1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "The link to the main responsible employee. This is also the main contact point for the contract from the suppliers point of view"
      },
      "BackupResponsible1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "Link to the PID responsible if the main responsible is not available"
      },
      "SpecialHandling1": {
        "type": "object",
        "properties": {
          "specialHandlingId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Special handling identifier",
            "format": "int32"
          }
        },
        "description": "Special handling for departing shipments (to this supplier)"
      },
      "FinanceProject2": {
        "type": "object",
        "properties": {
          "financeProjectId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Finance project identifier",
            "format": "int32"
          }
        },
        "description": "The project related to the budget account item."
      },
      "Assignee2": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          }
        },
        "description": "User id of assignee. Indicates the next action user id."
      },
      "Owner4": {
        "required": ["employeeId"],
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        }
      },
      "Assignee3": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        }
      },
      "ShippingAddress3": {
        "type": "object",
        "properties": {
          "addressId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          }
        }
      },
      "NotificationRule2": {
        "required": [
          "notificationType",
          "daysBeforeExpirationDate",
          "notifyBy"
        ],
        "type": "object",
        "properties": {
          "notificationType": {
            "pattern": "",
            "type": "integer",
            "description": "The type of notification to be given.\r\nLink to a domain value (DOV).\r\nExamples: Renewval, Review and Expired",
            "format": "int32"
          },
          "daysBeforeExpirationDate": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of days to notify before the event. Used to calculate the value NotifyDate",
            "format": "int32"
          },
          "notifyBy": {
            "pattern": "",
            "type": "integer",
            "description": "How the notification should be sent stored as a domain link (DOV).\r\nExamples: Email or Task",
            "format": "int32"
          },
          "notifyEmployee": {
            "required": ["employeeId"],
            "type": "object",
            "properties": {
              "employeeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              }
            },
            "description": "Link to the person who should be notified"
          }
        }
      },
      "OutputCondition2": {
        "required": ["outputBy"],
        "type": "object",
        "properties": {
          "outputBy": {
            "pattern": "",
            "type": "string",
            "description": "Output type"
          },
          "isMandatory": {
            "pattern": "",
            "type": "boolean",
            "description": "True if output is mandatory, and cannot be removed from the output object"
          },
          "numberOfCopies": {
            "maximum": 99,
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of copies to output",
            "format": "int32"
          },
          "outputObjectDefinition": {
            "required": ["outputObjectDefinitionId"],
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              }
            }
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              }
            }
          },
          "recipient": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "object",
                "properties": {
                  "objectType": {
                    "pattern": "",
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "itemId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Item-number of the object",
                    "format": "int32"
                  },
                  "itemType": {
                    "pattern": "",
                    "type": "string",
                    "description": "Type of item"
                  }
                }
              }
            },
            "description": "The destination of the output"
          }
        }
      },
      "SalesOrder1": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          }
        }
      },
      "Price12": {
        "type": "object",
        "properties": {
          "grossPrice": {
            "pattern": "",
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          },
          "discount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The discount for the item.",
            "format": "double"
          }
        }
      },
      "Seller1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "Reference to the seller of the item"
      },
      "LandedCost3": {
        "type": "object",
        "properties": {
          "purchaseCurrency": {
            "pattern": "",
            "type": "string",
            "description": "Purchase currency is the currency this product normally is purchased in. This is also the base currency used in the gross margin calculation. By default the purchase currency is retrieved from the product."
          },
          "purchaseExchangeRate": {
            "pattern": "",
            "type": "number",
            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
            "format": "double"
          },
          "derivedFrom": {
            "type": "object",
            "properties": {
              "purchaseQuoteItemId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Purchase quote item identifier",
                "format": "int32"
              },
              "purchaseQuote": {
                "type": "object",
                "properties": {
                  "purchaseQuoteId": {
                    "minimum": 100000,
                    "pattern": "",
                    "type": "integer",
                    "description": "Purchase quote identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "RecurringInvoicing": {
        "type": "object",
        "properties": {
          "priceChangeAgreement": {
            "type": "integer",
            "description": "Defines if and how the recurring price can be updated",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of subscription or rental item",
            "format": "date"
          },
          "estimatedEndDate": {
            "type": "string",
            "description": "Expected end date of subscription or rental item",
            "format": "date"
          },
          "recurringPrice": {
            "type": "object",
            "properties": {
              "recurringPriceId": {
                "type": "integer",
                "description": "Recurring price indentifier",
                "format": "int32"
              },
              "recurringPriceLink": {
                "type": "string",
                "description": "Recurring price reference"
              }
            }
          }
        }
      },
      "ProjectOrderItem5": {
        "type": "object",
        "properties": {
          "projectOrderItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Project order item identifier",
            "format": "int32"
          }
        }
      },
      "Price13": {
        "type": "object",
        "properties": {
          "targetPrice": {
            "pattern": "",
            "type": "number",
            "description": "The requested target price for this item",
            "format": "double"
          }
        }
      },
      "EventType": {
        "type": "object",
        "properties": {
          "ramBaseEventTypeId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "RamBase event type identifier",
            "format": "int32"
          }
        }
      },
      "Action1": {
        "type": "object",
        "properties": {
          "automatedFlowActionId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Automated flow action identifier",
            "format": "int32"
          }
        }
      },
      "OutputObjectDefinition4": {
        "required": ["outputObjectDefinitionId"],
        "type": "object",
        "properties": {
          "outputObjectDefinitionId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Output object definition identifier",
            "format": "int32"
          }
        }
      },
      "FieldAPIResource": {
        "type": "object",
        "properties": {
          "verb": {
            "type": "string",
            "description": "Reference to the verb the API resource uses (GET, POST, PUT, DELETE)"
          },
          "url": {
            "type": "string",
            "description": "Reference to API resource that holds the fields that can be restricted for the permission."
          }
        }
      },
      "FilterAPIResource": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Reference to API resource that will be used when building data restrictions on duties."
          }
        }
      },
      "ViewPermission1": {
        "type": "object",
        "properties": {
          "permissionId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Permission identifier. Optional. Set this if the setting is secret, e.g. not visible for customers. NOTE: If the setting is read in an application the user must have this permission if assigned.",
            "format": "int32"
          }
        }
      },
      "UpdatePermission1": {
        "type": "object",
        "properties": {
          "permissionId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Permission identifier. Required for active settings. User must have this permission to be allowed to update the value of this setting.",
            "format": "int32"
          }
        }
      },
      "Module2": {
        "required": ["moduleId"],
        "type": "object",
        "properties": {
          "moduleId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Module identifier",
            "format": "int32"
          }
        }
      },
      "ExclusivelyForCompany1": {
        "type": "object",
        "properties": {
          "companyId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          }
        },
        "description": "Company this course belongs to"
      },
      "MessageAuthentication": {
        "type": "object",
        "properties": {
          "secretToken": {
            "type": "string",
            "description": "Secret token used to sign the webhook"
          },
          "hashFunction": {
            "type": "string",
            "description": "Hash function used to generate the signature used to sign the webhook"
          }
        }
      },
      "Permission4": {
        "type": "object",
        "properties": {
          "permissionId": {
            "pattern": "",
            "type": "integer",
            "description": "Permission identifier",
            "format": "int32"
          }
        }
      },
      "ObjectTypeMapping": {
        "type": "object",
        "properties": {
          "archive": {
            "type": "string",
            "description": "Archive that the ObjectType-Mapping represents"
          },
          "objectType": {
            "type": "string",
            "description": "The object type name for the archive"
          },
          "uri": {
            "type": "string",
            "description": "Link structure for an object of this type"
          },
          "identifierDatatype": {
            "type": "string",
            "description": "Datatype of the Identifier. Possible values are: String, Integer, IT"
          },
          "defaultSubName": {
            "type": "string",
            "description": "The default subtype to use if no subtype is specified."
          },
          "resource": {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Publisher1": {
        "type": "object",
        "properties": {
          "publisherId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Publisher identifier",
            "format": "int32"
          }
        }
      },
      "Price14": {
        "type": "object",
        "properties": {
          "grossPrice": {
            "pattern": "",
            "type": "number",
            "description": "Represents the price per unit before any discounting is applied.",
            "format": "double"
          }
        }
      },
      "GoodsReceptionItem2": {
        "required": ["database", "goodsReceptionItemId"],
        "type": "object",
        "properties": {
          "database": {
            "pattern": "",
            "type": "string",
            "description": "Company code/database the object belongs to"
          },
          "goodsReceptionItemId": {
            "pattern": "",
            "type": "integer",
            "description": "Item-/line-number of the goods reception",
            "format": "int32"
          },
          "goodsReception": {
            "required": ["goodsReceptionId"],
            "type": "object",
            "properties": {
              "goodsReceptionId": {
                "pattern": "",
                "type": "integer",
                "description": "Goods reception identifier",
                "format": "int32"
              }
            }
          }
        },
        "description": "Goods reception reference"
      },
      "Parameters": {
        "type": "object",
        "properties": {
          "pick": {
            "type": "object",
            "properties": {
              "pickId": {
                "pattern": "",
                "type": "integer",
                "description": "Pick identifier for the pick operation",
                "format": "int32"
              },
              "pickOperation": {
                "type": "object",
                "properties": {
                  "pickOperationId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Pick operation identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "PickedGoodsReceptionItem": {
        "type": "object",
        "properties": {
          "goodsReceptionItem": {
            "required": ["database", "goodsReceptionItemId"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "goodsReceptionItemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-/line-number of the goods reception",
                "format": "int32"
              },
              "goodsReception": {
                "required": ["goodsReceptionId"],
                "type": "object",
                "properties": {
                  "goodsReceptionId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Goods reception identifier",
                    "format": "int32"
                  }
                }
              }
            },
            "description": "Goods reception reference"
          }
        }
      },
      "SubstitutedGoodsReceptionItem": {
        "type": "object",
        "properties": {
          "goodsReceptionItem": {
            "required": ["database", "goodsReceptionItemId"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "goodsReceptionItemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-/line-number of the goods reception",
                "format": "int32"
              },
              "goodsReception": {
                "required": ["goodsReceptionId"],
                "type": "object",
                "properties": {
                  "goodsReceptionId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Goods reception identifier",
                    "format": "int32"
                  }
                }
              }
            },
            "description": "Goods reception reference"
          }
        }
      },
      "ProductStructure2": {
        "type": "object",
        "properties": {
          "productStructureId": {
            "type": "integer",
            "description": "Product structure identifier",
            "format": "int32"
          }
        }
      },
      "Pick": {
        "type": "object",
        "properties": {
          "pickId": {
            "pattern": "",
            "type": "integer",
            "description": "Pick identifier for the pick operation",
            "format": "int32"
          },
          "pickOperation": {
            "type": "object",
            "properties": {
              "pickOperationId": {
                "pattern": "",
                "type": "integer",
                "description": "Pick operation identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ProductStructureAssignment1": {
        "type": "object",
        "properties": {
          "productStructureMaterial": {
            "type": "object",
            "properties": {
              "productStructureMaterialId": {
                "pattern": "",
                "type": "integer",
                "description": "Product structure material identifier",
                "format": "int32"
              },
              "productStructure": {
                "type": "object",
                "properties": {
                  "productStructureId": {
                    "type": "integer",
                    "description": "Product structure identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "FromStockLocation1": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          }
        },
        "description": "If FromStockLocationId is given, stock taking will be created for products that are stored within the area of this Id and ToStockLocationId."
      },
      "ToStockLocation1": {
        "type": "object",
        "properties": {
          "stockLocationId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          }
        },
        "description": "If ToStockLocationId is given, stock counting will be created for products that are stored within the area of FromStockLocationId and this Id"
      },
      "GoodsReceptionItem3": {
        "type": "object",
        "properties": {
          "goodsReceptionItemId": {
            "type": "integer",
            "description": "Item-/line-number of the goods reception",
            "format": "int32"
          },
          "goodsReception": {
            "type": "object",
            "properties": {
              "goodsReceptionId": {
                "type": "integer",
                "description": "Goods reception identifier",
                "format": "int32"
              },
              "goodsReceptionLink": {
                "type": "string",
                "description": "Goods reception reference"
              }
            }
          }
        }
      },
      "ProductStructureOperation5": {
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number of the product structure operation. Unique within a product structure.",
            "format": "int32"
          }
        }
      },
      "ProductStructureMaterial": {
        "type": "object",
        "properties": {
          "productStructureMaterialId": {
            "pattern": "",
            "type": "integer",
            "description": "Product structure material identifier",
            "format": "int32"
          },
          "productStructure": {
            "type": "object",
            "properties": {
              "productStructureId": {
                "type": "integer",
                "description": "Product structure identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Parameters1": {
        "type": "object",
        "properties": {
          "assignmentRegisterId": {
            "pattern": "",
            "type": "integer",
            "description": "Assignment register identifier",
            "format": "int32"
          },
          "productStructureOperation": {
            "type": "object",
            "properties": {
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number of the product structure operation. Unique within a product structure.",
                "format": "int32"
              }
            }
          },
          "productStructureMaterial": {
            "type": "object",
            "properties": {
              "productStructureMaterialId": {
                "pattern": "",
                "type": "integer",
                "description": "Product structure material identifier",
                "format": "int32"
              },
              "productStructure": {
                "type": "object",
                "properties": {
                  "productStructureId": {
                    "type": "integer",
                    "description": "Product structure identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "Parameters2": {
        "required": ["quantity", "stockLocationId"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Initial quantity placed in the stock location",
            "format": "double"
          },
          "goodsReceptionItem": {
            "required": ["database", "goodsReceptionItemId"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "goodsReceptionItemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-/line-number of the goods reception",
                "format": "int32"
              },
              "goodsReception": {
                "required": ["goodsReceptionId"],
                "type": "object",
                "properties": {
                  "goodsReceptionId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Goods reception identifier",
                    "format": "int32"
                  }
                }
              }
            },
            "description": "Goods reception reference"
          },
          "stockLocationId": {
            "pattern": "",
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          }
        }
      },
      "Parameters3": {
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Number of units ordered",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters4": {
        "required": ["requestedDeliveryDate"],
        "type": "object",
        "properties": {
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the customer",
            "format": "date"
          }
        }
      },
      "Parameters5": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        }
      },
      "Parameters6": {
        "required": ["salesQuoteId"],
        "type": "object",
        "properties": {
          "salesQuoteId": {
            "pattern": "",
            "type": "integer",
            "description": "Sales quote identifier",
            "format": "int32"
          }
        }
      },
      "Parameters7": {
        "required": ["salesQuoteId", "quantity"],
        "type": "object",
        "properties": {
          "salesQuoteId": {
            "pattern": "",
            "type": "integer",
            "description": "Sales quote identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Number of units quoted",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters8": {
        "type": "object",
        "properties": {
          "assignmentRegisterId": {
            "pattern": "",
            "type": "integer",
            "description": "Assignment register identifier",
            "format": "int32"
          }
        }
      },
      "Parameters9": {
        "required": ["serialNumber"],
        "type": "object",
        "properties": {
          "serialNumber": {
            "pattern": "",
            "type": "string",
            "description": "Serial number"
          },
          "goodsReceptionItem": {
            "required": ["database", "goodsReceptionItemId"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Company code/database the object belongs to"
              },
              "goodsReceptionItemId": {
                "pattern": "",
                "type": "integer",
                "description": "Item-/line-number of the goods reception",
                "format": "int32"
              },
              "goodsReception": {
                "required": ["goodsReceptionId"],
                "type": "object",
                "properties": {
                  "goodsReceptionId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Goods reception identifier",
                    "format": "int32"
                  }
                }
              }
            },
            "description": "Goods reception reference"
          }
        }
      },
      "Parameters10": {
        "required": ["salesOrderId"],
        "type": "object",
        "properties": {
          "salesOrderId": {
            "pattern": "",
            "type": "integer",
            "description": "Sales order identifier",
            "format": "int32"
          }
        }
      },
      "Parameters11": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Number of units quoted",
            "format": "double"
          },
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the customer",
            "format": "date"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters12": {
        "type": "object",
        "properties": {
          "operationSequenceNumber": {
            "pattern": "",
            "type": "integer",
            "description": "Sequence number of the production operation. Controls the sequence of all the operations in the product structre. Products beloning to each operation will have the same operation sequence number.",
            "format": "int32"
          }
        }
      },
      "Parameters13": {
        "type": "object",
        "properties": {
          "productStructureId": {
            "pattern": "",
            "type": "integer",
            "description": "Product structure identifier",
            "format": "int32"
          }
        }
      },
      "Printer1": {
        "required": ["printerId"],
        "type": "object",
        "properties": {
          "printerId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the printer",
            "format": "int32"
          },
          "printConnector": {
            "required": ["printConnectorId"],
            "type": "object",
            "properties": {
              "printConnectorId": {
                "pattern": "",
                "type": "integer",
                "description": "Print connector identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Company4": {
        "required": ["companyId"],
        "type": "object",
        "properties": {
          "companyId": {
            "pattern": "",
            "type": "integer",
            "description": "Company identifier",
            "format": "int32"
          }
        }
      },
      "Parameters14": {
        "required": ["newQuantity"],
        "type": "object",
        "properties": {
          "newQuantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Quantity of the shipping advice item",
            "format": "double"
          }
        }
      },
      "Parameters15": {
        "type": "object",
        "properties": {
          "locationId": {
            "pattern": "",
            "type": "integer",
            "description": "Location identifier",
            "format": "int32"
          }
        }
      },
      "Parameters16": {
        "type": "object",
        "properties": {
          "reason": {
            "pattern": "",
            "type": "string",
            "description": "Optional reason for cancelling the item. Will show in the notification created for the item."
          }
        }
      },
      "Parameters17": {
        "required": ["purchaseOrderId"],
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "pattern": "",
            "type": "integer",
            "description": "Purchase order identifier",
            "format": "int32"
          }
        }
      },
      "Parameters18": {
        "required": ["purchaseQuoteId"],
        "type": "object",
        "properties": {
          "purchaseQuoteId": {
            "pattern": "",
            "type": "integer",
            "description": "Purchase quote identifier",
            "format": "int32"
          }
        }
      },
      "Parameters19": {
        "type": "object",
        "properties": {
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          }
        }
      },
      "Parameters20": {
        "required": ["purchaseOrderId"],
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "pattern": "",
            "type": "integer",
            "description": "Purchase order identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of the purchase quote",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "price": {
            "type": "object",
            "properties": {
              "targetPrice": {
                "pattern": "",
                "type": "number",
                "description": "The requested target price for this item",
                "format": "double"
              }
            }
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the buyer/purchaser",
            "format": "date"
          },
          "heatNumber": {
            "pattern": "",
            "type": "string",
            "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
          }
        }
      },
      "Parameters21": {
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of the purchase quote",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "price": {
            "type": "object",
            "properties": {
              "targetPrice": {
                "pattern": "",
                "type": "number",
                "description": "The requested target price for this item",
                "format": "double"
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the buyer/purchaser",
            "format": "date"
          },
          "heatNumber": {
            "pattern": "",
            "type": "string",
            "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
          }
        }
      },
      "Parameters22": {
        "required": ["customerId"],
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          },
          "addressId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Address identifier",
            "format": "int32"
          },
          "currency": {
            "pattern": "^[A-Z]{3}$",
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          }
        }
      },
      "Item2": {
        "required": ["itemId"],
        "type": "object",
        "properties": {
          "itemId": {
            "pattern": "",
            "type": "integer",
            "description": "Item-/line-number of the purchase order",
            "format": "int32"
          }
        }
      },
      "Parameters23": {
        "required": ["goodsReceptionId"],
        "type": "object",
        "properties": {
          "goodsReceptionId": {
            "pattern": "",
            "type": "integer",
            "description": "Goods reception identifier",
            "format": "int32"
          }
        }
      },
      "Parameters24": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Number of units purchased",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "heatNumber": {
            "pattern": "",
            "type": "string",
            "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
          },
          "productionLot": {
            "pattern": "",
            "type": "string",
            "description": "The production lot refers to the particular production unit of the manufactured item. Identification assigned to a particular quantity/lot/batch."
          },
          "parcels": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of parcels/packages for this reception item. Used for deciding number of labels to print.",
            "format": "int32"
          },
          "materialQuality": {
            "pattern": "",
            "type": "string",
            "description": "Quality of the material. Only used for information."
          },
          "countryOfOriginCode": {
            "pattern": "",
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "productStructureRevision": {
            "pattern": "",
            "type": "string",
            "description": "The requested revision of the product structure"
          },
          "arrivingWaybillId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Arriving waybill identifier",
            "format": "int32"
          },
          "registerGoodsReceptionToStock": {
            "pattern": "",
            "type": "boolean",
            "description": "If set to 1 the goods reception will be registered to stock ( Set to status 3 or 9 ) "
          }
        }
      },
      "Parameters25": {
        "required": ["goodsReceptionId", "quantity"],
        "type": "object",
        "properties": {
          "goodsReceptionId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Goods reception identifier",
            "format": "int32"
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Number of units purchased",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "heatNumber": {
            "pattern": "",
            "type": "string",
            "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
          },
          "productionLot": {
            "pattern": "",
            "type": "string",
            "description": "The production lot refers to the particular production unit of the manufactured item. Identification assigned to a particular quantity/lot/batch."
          },
          "parcels": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of parcels/packages for this reception item. Used for deciding number of labels to print.",
            "format": "int32"
          },
          "materialQuality": {
            "pattern": "",
            "type": "string",
            "description": "Quality of the material. Only used for information."
          },
          "countryOfOriginCode": {
            "pattern": "",
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "productStructureRevision": {
            "pattern": "",
            "type": "string",
            "description": "The requested revision of the product structure"
          }
        }
      },
      "Parameters26": {
        "required": ["purchaseOrderResponseId"],
        "type": "object",
        "properties": {
          "purchaseOrderResponseId": {
            "pattern": "",
            "type": "integer",
            "description": "Purchase order response identifier",
            "format": "int32"
          },
          "causedBy": {
            "pattern": "^(SUPPLIER|US)?$",
            "type": "string",
            "description": "States who has changed the purchase order"
          },
          "confirmedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "Confirmed delivery date",
            "format": "date"
          },
          "items": {
            "type": "array",
            "items": {
              "required": ["itemId"],
              "type": "object",
              "properties": {
                "itemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the purchase order",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters27": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "required": ["itemId"],
              "type": "object",
              "properties": {
                "itemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the purchase order",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters28": {
        "required": ["requestedDeliveryDate"],
        "type": "object",
        "properties": {
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the buyer/purchaser",
            "format": "date"
          },
          "items": {
            "type": "array",
            "items": {
              "required": ["itemId"],
              "type": "object",
              "properties": {
                "itemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the purchase order",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters29": {
        "type": "object",
        "properties": {
          "causedBy": {
            "pattern": "^(SUPPLIER|US)?$",
            "type": "string",
            "description": "States who has changed the purchase order"
          },
          "confirmedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "Confirmed delivery date",
            "format": "date"
          },
          "items": {
            "type": "array",
            "items": {
              "required": ["itemId"],
              "type": "object",
              "properties": {
                "itemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the purchase order",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters30": {
        "required": ["expirationDate"],
        "type": "object",
        "properties": {
          "expirationDate": {
            "pattern": "",
            "type": "string",
            "description": "The agreement will have an expiration date. Note that this date might be different from the validity expiration date of the sales quote. ",
            "format": "date"
          }
        }
      },
      "Parameters31": {
        "required": ["priority"],
        "type": "object",
        "properties": {
          "priority": {
            "pattern": "",
            "type": "integer",
            "description": "Priority of the shipment",
            "format": "int32"
          }
        }
      },
      "Parameters32": {
        "required": ["salesInvoiceId"],
        "type": "object",
        "properties": {
          "salesInvoiceId": {
            "pattern": "",
            "type": "integer",
            "description": "Sales invoice identifier",
            "format": "int32"
          }
        }
      },
      "Parameters33": {
        "required": ["salesInvoiceId"],
        "type": "object",
        "properties": {
          "salesInvoiceId": {
            "pattern": "",
            "type": "integer",
            "description": "Sales invoice identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Number of units ordered",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters34": {
        "required": ["closingDate"],
        "type": "object",
        "properties": {
          "closingDate": {
            "pattern": "",
            "type": "string",
            "description": "The date that the supplier return was closed.",
            "format": "date"
          }
        }
      },
      "Parameters35": {
        "required": ["customerId"],
        "type": "object",
        "properties": {
          "database": {
            "pattern": "",
            "type": "string",
            "description": "Database of the object. If not provided the current database will be used."
          },
          "customerId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          }
        }
      },
      "Parameters36": {
        "required": ["supplierInvoiceId", "quantity"],
        "type": "object",
        "properties": {
          "supplierInvoiceId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Supplier invoice identifier",
            "format": "int32"
          },
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Number of units purchased",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          }
        }
      },
      "LoginCompany": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Abbreviation/code to identify the company"
          }
        },
        "description": "User main company name in database format"
      },
      "Parameters37": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of the supplier return item",
            "format": "double"
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          }
        }
      },
      "Parameters38": {
        "required": ["supplierInvoiceId"],
        "type": "object",
        "properties": {
          "supplierInvoiceId": {
            "pattern": "",
            "type": "integer",
            "description": "Supplier invoice identifier",
            "format": "int32"
          }
        }
      },
      "Parameters39": {
        "type": "object",
        "properties": {
          "suppliers": {
            "type": "array",
            "items": {
              "required": ["supplierId"],
              "type": "object",
              "properties": {
                "supplierId": {
                  "minimum": 100,
                  "pattern": "",
                  "type": "integer",
                  "description": "RamBase supplier identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Price15": {
        "type": "object",
        "properties": {
          "expectedPrice": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The expected price received from the customer. This price will be rejected or accepted by the seller",
            "format": "double"
          }
        }
      },
      "Parameters40": {
        "type": "object",
        "properties": {
          "outputDesignId": {
            "pattern": "",
            "type": "integer",
            "description": "Output design identifier",
            "format": "int32"
          },
          "printConfigurationId": {
            "pattern": "",
            "type": "integer",
            "description": "Print configuration identifier",
            "format": "int32"
          },
          "printer": {
            "required": ["printerId"],
            "type": "object",
            "properties": {
              "printerId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the printer",
                "format": "int32"
              },
              "printConnector": {
                "required": ["printConnectorId"],
                "type": "object",
                "properties": {
                  "printConnectorId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Print connector identifier",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "mediaType": {
            "pattern": "",
            "type": "string",
            "description": "Defines the label type to print for an article."
          },
          "productStructureVersion": {
            "pattern": "",
            "type": "string",
            "description": "Version number of this product structure"
          },
          "numberOfCopies": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Defines how many copies to print. Default is one.",
            "format": "int32"
          },
          "labelValues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "pattern": "",
                  "type": "string",
                  "description": "The title of a field to be printed on a label."
                },
                "value": {
                  "pattern": "",
                  "type": "string",
                  "description": "The value of a field to be printed on a product label"
                }
              }
            }
          }
        }
      },
      "Parameters41": {
        "type": "object",
        "properties": {
          "workOrderOperations": {
            "type": "array",
            "items": {
              "required": ["workOrderOperationId"],
              "type": "object",
              "properties": {
                "workOrderOperationId": {
                  "minimum": 100000,
                  "pattern": "",
                  "type": "integer",
                  "description": "Production work order operation identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters42": { "type": "object" },
      "SalesOrderItem4": {
        "required": ["salesOrderItemId"],
        "type": "object",
        "properties": {
          "salesOrderItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Sales order item identifier",
            "format": "int32"
          }
        }
      },
      "Parameters43": {
        "type": "object",
        "properties": {
          "salesQuoteItems": {
            "type": "array",
            "items": {
              "required": ["salesQuoteItemId"],
              "type": "object",
              "properties": {
                "salesQuoteItemId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "Sales quote item identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters44": {
        "type": "object",
        "properties": {
          "salesOrderItems": {
            "type": "array",
            "items": {
              "required": ["salesOrderItemId"],
              "type": "object",
              "properties": {
                "salesOrderItemId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "Sales order item identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "SalesQuoteItem1": {
        "required": ["salesQuoteItemId"],
        "type": "object",
        "properties": {
          "salesQuoteItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Sales quote item identifier",
            "format": "int32"
          }
        }
      },
      "PurchaseOrderItem": {
        "required": ["purchaseOrderItemId"],
        "type": "object",
        "properties": {
          "purchaseOrderItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-/line-number of the purchase order",
            "format": "int32"
          }
        }
      },
      "PurchaseOrderResponseItem": {
        "required": ["purchaseOrderResponseItemId"],
        "type": "object",
        "properties": {
          "purchaseOrderResponseItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-/linenumber of purchase order response",
            "format": "int32"
          }
        }
      },
      "Parameters45": {
        "required": ["productUnitId"],
        "type": "object",
        "properties": {
          "productUnitId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Product unit identifier",
            "format": "int32"
          }
        }
      },
      "WorkOrderOperation2": {
        "required": ["workOrderOperationId"],
        "type": "object",
        "properties": {
          "workOrderOperationId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Production work order operation identifier",
            "format": "int32"
          }
        }
      },
      "Parameters46": {
        "type": "object",
        "properties": {
          "ramBaseSystemName": {
            "pattern": "",
            "type": "string",
            "description": "The system name where the user will be granted permission to."
          }
        }
      },
      "Parameters47": {
        "required": ["newStatus", "priority"],
        "type": "object",
        "properties": {
          "filter": {
            "pattern": "",
            "type": "string",
            "description": "Filter that specify which documents that are to be forwarded to picking, shipping or invoice process"
          },
          "newStatus": {
            "pattern": "",
            "type": "integer",
            "description": "Specify which status the filtered documents will be forwarded to",
            "format": "int32"
          },
          "priority": {
            "pattern": "",
            "type": "integer",
            "description": "Priority of the shipment",
            "format": "int32"
          }
        }
      },
      "Object9": {
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          },
          "objectId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          }
        }
      },
      "Parameters48": {
        "type": "object",
        "properties": {
          "filter": {
            "pattern": "",
            "type": "string",
            "description": "Filter that specify which documents that are to be forwarded to picking, shipping or invoice process"
          }
        }
      },
      "Total4": {
        "type": "object",
        "properties": {
          "hours": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Total time, in hours, of the work allowance",
            "format": "double"
          }
        }
      },
      "Parameters49": {
        "required": ["hours"],
        "type": "object",
        "properties": {
          "date": {
            "pattern": "",
            "type": "string",
            "description": "From date for the transfer process",
            "format": "date"
          },
          "hours": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Hours to transfer",
            "format": "double"
          }
        }
      },
      "Parameters50": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "required": ["countryCode"],
              "type": "object",
              "properties": {
                "countryCode": {
                  "pattern": "",
                  "type": "string",
                  "description": "Country code of the company"
                }
              }
            }
          }
        }
      },
      "Parameters51": {
        "type": "object",
        "properties": {
          "shippingServiceLocations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "locationId": {
                      "minimum": 10000,
                      "pattern": "",
                      "type": "integer",
                      "description": "Location identifier",
                      "format": "int32"
                    }
                  },
                  "description": "Location of general ledger posting item."
                }
              }
            }
          }
        }
      },
      "Parameters52": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "locationId": {
                  "minimum": 10000,
                  "pattern": "",
                  "type": "integer",
                  "description": "Location identifier",
                  "format": "int32"
                }
              },
              "description": "Location of general ledger posting item."
            }
          }
        }
      },
      "Parameters53": {
        "type": "object",
        "properties": {
          "shippingServices": {
            "type": "array",
            "items": {
              "required": ["shippingServiceId"],
              "type": "object",
              "properties": {
                "shippingServiceId": {
                  "minimum": 100000,
                  "pattern": "",
                  "type": "integer",
                  "description": "Shipping service identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters54": {
        "required": ["date", "payOvertime"],
        "type": "object",
        "properties": {
          "date": {
            "pattern": "",
            "type": "string",
            "description": "Ending date for the approval process",
            "format": "date"
          },
          "payOvertime": {
            "pattern": "",
            "type": "boolean",
            "description": "Indicating whether all overtime period should be approved for salary or not"
          }
        }
      },
      "Parameters55": {
        "required": ["transactionId", "transactionAmount"],
        "type": "object",
        "properties": {
          "transactionId": {
            "pattern": "",
            "type": "string",
            "description": "Transaction id of the payment from an external system"
          },
          "transactionAmount": {
            "pattern": "",
            "type": "number",
            "description": "Transaction amount of the payment",
            "format": "double"
          }
        }
      },
      "Parameters56": {
        "required": ["grossMargin"],
        "type": "object",
        "properties": {
          "grossMargin": {
            "maxLength": 100,
            "pattern": "",
            "type": "number",
            "description": "Gross margin of the item.",
            "format": "double"
          }
        }
      },
      "Authentication1": {
        "type": "object",
        "properties": {
          "altinnApplicationId": {
            "pattern": "",
            "type": "string",
            "description": "Application id"
          },
          "altinnApplicationPassword": {
            "pattern": "",
            "type": "string",
            "description": "Application password"
          },
          "altinnSignSchema": {
            "pattern": "",
            "type": "boolean",
            "description": "marks if schema should be sent in signed or not"
          },
          "loggedInAt": {
            "pattern": "",
            "type": "string",
            "description": "datetime for when user logged into rambase. needed for signing schema. example: 2021-02-25T07:36:57+01:00",
            "format": "date-time"
          },
          "username": {
            "pattern": "",
            "type": "string",
            "description": "Endusers Altinn username"
          },
          "password": {
            "pattern": "",
            "type": "string",
            "description": "Endusers Altinn password"
          },
          "method": {
            "pattern": "",
            "type": "string",
            "description": "Method of authentication used."
          },
          "sMSCode": {
            "pattern": "",
            "type": "string",
            "description": "Sms code to be used when method is SMSPin"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "",
            "type": "string",
            "description": "Account number used to identify the bank account"
          },
          "changedAccountNumber": {
            "pattern": "",
            "type": "string",
            "description": "Account number used to identify the bank account that Altinn should use in the future."
          }
        }
      },
      "AltinnVATPeriod": {
        "type": "object",
        "properties": {
          "type": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Type of period. example 4 is two monthly, refer to Altinn schema for all possible types.",
            "format": "int32"
          },
          "period": {
            "pattern": "",
            "type": "string",
            "description": "Period in correct format for type. Period of year followed by period type. Example: 024 which means march-april period"
          },
          "year": {
            "maximum": 2999,
            "minimum": 1990,
            "pattern": "",
            "type": "integer",
            "description": "Period year",
            "format": "int32"
          }
        }
      },
      "Line": {
        "type": "object",
        "properties": {
          "lineId": {
            "pattern": "",
            "type": "string",
            "description": "Id of a line in Vat specification"
          },
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of Vat specification line"
          },
          "netAmount": {
            "pattern": "",
            "type": "number",
            "description": "Total net amount for this VAT code in this VAT posting",
            "format": "double"
          },
          "vATAmount": {
            "pattern": "",
            "type": "number",
            "description": "Total VAT amount for this VAT code in this VAT posting",
            "format": "double"
          }
        }
      },
      "Parameters57": {
        "required": ["accountingYear"],
        "type": "object",
        "properties": {
          "accountingYear": {
            "minimum": 2000,
            "pattern": "",
            "type": "integer",
            "description": "Year of accounting period",
            "format": "int32"
          }
        }
      },
      "Authentication2": {
        "type": "object",
        "properties": {
          "code": {
            "pattern": "",
            "type": "string",
            "description": "Code to be exchanged for a OAUTH 2 access token."
          }
        }
      },
      "VATSpecification": {
        "type": "object",
        "properties": {
          "vATPeriod": {
            "maximum": 212012,
            "minimum": 192001,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period this VAT posting belongs to",
            "format": "int32"
          },
          "vATEntity": {
            "type": "object",
            "properties": {
              "vATRegistrationNumber": {
                "type": "string",
                "description": "Unique number assigned by the relevant tax authority to identify a party for use in relation to value added tax (VAT)"
              }
            }
          }
        }
      },
      "Form": {
        "type": "object",
        "properties": {
          "box1": {
            "pattern": "",
            "type": "number",
            "description": "VAT due on sales and other outputs.",
            "format": "double"
          },
          "box2": {
            "pattern": "",
            "type": "number",
            "description": "VAT due on acquisitions from other EC Member States.",
            "format": "double"
          },
          "box3": {
            "pattern": "",
            "type": "number",
            "description": "Total VAT due (the sum of box1 and box2).",
            "format": "double"
          },
          "box4": {
            "pattern": "",
            "type": "number",
            "description": "VAT reclaimed on purchases and other inputs (including acquisitions from the EC).",
            "format": "double"
          },
          "box5": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The difference between box3 and box4.",
            "format": "double"
          },
          "box6": {
            "pattern": "",
            "type": "number",
            "description": "Total value of sales and all other outputs excluding any VAT.",
            "format": "double"
          },
          "box7": {
            "pattern": "",
            "type": "number",
            "description": "Total value of purchases and all other inputs excluding any VAT (including exempt purchases).",
            "format": "double"
          },
          "box8": {
            "pattern": "",
            "type": "number",
            "description": "Total value of all supplies of goods and related costs, excluding any VAT, to other EC member states.",
            "format": "double"
          },
          "box9": {
            "pattern": "",
            "type": "number",
            "description": "Total value of acquisitions of goods and related costs excluding any VAT, from other EC member states.",
            "format": "double"
          }
        }
      },
      "FraudPreventionData": {
        "required": [
          "userAgent",
          "plugins",
          "deviceUUID",
          "localIpAdresses",
          "localIpAdressesTimeStamp",
          "screen",
          "timeZone",
          "loginTime",
          "twoFactorAuthenticationMethod",
          "windowSize"
        ],
        "type": "object",
        "properties": {
          "doNotTrackOption": {
            "pattern": "",
            "type": "boolean",
            "description": "Indicates if browser doNotTrackOption is on."
          },
          "userAgent": {
            "pattern": "",
            "type": "string",
            "description": "The browser useragent."
          },
          "plugins": {
            "pattern": "",
            "type": "string",
            "description": "list of plugins installed in browser."
          },
          "deviceUUID": {
            "pattern": "",
            "type": "string",
            "description": "A unique identifier for the originating device."
          },
          "localIpAdresses": {
            "pattern": "",
            "type": "string",
            "description": "The local ip adresses belonging to originating device."
          },
          "localIpAdressesTimeStamp": {
            "pattern": "",
            "type": "string",
            "description": "UTC timestamp for when local ip adresses where gathered."
          },
          "screen": {
            "pattern": "",
            "type": "string",
            "description": "Information on originating devices screen resolution, pixel ratio and color depth."
          },
          "timeZone": {
            "pattern": "",
            "type": "string",
            "description": "timezone of originating device."
          },
          "loginTime": {
            "pattern": "",
            "type": "string",
            "description": "UTC timestamp for when user logged in."
          },
          "twoFactorAuthenticationMethod": {
            "pattern": "",
            "type": "string",
            "description": "Which two-factor method was used to authenticate."
          },
          "windowSize": {
            "pattern": "",
            "type": "string",
            "description": "The originating devices browser window size."
          }
        }
      },
      "PurchaseQuoteRequestItem": {
        "required": ["purchaseQuoteRequestItemId"],
        "type": "object",
        "properties": {
          "purchaseQuoteRequestItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Purchase quote request item identifier",
            "format": "int32"
          }
        }
      },
      "PurchaseQuoteItem1": {
        "required": ["purchaseQuoteItemId"],
        "type": "object",
        "properties": {
          "purchaseQuoteItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Purchase quote item identifier",
            "format": "int32"
          }
        }
      },
      "Parameters58": {
        "required": ["period"],
        "type": "object",
        "properties": {
          "period": {
            "maximum": 299912,
            "minimum": 199000,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period",
            "format": "int32"
          }
        }
      },
      "Column2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Reference to field name in API resource\r\n"
          }
        }
      },
      "ReportParameter": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Input parameters (to API) specified on execution of report"
          },
          "value": {
            "pattern": "",
            "type": "string",
            "description": "Input parameters (to API) specified on execution of report"
          }
        }
      },
      "GeneralLedgerAccount3": {
        "required": ["generalLedgerAccountId"],
        "type": "object",
        "properties": {
          "generalLedgerAccountId": {
            "minimum": 1000,
            "pattern": "",
            "type": "integer",
            "description": "General ledger account identifier",
            "format": "int32"
          }
        }
      },
      "AccountingPeriod1": {
        "required": ["period"],
        "type": "object",
        "properties": {
          "period": {
            "maximum": 290000,
            "minimum": 190000,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period",
            "format": "int32"
          }
        }
      },
      "Parameters59": {
        "type": "object",
        "properties": {
          "supplierInvoiceItems": {
            "type": "array",
            "items": {
              "required": ["supplierInvoiceItemId"],
              "type": "object",
              "properties": {
                "supplierInvoiceItemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/linenumber of supplier invoice",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "SupplierInvoiceItem": {
        "required": ["supplierInvoiceItemId"],
        "type": "object",
        "properties": {
          "supplierInvoiceItemId": {
            "pattern": "",
            "type": "integer",
            "description": "Item-/linenumber of supplier invoice",
            "format": "int32"
          }
        }
      },
      "SupplierCreditNoteItem": {
        "required": ["supplierCreditNoteItemId"],
        "type": "object",
        "properties": {
          "supplierCreditNoteItemId": {
            "pattern": "",
            "type": "integer",
            "description": "Item-/linenumber of supplier credit note",
            "format": "int32"
          }
        }
      },
      "Parameters60": {
        "required": ["countryCode"],
        "type": "object",
        "properties": {
          "countryCode": {
            "pattern": "",
            "type": "string",
            "description": "Country code of the location. Inherits from the location."
          }
        }
      },
      "Parameters61": {
        "type": "object",
        "properties": {
          "notOverwriteExistingValues": {
            "pattern": "",
            "type": "boolean",
            "description": "Indicates if fields values in the item cannot be overwritten."
          },
          "generalLedgerAccount": {
            "required": ["generalLedgerAccountId"],
            "type": "object",
            "properties": {
              "generalLedgerAccountId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "General ledger account identifier",
                "format": "int32"
              }
            }
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              }
            }
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "pattern": "",
                  "type": "string",
                  "description": "Value for this dimension defintion."
                },
                "dimensionDefinition": {
                  "type": "object",
                  "properties": {
                    "dimensionDefinitionId": {
                      "maximum": 10,
                      "minimum": 1,
                      "pattern": "",
                      "type": "integer",
                      "description": "Dimension identifier",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Parameters62": {
        "type": "object",
        "properties": {
          "supplierCreditNoteItems": {
            "type": "array",
            "items": {
              "required": ["supplierCreditNoteItemId"],
              "type": "object",
              "properties": {
                "supplierCreditNoteItemId": {
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/linenumber of supplier credit note",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters63": {
        "required": ["quantity", "issueDate"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of supplier invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "issueDate": {
            "pattern": "",
            "type": "string",
            "description": "Date when the document was issued.",
            "format": "date"
          },
          "accountingPeriod": {
            "required": ["period"],
            "type": "object",
            "properties": {
              "period": {
                "maximum": 290000,
                "minimum": 190000,
                "pattern": "",
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "dueDate": {
                "type": "string",
                "description": "Date the object is due to be paid",
                "format": "date"
              }
            }
          },
          "suppliersReference": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers reference. Typically a person."
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers reference number. Typically to an external system."
          },
          "suppliersPaymentReference": {
            "pattern": "",
            "type": "string",
            "description": "Sellers reference to identify the object. In Norway this is typically a KID-number."
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters64": {
        "required": ["supplierInvoiceId", "quantity", "issueDate"],
        "type": "object",
        "properties": {
          "supplierInvoiceId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Supplier invoice identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of supplier invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "issueDate": {
            "pattern": "",
            "type": "string",
            "description": "Date when the document was issued.",
            "format": "date"
          },
          "accountingPeriod": {
            "required": ["period"],
            "type": "object",
            "properties": {
              "period": {
                "maximum": 290000,
                "minimum": 190000,
                "pattern": "",
                "type": "integer",
                "description": "Accounting period",
                "format": "int32"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "dueDate": {
                "type": "string",
                "description": "Date the object is due to be paid",
                "format": "date"
              }
            }
          },
          "suppliersReference": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers reference. Typically a person."
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers reference number. Typically to an external system."
          },
          "suppliersPaymentReference": {
            "pattern": "",
            "type": "string",
            "description": "Sellers reference to identify the object. In Norway this is typically a KID-number."
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Authentication3": {
        "type": "object",
        "properties": {
          "code": {
            "pattern": "",
            "type": "string",
            "description": "Code to be exchanged for access token."
          },
          "verifier": {
            "pattern": "",
            "type": "string",
            "description": "the code verifier part of PKCE, to be sent with the token request."
          }
        }
      },
      "AltinnVATPeriod1": {
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of period. Example \"ToMaaneder\" means two monthly reporting."
          },
          "vATPeriod": {
            "maximum": 299999,
            "minimum": 190000,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period this VAT posting belongs to",
            "format": "int32"
          }
        }
      },
      "Line1": {
        "type": "object",
        "properties": {
          "lineId": {
            "pattern": "",
            "type": "string",
            "description": "Id of a line in Vat specification"
          },
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of Vat specification line"
          },
          "netAmount": {
            "pattern": "",
            "type": "number",
            "description": "Total net amount for this VAT code in this VAT posting",
            "format": "double"
          },
          "vATAmount": {
            "pattern": "",
            "type": "number",
            "description": "Total VAT amount for this VAT code in this VAT posting",
            "format": "double"
          },
          "vATCode": {
            "pattern": "",
            "type": "string",
            "description": "VAT code for this line, if there is one."
          },
          "specification": {
            "pattern": "",
            "type": "string",
            "description": "Further specification for SAFT code"
          },
          "rate": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Rate used when calculating VAT amount",
            "format": "double"
          },
          "remark": {
            "pattern": "",
            "type": "string",
            "description": "A remark on this VAT line. Either one of the predefined remarks or a custom one."
          }
        }
      },
      "FileVersion1": {
        "type": "object",
        "properties": {
          "fileVersionId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Version of the file ",
            "format": "int32"
          },
          "file": {
            "type": "object",
            "properties": {
              "filedId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Accounting7": {
        "type": "object",
        "properties": {
          "department": {
            "type": "object",
            "properties": {
              "departmentId": {
                "type": "integer",
                "description": "Department identifier",
                "format": "int32"
              },
              "departmentLink": {
                "type": "string",
                "description": "Finance department reference"
              }
            },
            "description": "The department related to the item. One of the system/fixed account dimensions."
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              },
              "financeProjectLink": {
                "type": "string",
                "description": "Finance project reference"
              }
            },
            "description": "The finance project related to the item. One of the system/fixed account dimensions."
          }
        }
      },
      "Parameters65": {
        "required": ["productId"],
        "type": "object",
        "properties": {
          "productId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Product indentifier of type project order (WP)",
            "format": "int32"
          },
          "accounting": {
            "type": "object",
            "properties": {
              "department": {
                "type": "object",
                "properties": {
                  "departmentId": {
                    "type": "integer",
                    "description": "Department identifier",
                    "format": "int32"
                  },
                  "departmentLink": {
                    "type": "string",
                    "description": "Finance department reference"
                  }
                },
                "description": "The department related to the item. One of the system/fixed account dimensions."
              },
              "financeProject": {
                "type": "object",
                "properties": {
                  "financeProjectId": {
                    "type": "integer",
                    "description": "Finance project identifier",
                    "format": "int32"
                  },
                  "financeProjectLink": {
                    "type": "string",
                    "description": "Finance project reference"
                  }
                },
                "description": "The finance project related to the item. One of the system/fixed account dimensions."
              }
            }
          }
        }
      },
      "Parameters66": {
        "required": ["quantity", "stockLocationId", "productId"],
        "type": "object",
        "properties": {
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Initial quantity placed in the stock location",
            "format": "double"
          },
          "stockLocationId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Stock location identifier",
            "format": "int32"
          },
          "productId": {
            "pattern": "",
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          }
        }
      },
      "Parameters67": {
        "required": ["financeProjectId"],
        "type": "object",
        "properties": {
          "financeProjectId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Finance project identifier",
            "format": "int32"
          }
        }
      },
      "SalesInvoiceItem": {
        "required": ["salesInvoiceItemId"],
        "type": "object",
        "properties": {
          "salesInvoiceItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-/line-number of the invoice",
            "format": "int32"
          }
        }
      },
      "Parameters68": {
        "type": "object",
        "properties": {
          "salesInvoiceItems": {
            "type": "array",
            "items": {
              "required": ["salesInvoiceItemId"],
              "type": "object",
              "properties": {
                "salesInvoiceItemId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the invoice",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters69": {
        "required": ["pickedDate"],
        "type": "object",
        "properties": {
          "pickedDate": {
            "pattern": "",
            "type": "string",
            "description": "Material which is picked within this date will be confirmed as consumed.",
            "format": "date"
          }
        }
      },
      "Parameters70": {
        "required": ["salesCreditNoteId"],
        "type": "object",
        "properties": {
          "salesCreditNoteId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Sales credit note identifier",
            "format": "int32"
          }
        }
      },
      "Parameters71": {
        "type": "object",
        "properties": {
          "freightAmount": {
            "pattern": "",
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "feeAmount": {
            "pattern": "",
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "Parameters72": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the task process template"
          }
        }
      },
      "Parameters73": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of sales invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "freightAmount": {
            "pattern": "",
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "feeAmount": {
            "pattern": "",
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "Parameters74": {
        "required": ["salesInvoiceId", "quantity"],
        "type": "object",
        "properties": {
          "salesInvoiceId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Sales invoice identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of sales invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters75": {
        "required": ["salesCreditNoteId", "quantity"],
        "type": "object",
        "properties": {
          "salesCreditNoteId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Sales credit note identifier",
            "format": "int32"
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of sales invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters76": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of sales invoice item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          }
        }
      },
      "Parameters77": {
        "type": "object",
        "properties": {
          "salesCreditNoteItems": {
            "type": "array",
            "items": {
              "required": ["salesCreditNoteItemId"],
              "type": "object",
              "properties": {
                "salesCreditNoteItemId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "Item-/line-number of the credit note",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "SalesCreditNoteItem": {
        "required": ["salesCreditNoteItemId"],
        "type": "object",
        "properties": {
          "salesCreditNoteItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-/line-number of the credit note",
            "format": "int32"
          }
        }
      },
      "Parameters78": {
        "required": ["employeeId", "comment"],
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Message entered by the user when requesting approval"
          }
        }
      },
      "Parameters79": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Quantity of the supplier return item",
            "format": "double"
          }
        }
      },
      "BillableSale1": {
        "required": ["billableSaleId"],
        "type": "object",
        "properties": {
          "billableSaleId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "The billing basis sequence number",
            "format": "int32"
          }
        }
      },
      "Parameters80": {
        "type": "object",
        "properties": {
          "billableSales": {
            "type": "array",
            "items": {
              "required": ["billableSaleId"],
              "type": "object",
              "properties": {
                "billableSaleId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "The billing basis sequence number",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Approver1": {
        "required": ["objectId", "objectType"],
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        },
        "description": "Link to approver role or user"
      },
      "Parameters81": {
        "required": ["timesheetFormat"],
        "type": "object",
        "properties": {
          "timesheetFormat": {
            "pattern": "",
            "type": "string",
            "description": "Timesheet format. "
          }
        }
      },
      "PotentialConsequence": {
        "required": ["potentialConsequenceId"],
        "type": "object",
        "properties": {
          "potentialConsequenceId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Potential consequence identifier",
            "format": "int32"
          }
        }
      },
      "Parameters82": {
        "type": "object",
        "properties": {
          "projectOrderItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "projectOrderItemId": {
                  "minimum": 1,
                  "pattern": "",
                  "type": "integer",
                  "description": "Project order item identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Parameters83": {
        "required": ["customerId"],
        "type": "object",
        "properties": {
          "customerId": {
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          }
        }
      },
      "Parameters84": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The quantity that will be (or has been) produced",
            "format": "int32"
          }
        }
      },
      "Parameters85": {
        "required": ["productId"],
        "type": "object",
        "properties": {
          "productId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          }
        }
      },
      "MaterialQuality": {
        "type": "object",
        "properties": {
          "qualityCode": {
            "type": "string",
            "description": "Quality of the material. Only used for information."
          }
        }
      },
      "Parameters86": {
        "type": "object",
        "properties": {
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "cancelRemainingQuantity": {
            "pattern": "",
            "type": "boolean",
            "description": "Indicating if remaining quantity on purchase order or purchase order response will be cancelled after the forward to goods reception is done."
          },
          "goodsReceptionId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Goods reception identifier",
            "format": "int32"
          },
          "arrivingWaybillId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Arriving waybill identifier",
            "format": "int32"
          },
          "goodsReceptionItems": {
            "type": "array",
            "items": {
              "required": ["quantity"],
              "type": "object",
              "properties": {
                "quantity": {
                  "minLength": 0,
                  "pattern": "",
                  "type": "number",
                  "description": "Number of units received",
                  "format": "double"
                },
                "note": {
                  "pattern": "",
                  "type": "string",
                  "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
                },
                "heatNumber": {
                  "pattern": "",
                  "type": "string",
                  "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
                },
                "productionLot": {
                  "pattern": "",
                  "type": "string",
                  "description": "The production lot refers to the particular production unit of the manufactured item. Identification assigned to a particular quantity/lot/batch."
                },
                "materialQuality": {
                  "type": "object",
                  "properties": {
                    "qualityCode": {
                      "type": "string",
                      "description": "Quality of the material. Only used for information."
                    }
                  }
                },
                "countryOfOriginCode": {
                  "pattern": "",
                  "type": "string",
                  "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
                }
              }
            }
          }
        }
      },
      "ProductClassification2": {
        "type": "object",
        "properties": {
          "productClassificationId": {
            "pattern": "",
            "type": "string",
            "description": "Product classification identifier"
          }
        }
      },
      "ProductLocation2": {
        "type": "object",
        "properties": {
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "procurement": {
            "type": "object",
            "properties": {
              "blockedForPurchase": {
                "type": "boolean",
                "description": "If a product is blocked for purchase, no purchase quotes or purchase orders with that product can be registered. "
              },
              "excludeFromSOPProcesses": {
                "type": "boolean",
                "description": "Exclude product from sales- and operation (SOP) processes for location. Typically used for products/materials being purchased, but can also be set for products with product structure."
              },
              "reorderQuantity": {
                "type": "number",
                "description": "Preferred quantity to use when reordering to this location. Is also used as order quantity when stock gets below reorder point.",
                "format": "double"
              },
              "reorderPoint": {
                "type": "number",
                "description": "A minimum amount of quantity which a location holds in stock, such that, when stock falls to this amount, the product must be reordered.\r\n\r\n",
                "format": "double"
              },
              "purchaseNote": {
                "type": "string",
                "description": "Purchase note for this product on this location"
              },
              "purchaseGroup": {
                "type": "object",
                "properties": {
                  "purchaseGroupId": {
                    "type": "integer",
                    "description": "Purchase group identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of purchase group"
                  },
                  "purchaseGroupLink": {
                    "type": "string",
                    "description": "Purchase group identifier"
                  }
                }
              }
            }
          },
          "stock": {
            "type": "object",
            "properties": {
              "classification": {
                "pattern": "",
                "type": "string",
                "description": "Stock classification differentiate products based on their value to segment them into categories (A, B, and C).\r\n‘A’ classification items are very important\r\n‘B’ classification items are important\r\n‘C’ classification items are marginally important"
              },
              "preferredStockLocation": {
                "type": "object",
                "properties": {
                  "stockLocationId": {
                    "minimum": 100000,
                    "pattern": "",
                    "type": "integer",
                    "description": "Stock location identifier",
                    "format": "int32"
                  }
                },
                "description": "Preferred stock location in this location for this product"
              }
            }
          },
          "production": {
            "type": "object",
            "properties": {
              "blockedForProduction": {
                "pattern": "",
                "type": "boolean",
                "description": "If a product is blocked for production, no production work orders with that product can be registered."
              },
              "leadTime": {
                "minimum": 0,
                "pattern": "",
                "type": "integer",
                "description": "Production lead time (or manufacturing lead time) is the period of time between a merchant’s purchase order being placed and the manufacturer completing the order. A short production lead time is better than a long production lead time, as it ensures customers get products quickly. Specified in days.",
                "format": "int32"
              },
              "minimumWorkOrderQuantity": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Minimum ProductionOrder quantity to a prodcution",
                "format": "double"
              },
              "automaticallyCreateWorkOrdersForSubstructures": {
                "pattern": "",
                "type": "boolean",
                "description": "True if production work orders should be created for sub structures automatically"
              },
              "daysToExpediteScheduledStartDate": {
                "minimum": 0,
                "pattern": "",
                "type": "integer",
                "description": "Number of days the production will start ahead of the scheduled start date. Set this value if you want a buffer to be sure you are ready in time.",
                "format": "int32"
              },
              "isManufacturedExternally": {
                "pattern": "",
                "type": "boolean",
                "description": "True if product structure is manufactured externally, and not by ourself"
              },
              "useLineProduction": {
                "pattern": "",
                "type": "boolean",
                "description": "True if this product is planned and manufactured in line production."
              },
              "produceInMultipleOf": {
                "minimum": 0,
                "pattern": "",
                "type": "integer",
                "description": "Quantity to procude in multiple of. Ex. if set to 2, you can only produce 2, 4, 6 etc.",
                "format": "int32"
              },
              "expectedWastage": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "number",
                    "description": "Quantity wasted",
                    "format": "double"
                  },
                  "percent": {
                    "type": "number",
                    "description": "Standard percentage of wastage for product when used in a production work order in this location",
                    "format": "double"
                  }
                }
              }
            }
          },
          "sales": {
            "type": "object",
            "properties": {
              "blockedForSale": {
                "type": "boolean",
                "description": "If a product is blocked for sales, no sales quotes, sales order requests, sales order change requests or sales orders with that product can be registered in this location."
              },
              "blockedForShipping": {
                "type": "boolean",
                "description": "If a product is blocked for shipping, no shipments can be sent to customers from this location."
              }
            }
          }
        }
      },
      "CustomsTariffClassification": {
        "required": ["classification"],
        "type": "object",
        "properties": {
          "classification": {
            "pattern": "",
            "type": "string",
            "description": "Customs tariff classification"
          },
          "customsTariff": {
            "required": ["customsTariffId"],
            "type": "object",
            "properties": {
              "customsTariffId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Customs tariff identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "MaterialQuality1": {
        "type": "object",
        "properties": {
          "qualityCode": {
            "type": "string",
            "description": "Quality of the material. Only used for information."
          },
          "internalNote": {
            "type": "string",
            "description": "Additonal quality codes that are covered in addition to the code given by the field Quality description"
          }
        }
      },
      "DimensionRequirement1": {
        "type": "object",
        "properties": {
          "requirement": {
            "type": "string",
            "description": "Specifies how the dimension should be used for the specific account."
          }
        }
      },
      "RiskAssessment1": {
        "type": "object",
        "properties": {
          "riskAssessmentId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Risk assessment identifier",
            "format": "int32"
          }
        }
      },
      "EndCustomer1": {
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          }
        },
        "description": "End customer"
      },
      "Parameters87": {
        "type": "object",
        "properties": {
          "endCustomer": {
            "type": "object",
            "properties": {
              "customerId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              }
            },
            "description": "End customer"
          }
        }
      },
      "Object10": {
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          },
          "objectId": {
            "pattern": "",
            "type": "string",
            "description": "Identifier of the object"
          }
        }
      },
      "Parameters88": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "required": ["userId"],
              "type": "object",
              "properties": {
                "userId": {
                  "minimum": 100,
                  "pattern": "",
                  "type": "integer",
                  "description": "User identifier",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "DefinedInputValue": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "description": "Table name for defined input value"
          },
          "column": {
            "type": "string",
            "description": "Column for debug defined input"
          },
          "row": {
            "type": "integer",
            "description": "Table row index of defined input value",
            "format": "int32"
          },
          "value": { "type": "string", "description": "Defined value to use" },
          "datatype": {
            "type": "integer",
            "description": "Datatype of the defined value",
            "format": "int32"
          }
        }
      },
      "DefinedTable": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "description": "Name of defined table "
          },
          "rows": {
            "type": "integer",
            "description": "Number of rows to be defined in the table",
            "format": "int32"
          },
          "columns": {
            "type": "string",
            "description": "Columns that should be defined in the table"
          },
          "isOutput": {
            "type": "boolean",
            "description": "True if table is output, false if table is input"
          }
        }
      },
      "DeploymentFolder": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of deployment folder"
          },
          "parentFolder": {
            "type": "object",
            "properties": {
              "deploymentFolderId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Deployment folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "DeploymentObject": {
        "type": "object",
        "properties": {
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment to the deployment object"
          },
          "object": {
            "type": "object",
            "properties": {
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "pattern": "",
                "type": "string",
                "description": "Identifier of the object"
              }
            }
          },
          "deploymentFolder": {
            "type": "object",
            "properties": {
              "deploymentFolderId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Deployment folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "CompanySettingDefinition": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Setting name used to reference the setting"
          }
        }
      },
      "OutputDesign1": {
        "type": "object",
        "properties": {
          "outputDesignId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Output design identifier",
            "format": "int32"
          }
        }
      },
      "PrintConnector2": {
        "required": ["printConnectorId"],
        "type": "object",
        "properties": {
          "printConnectorId": {
            "pattern": "",
            "type": "integer",
            "description": "Print connector identifier",
            "format": "int32"
          }
        }
      },
      "Translation11": {
        "required": ["title", "language"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Translated section title"
          },
          "language": {
            "pattern": "",
            "type": "string",
            "description": "Translated language"
          }
        }
      },
      "Format": {
        "type": "object",
        "properties": {
          "alignment": {
            "type": "string",
            "description": "Alignement of content in column (Left, Right, or Center)"
          },
          "isRedWhenNegative": {
            "type": "boolean",
            "description": "True if negative numbers should be displayed with red colour."
          },
          "numberOfDecimals": {
            "type": "integer",
            "description": "Number of decimals ",
            "format": "int32"
          },
          "cSSClass": {
            "type": "string",
            "description": "CSS formatting when displaying the field\r\n"
          }
        }
      },
      "Width": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of the width, defining if the width is specified in pixels or percent"
          },
          "value": {
            "type": "integer",
            "description": "Column width in pixels or percent",
            "format": "int32"
          }
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "tag": {
            "pattern": "(^HLD\\/[0-9]{6}$)|(^[A-Z]{2,}-[0-9]+$)",
            "type": "string",
            "description": "Commit tag"
          },
          "description": {
            "minLength": 1,
            "pattern": "",
            "type": "string",
            "description": "Commit description"
          }
        }
      },
      "RamBaseSystem4": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "RamBase system that the OTP-exception affects",
            "format": "int32"
          }
        }
      },
      "ItemTypeMapping": {
        "type": "object",
        "properties": {
          "subName": {
            "type": "string",
            "description": "The sub name identifier used in COS"
          },
          "itemType": {
            "type": "string",
            "description": "The item type name for the sub name"
          },
          "uri": {
            "type": "string",
            "description": "Link structure for an object of this item type"
          },
          "identifierDatatype": {
            "type": "string",
            "description": "Datatype of the Identifier. Possible values are: String, Integer"
          },
          "resource": {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "User7": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username with this project"
          }
        }
      },
      "Version": {
        "type": "object",
        "properties": {
          "externalReference": {
            "pattern": "",
            "type": "string",
            "description": "External reference for version (ex. jira issue)"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the changes in the version"
          },
          "query": {
            "pattern": "",
            "type": "string",
            "description": "The actual query of the SQL view"
          }
        }
      },
      "Cos2": {
        "type": "object",
        "properties": {
          "cosId": {
            "type": "integer",
            "description": "COS identifier",
            "format": "int32"
          }
        }
      },
      "FormulaDefinition": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the formula"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the formula"
          },
          "formula": {
            "pattern": "",
            "type": "string",
            "description": "The formula may include numeric values, parenthesized expressions, parameters, and mathematical operators. The following operators are supported: + - * /."
          },
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of formula"
          }
        }
      },
      "CompanySettingDefinition1": {
        "required": ["key", "name", "dataType"],
        "type": "object",
        "properties": {
          "key": {
            "pattern": "",
            "type": "string",
            "description": "Setting name used to reference the setting"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Short name/description of the setting definition"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Descrtiption of the setting definition"
          },
          "defaultValue": {
            "pattern": "",
            "type": "string",
            "description": "Default value if setting not set for company"
          },
          "dataType": {
            "pattern": "^(BOOLEAN|STRING|INTEGER|DECIMAL)$",
            "type": "string",
            "description": "Allowed values for setting. Used for validation of input from user."
          },
          "minimumValue": {
            "pattern": "",
            "type": "number",
            "description": "For data type integer or decimal a minimum value can be specified, e.g. if a value range is allowed.",
            "format": "double"
          },
          "maximumValue": {
            "pattern": "",
            "type": "number",
            "description": "For data type integer or decimal a maximum value can be specified, e.g. if a value range is allowed.",
            "format": "double"
          },
          "isRequired": {
            "pattern": "",
            "type": "boolean",
            "description": "Flag if setting is required/must be set before using system. If this is a sub-setting, this settings must be set when the parent setting is turned on. The user must activate this setting (a company setting value must exist for this setting). If a default value is also specified, that will actually be a suggested value, the setting must still be activated."
          },
          "subModule": {
            "required": ["subModuleId"],
            "type": "object",
            "properties": {
              "subModuleId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Submodule identifier",
                "format": "int32"
              }
            }
          },
          "parentCompanySettingDefinition": {
            "type": "object",
            "properties": {
              "companySettingDefinitionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Company setting definition identifier",
                "format": "int32"
              }
            }
          },
          "domainValueList": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string",
                "description": "Object/archive/context of the DOV"
              },
              "field": {
                "type": "string",
                "description": "Fieldname of the DOV"
              }
            }
          },
          "viewPermission": {
            "type": "object",
            "properties": {
              "permissionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Permission identifier. Optional. Set this if the setting is secret, e.g. not visible for customers. NOTE: If the setting is read in an application the user must have this permission if assigned.",
                "format": "int32"
              }
            }
          },
          "updatePermission": {
            "type": "object",
            "properties": {
              "permissionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Permission identifier. Required for active settings. User must have this permission to be allowed to update the value of this setting.",
                "format": "int32"
              }
            }
          }
        }
      },
      "Parameter4": {
        "required": ["key", "title", "datatype"],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 40,
            "minLength": 2,
            "pattern": "[a-zA-Z]",
            "type": "string",
            "description": "Key that is used in formula and replaced with the value of the parameter"
          },
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the parameter"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the parameter"
          },
          "datatype": {
            "pattern": "",
            "type": "string",
            "description": "Datatype of the parameter"
          },
          "minimumValue": {
            "pattern": "",
            "type": "number",
            "description": "Minimum value of the parameter",
            "format": "double"
          },
          "maximumValue": {
            "pattern": "",
            "type": "number",
            "description": "Maximum value of the parameter",
            "format": "double"
          }
        }
      },
      "Parameter5": {
        "type": "object",
        "properties": {
          "parameterId": {
            "pattern": "",
            "type": "integer",
            "description": "Parameter identifier",
            "format": "int32"
          },
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Translation of the title"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Translation of the description"
          }
        }
      },
      "ApprovalRule": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the approval rule"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Approval rule description"
          }
        }
      },
      "PrintDestination": {
        "type": "object",
        "properties": {
          "paperSize": {
            "pattern": "",
            "type": "string",
            "description": "Size of paper used in the printer"
          },
          "printer": {
            "required": ["printerId"],
            "type": "object",
            "properties": {
              "printerId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the printer",
                "format": "int32"
              },
              "printConnector": {
                "required": ["printConnectorId"],
                "type": "object",
                "properties": {
                  "printConnectorId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Print connector identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "Translation12": {
        "required": ["language", "text"],
        "type": "object",
        "properties": {
          "language": {
            "pattern": "",
            "type": "string",
            "description": "Three character code following the ISO 639-2 standard."
          },
          "text": {
            "pattern": "",
            "type": "string",
            "description": "Translated text of a text template"
          }
        }
      },
      "Regarding2": {
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        },
        "description": "The customer/supplier of the relationship"
      },
      "Sender2": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
            "type": "string",
            "description": "Email address of the sender"
          },
          "objectReference": {
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "Reference to the contact/supplier/employee/customer who sent the email"
          }
        },
        "description": "Reference to the contact/supplier/employee/customer who sent the email"
      },
      "ParentFileFolder": {
        "type": "object",
        "properties": {
          "fileFolderId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "File folders can be nested. The parent folderid is used to place the current folder in relation to its parent.",
            "format": "int32"
          }
        }
      },
      "Owner5": {
        "required": ["objectType", "objectId"],
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          },
          "objectId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "itemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          }
        }
      },
      "File5": {
        "type": "object",
        "properties": {
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of file"
          },
          "searchTag": {
            "pattern": "",
            "type": "string",
            "description": "Search words that can be used to find and recognize files in search"
          },
          "revision": {
            "pattern": "",
            "type": "string",
            "description": "The file revision is a freetext field and can be used in production for drawings and procedures etc. The revision field can only be set when creating a file, and never changed. If a file gets a new revision, a new file should be uploaded."
          },
          "fileType": {
            "required": ["fileTypeId"],
            "type": "object",
            "properties": {
              "fileTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              }
            }
          }
        }
      },
      "Notebook": {
        "required": ["name", "isPrivate"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "The name of a Notebook"
          },
          "isPrivate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if a notebook is private for the person who created it"
          }
        }
      },
      "Note2": {
        "required": ["subject"],
        "type": "object",
        "properties": {
          "subject": {
            "pattern": "",
            "type": "string",
            "description": "The subject and title of a note"
          },
          "isPrivate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if a note is private for the person who created it"
          },
          "text": {
            "pattern": "",
            "type": "string",
            "description": "The text body of a note"
          }
        }
      },
      "TaskProcess": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "deadlineAt": {
            "pattern": "",
            "type": "string",
            "description": "Date and time for all the Tasks under a process to be completed",
            "format": "date-time"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Descriptive text for a Process"
          },
          "isPrivate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if the task is only visible for the creator of the task"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "The name of this process"
          },
          "responsibleRole": {
            "type": "object",
            "properties": {
              "roleId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Role identifier",
                "format": "int32"
              }
            },
            "description": "Role (department etc.) responsible for a task"
          }
        }
      },
      "TaskProcessTemplate3": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the task process template"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of a task-process template"
          },
          "status": {
            "pattern": "",
            "type": "integer",
            "description": "Status of  a task process template",
            "format": "int32"
          },
          "responsibleRole": {
            "type": "object",
            "properties": {
              "roleId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Role identifier",
                "format": "int32"
              }
            },
            "description": "Role (department etc.) responsible for a task"
          }
        }
      },
      "Process1": {
        "type": "object",
        "properties": {
          "processId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Unique identifier for Process",
            "format": "int32"
          }
        },
        "description": "Information about the process this task belongs to."
      },
      "Address3": {
        "required": ["type", "name", "postalCode", "countryCode"],
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of address"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of receiver (Name of company or last name of a person). Note that default invoice address must have the same name as the customer."
          },
          "firstname": {
            "pattern": "",
            "type": "string",
            "description": "Firstname if the receiver is a person. Note that default invoice address must have the same firstname as the customer."
          },
          "isDefault": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this is the default communication type"
          },
          "attention": {
            "pattern": "",
            "type": "string",
            "description": "Attention note."
          },
          "addressLine1": {
            "pattern": "",
            "type": "string",
            "description": "First address line"
          },
          "addressLine2": {
            "pattern": "",
            "type": "string",
            "description": "Second address line"
          },
          "postalCode": {
            "pattern": "",
            "type": "string",
            "description": "Postalcode/Postcode/ZIP"
          },
          "city": {
            "pattern": "",
            "type": "string",
            "description": "City/town/village"
          },
          "region": {
            "pattern": "",
            "type": "string",
            "description": "Region/province/state"
          },
          "countryCode": {
            "pattern": "",
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the country."
          }
        }
      },
      "Email": {
        "required": ["address"],
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of email"
          },
          "isDefault": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this is the default communication type"
          },
          "address": {
            "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
            "type": "string",
            "description": "The email address"
          }
        }
      },
      "Phone": {
        "required": ["phoneNumber"],
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of phone "
          },
          "isDefault": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this is the default communication type"
          },
          "phoneNumber": {
            "pattern": "^([0-9\\(\\)\\s\\.\\+\\-])*$",
            "type": "string",
            "description": "The phone number"
          }
        }
      },
      "ExternalOwner1": {
        "type": "object",
        "properties": {
          "objectId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        }
      },
      "Certification1": {
        "type": "object",
        "properties": {
          "issuedCertificateId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Issued certificate item identifier",
            "format": "int32"
          },
          "certificate": {
            "type": "object",
            "properties": {
              "certificateId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Certificate identifier",
                "format": "int32"
              }
            }
          }
        },
        "description": "Reference to the certificate of the uploader"
      },
      "ChecklistItem1": {
        "required": ["descripton"],
        "type": "object",
        "properties": {
          "descripton": {
            "pattern": "",
            "type": "string",
            "description": "Descriptive checklist bulletpoint"
          },
          "exclusivelyFor": {
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            }
          }
        }
      },
      "ApprovalMetadataField": {
        "required": ["objectType", "fieldName"],
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Object types where this file type will have a weighted role. Comes first in the list of filetypes when uploading a file"
          },
          "fieldName": {
            "pattern": "",
            "type": "string",
            "description": "Data from api to display in approval application."
          },
          "orderIndex": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Order by index",
            "format": "int32"
          }
        }
      },
      "FilenamePattern": {
        "required": ["objectType"],
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Filename pattern for objecttype"
          },
          "pattern": {
            "pattern": "",
            "type": "string",
            "description": "Pattern for filename. Builds up from fields and constants. Mostly used for system generated files."
          }
        }
      },
      "FileRequirementTrigger1": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of file requirement template. Will be copied when creating file requirements and planned file requirements"
          },
          "requiredForMRB": {
            "pattern": "",
            "type": "boolean",
            "description": "Required in manufacturing record book (MRB)\r\n"
          },
          "triggerEvent": {
            "required": ["eventTypeId"],
            "type": "object",
            "properties": {
              "eventTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              }
            },
            "description": "Event type which trigger creation of file requirement (ProductionWorkOrderCreated, ProductCreated, etc). DOV"
          },
          "triggerRestrictions": {
            "type": "object",
            "properties": {
              "product": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "Product identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                },
                "description": "References ART for creating RQMs (requirements) in a production structure"
              },
              "productionOperation": {
                "type": "object",
                "properties": {
                  "productionOperationId": {
                    "type": "integer",
                    "description": "Production operation identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of production operation"
                  },
                  "productionOperationLink": {
                    "type": "string",
                    "description": "Production operation reference"
                  }
                },
                "description": "Operation id that will create a requirement for this file type"
              },
              "productionResource": {
                "type": "object",
                "properties": {
                  "productionResourceId": {
                    "type": "integer",
                    "description": "Production resource identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of  production resource"
                  },
                  "productionResourceLink": {
                    "type": "string",
                    "description": "Production resource reference"
                  }
                }
              }
            }
          },
          "stopEvent": {
            "type": "object",
            "properties": {
              "eventTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              }
            },
            "description": "Optional event type which requires file requirement to be met (ProductionOperationCompleted, ProductActivated). DOV"
          }
        }
      },
      "Section": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of a notebook section "
          }
        }
      },
      "TaskProcessPermission": {
        "type": "object",
        "properties": {
          "entity": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canView": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to view process and underlyig tasks"
          },
          "canEdit": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to edit process and underlying tasks"
          },
          "canDelete": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to delete process and underlying tasks"
          },
          "canAssign": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to assign underlying tasks"
          }
        }
      },
      "TaskProcessPermission1": {
        "type": "object",
        "properties": {
          "entity": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canView": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to view process and underlyig tasks"
          },
          "canEdit": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to edit process and underlying tasks"
          },
          "canDelete": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to delete process and underlying tasks"
          },
          "canAssign": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to assign underlying tasks"
          },
          "canStart": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to start process"
          }
        }
      },
      "TaskPermission": {
        "type": "object",
        "properties": {
          "entity": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canView": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to view task"
          },
          "canEdit": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to edit task"
          },
          "canDelete": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to delete task"
          },
          "canAssign": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to assign task"
          },
          "canChangeStatus": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to approve/reject pre-production task"
          }
        }
      },
      "WorkPeriod2": {
        "required": ["registeredHours", "startedAt"],
        "type": "object",
        "properties": {
          "registeredHours": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Duration of the work period\r\n",
            "format": "double"
          },
          "startedAt": {
            "pattern": "",
            "type": "string",
            "description": "Date and time of when the task item was registered",
            "format": "date-time"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Description for the registered time"
          }
        }
      },
      "TaskPermission1": {
        "type": "object",
        "properties": {
          "entity": {
            "required": ["objectId", "objectType"],
            "type": "object",
            "properties": {
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            },
            "description": "The entity holding the permission. Can be either role (ROT) or user (USR). "
          },
          "canView": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to view task"
          },
          "canEdit": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to edit task"
          },
          "canDelete": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to delete task"
          },
          "canAssign": {
            "pattern": "",
            "type": "boolean",
            "description": "Grants permission to assign task"
          }
        }
      },
      "MinimumAmount1": {
        "type": "object",
        "properties": {
          "amount": {
            "pattern": "",
            "type": "integer",
            "description": "Amount limit of depreciation rule",
            "format": "int32"
          }
        }
      },
      "ValueSource": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "description": "Type of source" },
          "archiveClass": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of archive class"
              }
            }
          },
          "field": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of field" }
            }
          }
        },
        "description": "Where the value is selected from."
      },
      "DefaultVATCodeDefinition1": {
        "required": ["vATCode"],
        "type": "object",
        "properties": {
          "vATCode": {
            "pattern": "",
            "type": "string",
            "description": "Code that determines VAT rules used for VAT calculations."
          }
        }
      },
      "BlockPostingsFor": {
        "type": "object",
        "properties": {
          "salesInvoices": {
            "type": "boolean",
            "description": "GL postings from Sales Invoices are blocked for this general ledger account"
          },
          "salesCreditNotes": {
            "type": "boolean",
            "description": "GL postings from Sales Credit Notes are blocked for this general ledger account"
          },
          "salesPostingAdjustments": {
            "type": "boolean",
            "description": "GL postings from Sales Posting Adjustments are blocked for this general ledger account"
          },
          "supplierInvoices": {
            "type": "boolean",
            "description": "GL postings from Supplier Invoices are blocked for this general ledger account"
          },
          "supplierCreditNotes": {
            "type": "boolean",
            "description": "GL postings from Supplier Credit Notes are blocked for this general ledger account"
          },
          "supplierPostingAdjustments": {
            "type": "boolean",
            "description": "GL postings from Supplier Posting Adjustments are blocked for this general ledger account"
          },
          "payments": {
            "type": "boolean",
            "description": "GL postings from Payments are blocked for this general ledger account"
          },
          "manualGLPostings": {
            "type": "boolean",
            "description": "GL postings from Manual GL Postings are blocked for this general ledger account"
          }
        }
      },
      "SAFTStandardCode1": {
        "required": ["code", "type", "name"],
        "type": "object",
        "properties": {
          "code": {
            "pattern": "",
            "type": "string",
            "description": "SAF-T standard code"
          },
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of SAF-T standard code"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of SAF-T standard code"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of SAF-T standard code"
          },
          "country": {
            "required": ["countryId"],
            "type": "object",
            "properties": {
              "countryId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Country identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "BudgetAmount": {
        "required": ["period", "amount"],
        "type": "object",
        "properties": {
          "period": {
            "maximum": 299912,
            "minimum": 199000,
            "pattern": "",
            "type": "integer",
            "description": "Period of the budget account item",
            "format": "int32"
          },
          "amount": {
            "pattern": "",
            "type": "number",
            "description": "Amount of the budget account item",
            "format": "double"
          },
          "department": {
            "type": "object",
            "properties": {
              "departmentId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Department identifier",
                "format": "int32"
              }
            },
            "description": "The department related to the budget account item."
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              }
            },
            "description": "The project related to the budget account item."
          }
        }
      },
      "AccountingLine3": {
        "type": "object",
        "properties": {
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the general ledger posting"
          },
          "intercompany": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Intercompany database the supplier belongs to."
              }
            }
          },
          "accountDimensions": {
            "type": "object",
            "properties": {
              "generalLedgerAccount": {
                "type": "object",
                "properties": {
                  "generalLedgerAccountId": {
                    "type": "integer",
                    "description": "General ledger account identifier",
                    "format": "int32"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "The account number of the general ledger account"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of general ledger account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of account"
                  },
                  "generalLedgerAccountLink": {
                    "type": "string",
                    "description": "General ledger account reference"
                  }
                }
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value for this dimension defintion."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the dimension value."
                    },
                    "dimensionDefinition": {
                      "type": "object",
                      "properties": {
                        "dimensionDefinitionId": {
                          "type": "integer",
                          "description": "Dimension identifier",
                          "format": "int32"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of dimension"
                        },
                        "dimensionDefinitionLink": {
                          "type": "string",
                          "description": "Dimension reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "vATCodeDefinition": {
            "type": "object",
            "properties": {
              "vATCode": {
                "type": "string",
                "description": "Code that determines VAT rules used for VAT calculations."
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "totals": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "amount": {
                "type": "number",
                "description": "Represents the item amount before any discounts etc. is applied.",
                "format": "double"
              }
            }
          },
          "totalsConverted": {
            "type": "object",
            "properties": {
              "exchangeRate": {
                "pattern": "",
                "type": "number",
                "description": "The exchange rate used in convertion",
                "format": "double"
              }
            }
          }
        }
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "authorizationFlow": {
            "type": "integer",
            "description": "What type of authorization is used by this client. 1 = Server-side web application flow, 2 = Client-side web application flow, 3 = Resource owner password flow, 4 = Client credentials flow",
            "format": "int32"
          },
          "requiresScopeConsent": {
            "type": "boolean",
            "description": "True if users should consent to scope during authentication "
          },
          "redirectUri": {
            "type": "string",
            "description": "The URL to redirect to when login succeded."
          },
          "targetSystem": {
            "type": "string",
            "description": "Default target system of the Client"
          },
          "database": {
            "type": "string",
            "description": "Database to be used to overide the default database of the client"
          },
          "restrictAccessTokenToIPAddress": {
            "type": "boolean",
            "description": "If true requests will have to come from the same IP address as the one used to request the access token. Requests from other IP address will return HTTP 401 - Unauthorized"
          },
          "trustedIPAddresses": {
            "type": "string",
            "description": "Comma-separated list of trusted IP addresses. Addresses in this list are allowed to send the header \"FORWARDED_CLIENT_IP\" on login. Supports IP ranges."
          },
          "isPortalClient": {
            "type": "boolean",
            "description": "True if API client is only supposed to work with customer- and/or supplier portals. Requires that customerId or supplierId is specified either in the user or as input to the authentication."
          },
          "user": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "integer",
                "description": "User identifier",
                "format": "int32"
              },
              "userLink": { "type": "string", "description": "User reference" }
            },
            "description": "If logintype is CNT, then LoginPid will be the server pid to use for login to RamBase."
          },
          "accessToken": {
            "type": "object",
            "properties": {
              "expireTime": {
                "type": "integer",
                "description": "How long will an access token live? Specified in seconds",
                "format": "int32"
              },
              "allowSlidingExpiration": {
                "type": "boolean",
                "description": "Will the access token allow sliding expiration? If sliding expiration is allowed it will mean that the expiretime is reset every time the client access the api"
              }
            }
          },
          "refreshToken": {
            "type": "object",
            "properties": {
              "usage": {
                "type": "integer",
                "description": "Usage of refresh token",
                "format": "int32"
              },
              "expireTime": {
                "type": "integer",
                "description": "How long will the client be able to use the refresh token? Specified in days",
                "format": "int32"
              }
            }
          }
        }
      },
      "APIDocumentationTreeNode1": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the tree node"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the documentation tree node"
          },
          "iconName": {
            "pattern": "",
            "type": "string",
            "description": "Icon name that is used for the node"
          },
          "parent": {
            "type": "object",
            "properties": {
              "aPIDocumentationTreeNodeId": {
                "type": "integer",
                "description": "The identifier of the tree node.",
                "format": "int32"
              }
            },
            "description": "Identifier of the node that this node will be placed under"
          }
        }
      },
      "APIResource2": {
        "type": "object",
        "properties": {
          "testUserIds": {
            "pattern": "^(\\d+)(,\\d+)*$",
            "type": "string",
            "description": "Pids that are allowed to run the resource test versions"
          },
          "category": {
            "pattern": "",
            "type": "integer",
            "description": "Category of API resource",
            "format": "int32"
          },
          "logLevel": {
            "pattern": "",
            "type": "string",
            "description": "Level of logging for the resource. Possible values are: all, none, errors."
          },
          "maxTop": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Maximum number of records that can be fetched using the resource (only relvant for list resources)",
            "format": "int32"
          }
        }
      },
      "Reviewer1": {
        "required": ["userId"],
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          }
        }
      },
      "OTPException1": {
        "required": ["iPAddress", "description"],
        "type": "object",
        "properties": {
          "iPAddress": {
            "pattern": "",
            "type": "string",
            "description": "The ip-address of the otp-exception"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of otp-exception"
          },
          "ramBaseSystem": {
            "type": "object",
            "properties": {
              "ramBaseSystemId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "RamBase system that the OTP-exception affects",
                "format": "int32"
              }
            }
          }
        }
      },
      "CustomFieldSupport": {
        "type": "object",
        "properties": {
          "archive": {
            "type": "string",
            "description": "Archive used for custom fields. This will also allow clients to use $showCustomFields. Ex. COA or COA-T2"
          },
          "path": {
            "type": "string",
            "description": "Path where to place custom fields. Blank is default, and will be added at the end of the structure."
          }
        }
      },
      "Program": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Program type behind the resource. Either COS, DOV og LIB"
          },
          "identifier": {
            "type": "string",
            "description": "Identifier of the program behind the resource"
          }
        }
      },
      "ProjectFolder2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of project folder"
          },
          "parentFolder": {
            "type": "object",
            "properties": {
              "projectFolderId": {
                "type": "integer",
                "description": "Project folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ProjectItem1": {
        "required": ["title", "type"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the project item"
          },
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of project item"
          },
          "identifier": {
            "pattern": "",
            "type": "string",
            "description": "Key identifier for the project item"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the project item"
          },
          "projectFolder": {
            "type": "object",
            "properties": {
              "projectFolderId": {
                "type": "integer",
                "description": "Project folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ProjectNote": {
        "required": ["title", "text"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the project note"
          },
          "isPrivate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if the project note is only readable for the creator"
          },
          "format": {
            "pattern": "",
            "type": "string",
            "description": "Format/syntax of the project note"
          },
          "text": {
            "pattern": "",
            "type": "string",
            "description": "Text of the note"
          },
          "projectFolder": {
            "type": "object",
            "properties": {
              "projectFolderId": {
                "type": "integer",
                "description": "Project folder identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Certificate1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of certificate"
          },
          "issuer": {
            "pattern": "",
            "type": "string",
            "description": "Issuer of certificate"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the certificate"
          }
        }
      },
      "ParentCompetence1": {
        "type": "object",
        "properties": {
          "competenceId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Competence identifier",
            "format": "int32"
          }
        },
        "description": "The category or subcategory a competence is divided into."
      },
      "Course1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of course"
          },
          "courseProvider": {
            "pattern": "",
            "type": "string",
            "description": "Name of the provider of the course"
          },
          "length": {
            "pattern": "",
            "type": "string",
            "description": "Length of the course in hours"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the course"
          },
          "exclusivelyForCompany": {
            "type": "object",
            "properties": {
              "companyId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Company identifier",
                "format": "int32"
              }
            },
            "description": "Company this course belongs to"
          }
        }
      },
      "LaborGroup": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of labor group"
          }
        }
      },
      "WorkAgreement": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of work agreement"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of work agreement"
          }
        }
      },
      "CourseDiploma1": {
        "type": "object",
        "properties": {
          "startDate": {
            "pattern": "",
            "type": "string",
            "description": "Date the course started",
            "format": "date"
          },
          "endDate": {
            "pattern": "",
            "type": "string",
            "description": "Date the course ended",
            "format": "date"
          },
          "employee": {
            "required": ["employeeId"],
            "type": "object",
            "properties": {
              "employeeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              }
            },
            "description": "The employee who aquired the certificate"
          }
        }
      },
      "Bookmark": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "The title of the Bookmark. This is the title/text that will be displayed in the bookmark menu tree."
          },
          "url": {
            "pattern": "",
            "type": "string",
            "description": "The URL we will navigate to when clicking a bookmark. This can be either a relative or an absolute URL."
          },
          "iconName": {
            "pattern": "",
            "type": "string",
            "description": "Each bookmark can have an icon associated with it.  If your RamBase Menu Item should have an icon this field must contain the name of an icon that exists in the RamBase icon set."
          },
          "orderIndex": {
            "pattern": "",
            "type": "integer",
            "description": "The order of bookmarks are controlled by this index field. A lower number will mean a higher rank in the menu. Index 0 will be on the top of the menu.",
            "format": "int32"
          },
          "parentBookmark": {
            "type": "object",
            "properties": {
              "parentBookmarkId": {
                "pattern": "",
                "type": "integer",
                "description": "A reference to the parent bookmark id. Will contain the BookmarkId of the parent bookmark.",
                "format": "int32"
              }
            }
          }
        }
      },
      "Degree1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the education"
          },
          "type": {
            "pattern": "",
            "type": "string",
            "description": "The diploma description"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the education"
          },
          "graduationDate": {
            "pattern": "",
            "type": "string",
            "description": "Date of graduation",
            "format": "date"
          },
          "institution": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the institution for the education"
              },
              "city": {
                "type": "string",
                "description": "City for the education"
              }
            }
          }
        }
      },
      "LanguageProficiency": {
        "required": ["language"],
        "type": "object",
        "properties": {
          "language": {
            "pattern": "",
            "type": "string",
            "description": "Three character code following the ISO 639-2 standard."
          },
          "writtenProficiencyLevel": {
            "maximum": 5,
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Written language proficiency level for this language",
            "format": "int32"
          },
          "spokenProficiencyLevel": {
            "maximum": 5,
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Spoken language proficiency level for this language",
            "format": "int32"
          }
        }
      },
      "WorkExperience": {
        "required": ["jobTitle"],
        "type": "object",
        "properties": {
          "jobTitle": {
            "pattern": "",
            "type": "string",
            "description": "The job title or role the employee had in the company"
          },
          "employer": {
            "pattern": "",
            "type": "string",
            "description": "Name of the company where the employee had this work experience"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the work experience in more detail"
          },
          "timePeriod": {
            "type": "object",
            "properties": {
              "startMonth": {
                "type": "integer",
                "description": "The starting month of this work experience",
                "format": "int32"
              },
              "startYear": {
                "type": "integer",
                "description": "The starting year of this work experience",
                "format": "int32"
              },
              "endMonth": {
                "type": "integer",
                "description": "The ending month of this work experience",
                "format": "int32"
              },
              "endYear": {
                "type": "integer",
                "description": "The ending year of this work experience",
                "format": "int32"
              }
            }
          }
        }
      },
      "LaborCost": {
        "type": "object",
        "properties": {
          "isDefault": {
            "pattern": "",
            "type": "boolean",
            "description": "Determines whether or not a cost type is the default cost for a labor group"
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Sender3": {
        "type": "object",
        "properties": {
          "objectId": {
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          }
        },
        "description": "The sender of the arriving waybill. Can be a customer or a supplier."
      },
      "Totals31": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer",
            "description": "Number of packages belonging to this arriving waybill",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "The gross weight of the consignment this arriving waybill presents",
            "format": "double"
          },
          "length": {
            "type": "number",
            "description": "The length of the consignment",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "The width of the consignment",
            "format": "double"
          },
          "height": {
            "type": "number",
            "description": "The height of the consignment",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "description": "The volume of the consignment. Is calculated from lenght, width and height - but can be overridden by the user.",
            "format": "double"
          },
          "area": {
            "type": "number",
            "description": "The area an incoming consignment will use. This is calculated from length and width, but can be overridden by the user.",
            "format": "double"
          }
        }
      },
      "Shipment3": {
        "type": "object",
        "properties": {
          "deliveryTerms": {
            "type": "string",
            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
          },
          "deliveryTermPlace": {
            "type": "string",
            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
          },
          "arrivingShipment": {
            "type": "object",
            "properties": {
              "arrivingWaybill": {
                "type": "object",
                "properties": {
                  "arrivingWaybillId": {
                    "type": "integer",
                    "description": "Arriving waybill identifier",
                    "format": "int32"
                  },
                  "arrivingWaybillLink": {
                    "type": "string",
                    "description": "Arriving waybill reference"
                  }
                }
              }
            }
          },
          "shippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "shippingServiceLink": {
                "type": "string",
                "description": "Shipping service reference"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "integer",
                    "description": "Carrier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of carrier"
                  },
                  "carrierLink": {
                    "type": "string",
                    "description": "Carrier reference"
                  }
                }
              }
            }
          }
        }
      },
      "Shipment4": {
        "type": "object",
        "properties": {
          "priority": {
            "pattern": "",
            "type": "integer",
            "description": "Priority of the shipment",
            "format": "int32"
          },
          "deliveryTerms": {
            "pattern": "",
            "type": "string",
            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
          },
          "deliveryTermPlace": {
            "pattern": "",
            "type": "string",
            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
          },
          "shippingService": {
            "required": ["shippingServiceId"],
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "CarrierService1": {
        "type": "object",
        "properties": {
          "carrierServiceId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Shipping service identifier from arhive for shipping services",
            "format": "int32"
          }
        }
      },
      "ExclusivelyForCustomer2": {
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Customer identifier",
            "format": "int32"
          }
        },
        "description": "If customer is specified, only this customer can place orders for this product."
      },
      "StockLocation3": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of stock location"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of stock location"
          },
          "isBlockedForPicking": {
            "pattern": "",
            "type": "boolean",
            "description": "True if picking from this stock location is not allowed"
          },
          "isBlockedForStockAssignments": {
            "pattern": "",
            "type": "boolean",
            "description": "True if block linking"
          },
          "isBlockedForStock": {
            "pattern": "",
            "type": "boolean",
            "description": "Determines whether or not this stock location is blocked for stock"
          },
          "containsSecondHandProducts": {
            "pattern": "",
            "type": "boolean",
            "description": "True if location contains second hand products. Location will be blocked for stock assignments."
          },
          "containsSparepartsUsedForRepair": {
            "pattern": "",
            "type": "boolean",
            "description": "True if location contains spareparts used for repair."
          }
        }
      },
      "CountedBy1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "Employee who perform the stock taking"
      },
      "CarrierService2": {
        "required": ["carriersId"],
        "type": "object",
        "properties": {
          "carriersId": {
            "pattern": "",
            "type": "string",
            "description": "Carrier service identifier"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the carriers shipping service"
          }
        }
      },
      "Notification6": {
        "type": "object",
        "properties": {
          "messageParameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key of the message parameter. Found in the message of the notification definition."
                },
                "value": {
                  "type": "string",
                  "description": "The value that replaces the key in the message of the notification definition."
                }
              }
            },
            "description": "Parameters used when expanding the message."
          }
        }
      },
      "Package2": {
        "type": "object",
        "properties": {
          "weight": {
            "pattern": "",
            "type": "number",
            "description": "Weight of this package. Measurement unit is specified in the location arthive",
            "format": "double"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment for this package"
          },
          "tracking": {
            "type": "object",
            "properties": {
              "trackingNumber": {
                "type": "string",
                "description": "Tracking number for this  arriving waybill"
              }
            }
          },
          "freight": {
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "The freigth price for this package",
                "format": "double"
              },
              "cost": {
                "pattern": "",
                "type": "number",
                "description": "Freight costs of this package",
                "format": "double"
              }
            }
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "height": {
                "type": "number",
                "description": "Height of this package. Measurement unit is configured in the location archive.",
                "format": "double"
              },
              "length": {
                "type": "number",
                "description": "Length of this package. Measurement unit is configured in the location arhive",
                "format": "double"
              },
              "width": {
                "type": "number",
                "description": "Width of this package. Measurement unit is specified in location archive.",
                "format": "double"
              },
              "volume": {
                "type": "number",
                "description": "Volume of this package.  The volume is not necessarily simply the product of length, width and height, this only applies for cuboid packages. Therefore the system only proposes this simple calculation if length, width and height are filled and the volume is still empty; but as soon as already a value exists there, it will not be changed automatical any more, for it could have been especially entered for this package.",
                "format": "double"
              }
            }
          }
        }
      },
      "DerivedFrom1": {
        "type": "object",
        "properties": {
          "purchaseQuoteItemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Purchase quote item identifier",
            "format": "int32"
          },
          "purchaseQuote": {
            "type": "object",
            "properties": {
              "purchaseQuoteId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Purchase quote identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "AccountingPeriod2": {
        "type": "object",
        "properties": {
          "accountingPeriodId": {
            "maximum": 290000,
            "minimum": 190000,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period identifier",
            "format": "int32"
          }
        }
      },
      "ImportedSupplierInvoice": {
        "type": "object",
        "properties": {
          "externalReference": {
            "pattern": "",
            "type": "string",
            "description": "Unique identifier of the file. Used to make sure that the same file is not procesed more than once."
          },
          "registrationDate": {
            "pattern": "",
            "type": "string",
            "description": "The issue date to the invoice",
            "format": "date"
          },
          "suppliersReference": {
            "pattern": "",
            "type": "string",
            "description": "The reference to the imported supplier invoice"
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Supplier invoice number generated by the supplier invoicing system"
          },
          "currency": {
            "pattern": "",
            "type": "string",
            "description": "The currency to the imported supplier invoice"
          },
          "isCreditNote": {
            "pattern": "",
            "type": "boolean",
            "description": "Is the imported invoice from type credit note"
          },
          "buyersContact": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the RamBase contact (legal entity or person)"
              },
              "phone": {
                "type": "string",
                "description": "Phone number of the RamBase contact"
              },
              "email": {
                "type": "string",
                "description": "E-mail of the RamBase contact"
              }
            }
          },
          "vATAccounting": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The currency used for VAT to the imported supplier invoice"
              },
              "date": {
                "type": "string",
                "description": "The date when the VAT becomes accountable",
                "format": "date"
              },
              "vATAmount": {
                "type": "number",
                "description": "Total amount of VAT in VAT currency on the invoice",
                "format": "double"
              },
              "vATRegistrationNumber": {
                "type": "string",
                "description": "VAT registration number of the company which should be used for the invoice or credit."
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "freightAmount": {
                "pattern": "",
                "type": "number",
                "description": "Freight of the invoice",
                "format": "double"
              },
              "feeAmount": {
                "pattern": "",
                "type": "number",
                "description": "Fee of the invoice",
                "format": "double"
              },
              "subTotalAmount": {
                "pattern": "",
                "type": "number",
                "description": "Total net amount on the invoice",
                "format": "double"
              },
              "vATAmount": {
                "pattern": "",
                "type": "number",
                "description": "Total amount of VAT on the invoice",
                "format": "double"
              },
              "totalAmount": {
                "pattern": "",
                "type": "number",
                "description": "Total net amount on the invoice",
                "format": "double"
              },
              "roundOffAmount": {
                "pattern": "",
                "type": "number",
                "description": "The round off to the imported supplier invoice",
                "format": "double"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "dueDate": {
                "type": "string",
                "description": "The due date of the imported supplier invoice",
                "format": "date"
              },
              "accountName": {
                "type": "string",
                "description": "The bank account name to the payment receiver"
              },
              "accountNumber": {
                "type": "string",
                "description": "The bank account number to the payment receiver"
              },
              "iBAN": {
                "type": "string",
                "description": "The international bank account number (IBAN) to the payment receiver"
              },
              "sWIFTCode": {
                "type": "string",
                "description": "The bank identification code (BIC) to the account to the payment receiver"
              },
              "suppliersReference": {
                "type": "string",
                "description": "The reference to the payment receiver"
              }
            }
          },
          "supplier": {
            "type": "object",
            "properties": {
              "name": {
                "pattern": "",
                "type": "string",
                "description": "The name of the supplier"
              },
              "legalEntityIdentifier": {
                "pattern": "",
                "type": "string",
                "description": "The enterprise number to the supplier "
              },
              "invoiceAddress": {
                "type": "object",
                "properties": {
                  "attention": {
                    "pattern": "",
                    "type": "string",
                    "description": "The attention to the supplier"
                  },
                  "addressLine1": {
                    "pattern": "",
                    "type": "string",
                    "description": "The street name to the supplier"
                  },
                  "addressLine2": {
                    "pattern": "",
                    "type": "string",
                    "description": "The additional street name to the supplier"
                  },
                  "region": {
                    "pattern": "",
                    "type": "string",
                    "description": "The state to the supplier"
                  },
                  "postalCode": {
                    "pattern": "",
                    "type": "string",
                    "description": "The postal code to the supplier"
                  },
                  "city": {
                    "pattern": "",
                    "type": "string",
                    "description": "The city to the supplier"
                  },
                  "countryCode": {
                    "pattern": "",
                    "type": "string",
                    "description": "The country code to the supplier"
                  }
                }
              },
              "contact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the suppliers contact (legal entity or person)"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the suppliers contact"
                  },
                  "email": {
                    "type": "string",
                    "description": "E-mail of the suppliers contact"
                  }
                }
              }
            }
          },
          "shippedFrom": {
            "type": "object",
            "properties": {
              "addressLine1": {
                "pattern": "",
                "type": "string",
                "description": "The street name to the shipped from address"
              },
              "addressLine2": {
                "pattern": "",
                "type": "string",
                "description": "The additional street name to the shipped from address"
              },
              "postalCode": {
                "pattern": "",
                "type": "string",
                "description": "The postal code to the shipped from address"
              },
              "city": {
                "pattern": "",
                "type": "string",
                "description": "The city to the shipped from address"
              },
              "region": {
                "pattern": "",
                "type": "string",
                "description": "The state to the shipped from address"
              },
              "countryCode": {
                "pattern": "",
                "type": "string",
                "description": "The country code to the shipped from address"
              }
            }
          },
          "shippedTo": {
            "type": "object",
            "properties": {
              "addressLine1": {
                "pattern": "",
                "type": "string",
                "description": "The street name of the shipped to address"
              },
              "addressLine2": {
                "pattern": "",
                "type": "string",
                "description": "The additional street name of the shipped to address"
              },
              "postalCode": {
                "pattern": "",
                "type": "string",
                "description": "The postal code to the shipped to address"
              },
              "city": {
                "pattern": "",
                "type": "string",
                "description": "The city to the shipped to address"
              },
              "region": {
                "pattern": "",
                "type": "string",
                "description": "The state of the shipped to address"
              },
              "countryCode": {
                "pattern": "",
                "type": "string",
                "description": "The country code to the shipped to address"
              }
            }
          }
        }
      },
      "SupplierBankAccount1": {
        "type": "object",
        "properties": {
          "supplierBankAccountId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Supplier bank account identifier",
            "format": "int32"
          }
        }
      },
      "Payment8": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "pattern": "",
            "type": "string",
            "description": "Terms of payment. Defaut value is retrieved from the supplier. "
          },
          "dueDate": {
            "pattern": "",
            "type": "string",
            "description": "Date the object is due to be paid",
            "format": "date"
          }
        }
      },
      "Totals32": {
        "type": "object",
        "properties": {
          "freightAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "feeAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          },
          "roundOffAmount": {
            "pattern": "",
            "type": "number",
            "description": "Round-off amount in transaction document's currency",
            "format": "double"
          },
          "vATRoundOffAmount": {
            "pattern": "",
            "type": "number",
            "description": "VAT round-off amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "VATDetails5": {
        "type": "object",
        "properties": {
          "postponeVAT": {
            "pattern": "",
            "type": "boolean",
            "description": "Indicates that the VAT posting should be postponed"
          },
          "vATHandling": {
            "pattern": "",
            "type": "string",
            "description": "Specifies how value added tax (VAT) should be calculated. Either always include VAT, always exclude VAT or use standard/default VAT rules."
          },
          "vATRate": {
            "pattern": "",
            "type": "number",
            "description": "Rate between transaction currency and company VAT currency. VAT rate should be used to calculate VAT amount in company VAT currency.",
            "format": "double"
          },
          "vATDate": {
            "pattern": "",
            "type": "string",
            "description": "Date of VAT posting. Currency rate calculation use this date.",
            "format": "date"
          },
          "vATPeriod": {
            "maximum": 299912,
            "minimum": 199000,
            "pattern": "",
            "type": "integer",
            "description": "Accounting period this VAT posting belongs to",
            "format": "int32"
          }
        }
      },
      "PolishRequirements1": {
        "type": "object",
        "properties": {
          "purchaseOutsideEU": {
            "pattern": "",
            "type": "boolean",
            "description": "Purchase was from outside of EU.  Used for the JPK files for \"Shortened import procedure outside of EU\"."
          }
        }
      },
      "PurchaseGroup1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of purchase group"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of purchase group"
          }
        }
      },
      "SOPProcess1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "pattern": "",
            "type": "string",
            "description": "Name of S&OP (Sales and operation planning) process"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of S&OP (Sales and operations planning) process"
          },
          "granularity": {
            "pattern": "",
            "type": "string",
            "description": "Granularity used to present the different plans in the S&OP process. Week or month."
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "demandForecast": {
            "type": "object",
            "properties": {
              "salesForecastSource": {
                "pattern": "",
                "type": "integer",
                "description": "The source to use from the sales forecast",
                "format": "int32"
              },
              "includeSalesBacklog": {
                "pattern": "",
                "type": "boolean",
                "description": "If sales backlog is included, everything from the backlog is added to the demand forecast. Note that backlog from products sales forecasted by customers (through the sales forecast source), will not be included. "
              },
              "salesBacklogExclusion": {
                "pattern": "",
                "type": "integer",
                "description": "This field will only have any effect if the “include sales backlog” option is set.\r\nThe default (Exclude nothing) is that sales backlog for the same customer and product that exist in the sales forecast will be excluded from the sales and operation planning. This field is used to fine tune what will be included or not from the sales backlog.",
                "format": "int32"
              },
              "includeReOrderPointForPurchase": {
                "pattern": "",
                "type": "boolean",
                "description": "If products which are purchased have specified re-order point for the location used in the S&OP process, the re-order point will be added as a demand. This will then be included in the gross quantity of the purchase requirements.  Note that this also includes products with product structures manufactured externally."
              },
              "includeReOrderPointForProduction": {
                "pattern": "",
                "type": "boolean",
                "description": "If products which are manufactured have specified re-order point quantity for the location used in the S&OP process, the re-order point quantity will be added as a demand. This will then be included in the gross quantity of the production requirements. Note that this does not includes products with product structures manufactured externally."
              },
              "minimumProbabilityPercent": {
                "maxLength": 100,
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Minimum probability in percentage to include from the sales forecast",
                "format": "double"
              },
              "maximumProbabilityPercent": {
                "maxLength": 100,
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Maximum probability in percentage to include from the sales forecast",
                "format": "double"
              }
            }
          },
          "productionRequirements": {
            "type": "object",
            "properties": {
              "treatProductionWorkOrdersAsStock": {
                "pattern": "",
                "type": "boolean",
                "description": "By enabling this, existing, but not completed, production work orders will be treated as stock. Any production work orders can be used to net off production requirements. By not enabling this, you might end up with creating new production work orders instead off replanning already existing production work orders."
              }
            }
          },
          "purchaseRequirements": {
            "type": "object",
            "properties": {
              "treatSupplierBacklogAsStock": {
                "pattern": "",
                "type": "boolean",
                "description": "By enabling this all purchase orders and purchase order responses will be treated as stock. Any purchase orders and purchase order responses confirmed in the future (ex. in two months) is available from today and can be used to net off purchase requirements. By not enabling this, you might end up with purchasing products that could instead be aquired by requesting change of delivery date on existing supplier backlog. "
              },
              "requireMaterialsFromAllProductionWorkOrders": {
                "pattern": "",
                "type": "boolean",
                "description": "By enabling this option, materials from ALL ongoing- and planned production work orders are included as gross purchase requirements. This means that you might get purchase requirements for materials belonging to production work orders not related to the production requirement plan. \r\n\r\nIf this option is disabled, only materials needed to fulfill the production requirements are included as gross purchase requirements. Note that even if this option is disabled you will still get purchase requirements for materials in ongoing- and planned production work orders consumed by (net off) the production requirements."
              }
            }
          },
          "purchaseOrderSuggestions": {
            "type": "object",
            "properties": {
              "requestedDeliveryDay": {
                "maximum": 7,
                "minimum": 0,
                "pattern": "",
                "type": "integer",
                "description": "Preferred day of delivery. Used to consolidate purchase order suggestions. Default is all days. ",
                "format": "int32"
              }
            }
          }
        }
      },
      "Shipment5": {
        "type": "object",
        "properties": {
          "deliveryTerms": {
            "type": "string",
            "description": "Default delivery terms for the supplier. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). "
          },
          "deliveryTermPlace": {
            "type": "string",
            "description": "A named place,  which, together with the content of Delivery terms, determines where and when the costs, responsibility and risk for a shipment are transferred from the seller to the buye"
          },
          "specialHandling": {
            "type": "object",
            "properties": {
              "specialHandlingId": {
                "type": "integer",
                "description": "Special handling identifier",
                "format": "int32"
              },
              "specialHandlingLink": {
                "type": "string",
                "description": "Special handling code reference"
              }
            },
            "description": "Special handling to use for this shipment."
          },
          "arrivingShippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "integer",
                    "description": "Carrier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of carrier"
                  },
                  "carrierLink": {
                    "type": "string",
                    "description": "Carrier reference"
                  }
                }
              },
              "shippingServiceLink": {
                "type": "string",
                "description": "Shipping service reference"
              }
            },
            "description": "Shipping service used for arriving shipments (from this supplier)"
          },
          "departingShippingService": {
            "type": "object",
            "properties": {
              "shippingServiceId": {
                "type": "integer",
                "description": "Shipping service identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of shipping service"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "integer",
                    "description": "Carrier identifier",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of carrier"
                  },
                  "carrierLink": {
                    "type": "string",
                    "description": "Carrier reference"
                  }
                }
              }
            },
            "description": "Shipping services used for departing shipments (to this supplier)"
          }
        }
      },
      "Payment9": {
        "type": "object",
        "properties": {
          "paymentTerms": {
            "type": "string",
            "description": "Default payment terms to use in new documents."
          },
          "paymentMethod": {
            "type": "string",
            "description": "Default payment method for the supplier"
          },
          "blockPayments": {
            "type": "boolean",
            "description": "Blocked payment of supplier"
          }
        }
      },
      "ImportedSupplierInvoiceItem": {
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity",
            "format": "double"
          },
          "suppliersReference": {
            "pattern": "",
            "type": "string",
            "description": "Supplier invoice line reference"
          },
          "vATPercent": {
            "pattern": "",
            "type": "number",
            "description": "VAT percent",
            "format": "double"
          },
          "product": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of product" },
              "suppliersIdentification": {
                "type": "string",
                "description": "An identifier or name, assigned by the supplier, for the product"
              },
              "buyersIdentification": {
                "type": "string",
                "description": "An identifier or name, assigned by the buyer, for the product"
              },
              "description": {
                "type": "string",
                "description": "Product description"
              },
              "productReference": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "RamBase product identificator",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "productLink": {
                    "type": "string",
                    "description": "Product reference"
                  }
                }
              }
            }
          },
          "price": {
            "type": "object",
            "properties": {
              "grossPrice": {
                "pattern": "",
                "type": "number",
                "description": "Represents the price per unit before any discounting is applied.",
                "format": "double"
              }
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "grossAmount": {
                "pattern": "",
                "type": "number",
                "description": "Represents the item amount before any discounts etc. is applied.",
                "format": "double"
              }
            }
          }
        }
      },
      "ImportedNote": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "pattern": "",
            "type": "string",
            "description": "Text of imported note"
          }
        }
      },
      "PurchaseQuoteItem2": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "suppliersProductName": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers internal name of the product. Retrieved from the product."
          },
          "suppliersReferenceNumber": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers/sellers item reference number. Typically to an external system."
          },
          "equivalentProductName": {
            "pattern": "",
            "type": "string",
            "description": "Name of product with equivalent behavior and attributes. Can be used for same purpose. "
          },
          "productStructureRevision": {
            "pattern": "",
            "type": "string",
            "description": "The product structure revison the supplier can offer"
          },
          "productDescription": {
            "pattern": "",
            "type": "string",
            "description": "Description of the item. If not specified, the description is by default copied from the product."
          },
          "note": {
            "pattern": "",
            "type": "string",
            "description": "Additional information regarding the item (free text). Might be visible to customers/suppliers."
          },
          "heatNumber": {
            "pattern": "",
            "type": "string",
            "description": "A heat number is an identification coupon number that is stamped on a material plate after it is removed from the ladle and rolled at a steel mill."
          },
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Quantity of the purchase quote",
            "format": "double"
          },
          "leadTime": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The lead time, in number of days, from ordering to delivery.",
            "format": "int32"
          },
          "resale": {
            "type": "object",
            "properties": {
              "minimumNetPrice": {
                "pattern": "",
                "type": "number",
                "description": "The minimum net price to use in sales order. Lower than 5% of this price will need approval before registering the sales order.",
                "format": "double"
              },
              "exclusivelyFor": {
                "type": "object",
                "properties": {
                  "database": {
                    "pattern": "",
                    "type": "string",
                    "description": "Database of the object"
                  },
                  "objectId": {
                    "minimum": 100,
                    "pattern": "",
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "pattern": "",
                    "type": "string",
                    "description": "Type of object"
                  }
                },
                "description": "Exclusevly for either customer, customer group or company"
              }
            }
          },
          "agreement": {
            "type": "object",
            "properties": {
              "expirationDate": {
                "type": "string",
                "description": "The agreement will have an expiration date. Note that this date might be different from the validity expiration date of the purchase quote. ",
                "format": "date"
              }
            },
            "description": "If the quote is accepted by the supplier, an agreement is made. The status of the quote item will then be set to 4."
          },
          "price": {
            "type": "object",
            "properties": {
              "netPrice": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              },
              "freight": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Freight  pr unit. Is a part of landed cost for the received product.",
                "format": "double"
              },
              "freightPercent": {
                "maxLength": 100,
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Freight in percent of net price. Used for including freight cost in the gross margin calculation in sales orders, sales invoices etc. ",
                "format": "double"
              }
            }
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          },
          "manufacturersProduct": {
            "type": "object",
            "properties": {
              "manufacturersProductId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Manufacturer product identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "PurchaseOrderChangeRequestItem": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "lineNumber": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Line- or sequence number of the item. The LineNumber is used for sorting items in applications, prints, reports etc.",
            "format": "int32"
          },
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the buyer/purchaser",
            "format": "date"
          },
          "suppliersProductName": {
            "pattern": "",
            "type": "string",
            "description": "Suppliers internal name of the product. Retrieved from the product."
          },
          "equivalentProductName": {
            "pattern": "",
            "type": "string",
            "description": "Name of product with equivalent behavior and attributes. Can be used for same purpose. "
          },
          "productStructureRevision": {
            "pattern": "",
            "type": "string",
            "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
          },
          "productDescription": {
            "pattern": "",
            "type": "string",
            "description": "Description of the item. If not specified, the description is by default copied from the product."
          },
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Quantity of the purchase order change requeste item",
            "format": "double"
          },
          "price": {
            "required": ["netPrice"],
            "type": "object",
            "properties": {
              "netPrice": {
                "pattern": "",
                "type": "number",
                "description": "Final price per unit after deducting all discounts etc.",
                "format": "double"
              }
            }
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ProductGroup": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of product group"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the product group"
          }
        }
      },
      "MeasurementUnit2": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Measurement unit identifier",
            "format": "int32"
          }
        },
        "description": "Measurement unit used for this product, both in sales and purchase."
      },
      "MainImage3": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "integer",
                "description": "File identifier",
                "format": "int32"
              }
            }
          }
        },
        "description": "Main image of the product"
      },
      "Sales6": {
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "integer",
            "description": "Defines if an article is of one of the types: Sales, Sales and rental, Rental, Subscription",
            "format": "int32"
          },
          "assignInMultipleOf": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Sometimes the products are packed together in a way that makes it preferrable to keep them together when selling. When RamBase starts the process of assigning sales to stock or purchase backlog, this field is taken into consideration. If the available quantity is not in this multiple, the rest quantity will be requested for procurement. \r\n\r\nEx. a product is set up to be assigned in multiple of 3. When selling 7 pcs of this product, 6 is assigned to stock or purchase backlog, while the last one is always requested for procurement (even though you have 100 in stock). Note that you can still manually override this behaviour and assign everything to stock or purchase backlog. ",
            "format": "int32"
          },
          "minimumGrossMargin": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The minimum gross margin, in percent, for the product",
            "format": "double"
          },
          "warrantyPeriod": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The time period (in months) in which the product may be returned or exchanged. The warranty period starts at the date of shipment to customer.",
            "format": "int32"
          },
          "standardLeadTime": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The standard lead time, in number of days, from customer places order to delivery.",
            "format": "int32"
          },
          "minimumSalesPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Three character code following the ISO 4217 standard"
              },
              "netPrice": {
                "type": "number",
                "description": "Minimum sales price for product",
                "format": "double"
              }
            }
          },
          "exclusivelyForCustomer": {
            "type": "object",
            "properties": {
              "customerId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              }
            },
            "description": "If customer is specified, only this customer can place orders for this product."
          }
        }
      },
      "Stock4": {
        "type": "object",
        "properties": {
          "isNonStock": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this is a non-physical product which are no using assignments from the assignment archive"
          },
          "requireSerialNumberAtGoodsReception": {
            "pattern": "",
            "type": "boolean",
            "description": "If all units of this product should have a serial number in stock, you should require serial number to be required at goods reception. This will ensure that serial number is specified before goods receptions with this product is registered."
          }
        }
      },
      "AdditionalProductionCost": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Additional production cost name"
          },
          "classification": {
            "pattern": "",
            "type": "string",
            "description": "Additional production cost classification"
          },
          "costTarget": {
            "pattern": "",
            "type": "string",
            "description": "Target of additional production cost"
          },
          "cost": {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "Type of additional production cost value. Select AMOUNT for the fixed value or PERCENT for the percentage based value."
              },
              "value": {
                "type": "string",
                "description": "Additional production cost value"
              }
            }
          }
        }
      },
      "ManufacturingArea2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of manufacturing area"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of Manufacturing Area"
          }
        }
      },
      "AppliesTo1": {
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Type of object"
          },
          "objectId": {
            "pattern": "",
            "type": "string",
            "description": "Identifier of the object"
          }
        },
        "description": "Tells if the production operation applies to a production resource or production resource group"
      },
      "ProductionResourceGroup2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of production resource group"
          },
          "allowManHours": {
            "pattern": "",
            "type": "boolean",
            "description": "True if man hours can be added to the work log of work order operations"
          },
          "allowMultipleOperators": {
            "pattern": "",
            "type": "boolean",
            "description": "True if multiple operators can work with one work order operation."
          },
          "calculateCostByPlannedHours": {
            "pattern": "",
            "type": "boolean",
            "description": "(RW) Value = 1: Operation cost is calculated based on planned operation hours. Value = 0 (default):  Operation cost is calculated by logged hours."
          },
          "shortName": {
            "pattern": "",
            "type": "string",
            "description": "Shortname for resource group."
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of production resource group"
          },
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Defines the CLASS of the resource group "
          },
          "estimatedHourlyRate": {
            "type": "object",
            "properties": {
              "setup": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Estimated rate per hour for operations setup step, given in system currency.",
                "format": "double"
              },
              "processing": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Estimated rate per hour for operations main step, given in system currency.",
                "format": "double"
              },
              "cleanUp": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Estimated rate per hour for operations post step, given in system currency.",
                "format": "double"
              }
            }
          }
        }
      },
      "HourlyRates": {
        "type": "object",
        "properties": {
          "setup": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Rate per hour for operations setup step.",
            "format": "double"
          },
          "processing": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Rate per hour for operations step",
            "format": "double"
          },
          "cleanUp": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Rate per hour for operations post step, given in system currency.",
            "format": "double"
          }
        }
      },
      "ScheduledJob": {
        "required": ["name", "description"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Scheduled production job name"
          },
          "type": {
            "required": ["scheduledJobTypeId"],
            "type": "object",
            "properties": {
              "scheduledJobTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Scheduled production job type identifier",
                "format": "int32"
              }
            }
          },
          "scheduledAt": {
            "pattern": "",
            "type": "string",
            "description": "Data and time the job is sheduled to be executed",
            "format": "date-time"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Scheduled production job description"
          }
        }
      },
      "SerialNumberTemplate": {
        "type": "object",
        "properties": {
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description / name of the serial number template."
          },
          "productStatus": {
            "pattern": "",
            "type": "integer",
            "description": "Status of product.\r\noptional - If used this template is only for articles with this value in Status field.",
            "format": "int32"
          }
        }
      },
      "ProductionTaskTrigger": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the production task trigger"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the production task trigger"
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "taskProcessTemplate": {
            "type": "object",
            "properties": {
              "taskProcessTemplateId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Unique identifier for task process template",
                "format": "int32"
              }
            },
            "description": "refers to the process template this task template belongs to"
          },
          "retriggerSettings": {
            "type": "object",
            "properties": {
              "level": {
                "type": "integer",
                "description": "Degree of details. State if the task should be triggered based on only product id or in addition one or more varaiables.",
                "format": "int32"
              },
              "intervalDays": {
                "type": "integer",
                "description": "Number of days since last production before the task process will be re triggered based on the degree of details.\r\nIf never triggerd before it will do it the first time production runs.",
                "format": "int32"
              },
              "checkQualityIssues": {
                "type": "boolean",
                "description": "Check for quality issues. If quality issue since last time trigger, re trigger\r\n"
              }
            }
          }
        }
      },
      "ProductionPlanner1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Production planner PID.",
            "format": "int32"
          }
        }
      },
      "Stock5": {
        "type": "object",
        "properties": {
          "classification": {
            "pattern": "",
            "type": "string",
            "description": "Stock classification differentiate products based on their value to segment them into categories (A, B, and C).\r\n‘A’ classification items are very important\r\n‘B’ classification items are important\r\n‘C’ classification items are marginally important"
          },
          "preferredStockLocation": {
            "type": "object",
            "properties": {
              "stockLocationId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Stock location identifier",
                "format": "int32"
              }
            },
            "description": "Preferred stock location in this location for this product"
          }
        }
      },
      "Production3": {
        "type": "object",
        "properties": {
          "blockedForProduction": {
            "pattern": "",
            "type": "boolean",
            "description": "If a product is blocked for production, no production work orders with that product can be registered."
          },
          "leadTime": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Production lead time (or manufacturing lead time) is the period of time between a merchant’s purchase order being placed and the manufacturer completing the order. A short production lead time is better than a long production lead time, as it ensures customers get products quickly. Specified in days.",
            "format": "int32"
          },
          "minimumWorkOrderQuantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Minimum ProductionOrder quantity to a prodcution",
            "format": "double"
          },
          "automaticallyCreateWorkOrdersForSubstructures": {
            "pattern": "",
            "type": "boolean",
            "description": "True if production work orders should be created for sub structures automatically"
          },
          "daysToExpediteScheduledStartDate": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of days the production will start ahead of the scheduled start date. Set this value if you want a buffer to be sure you are ready in time.",
            "format": "int32"
          },
          "isManufacturedExternally": {
            "pattern": "",
            "type": "boolean",
            "description": "True if product structure is manufactured externally, and not by ourself"
          },
          "useLineProduction": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this product is planned and manufactured in line production."
          },
          "produceInMultipleOf": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Quantity to procude in multiple of. Ex. if set to 2, you can only produce 2, 4, 6 etc.",
            "format": "int32"
          },
          "expectedWastage": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number",
                "description": "Quantity wasted",
                "format": "double"
              },
              "percent": {
                "type": "number",
                "description": "Standard percentage of wastage for product when used in a production work order in this location",
                "format": "double"
              }
            }
          }
        }
      },
      "ManufacturersProduct2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Manufacturers name of the product. Also known as Manufacturer Part Number (MPN)."
          },
          "internalNote": {
            "pattern": "",
            "type": "string",
            "description": "Internal note/comment about manufacturers product."
          },
          "lastTimeBuyDate": {
            "pattern": "",
            "type": "string",
            "description": "The last time buy (LTB) date is the last date on which the manufacturer will accept orders for this product. ",
            "format": "date"
          },
          "isPreferred": {
            "pattern": "",
            "type": "boolean",
            "description": "Manufacturer products can be set as preferred. This is only for information. "
          },
          "isDefaultForProduct": {
            "pattern": "",
            "type": "boolean",
            "description": "True if this manufacturers product is the default manufacturers product for the product"
          },
          "globalTradeItemNumber": {
            "maxLength": 14,
            "pattern": "([0-9])+",
            "type": "string",
            "description": "Global Trade Item Number (GTIN) is a 14 digit identifier for trade items (comprising among others of the former EAN International and Uniform Code Council). Examples of types of GTIN are UPC, EAN, JAN, ISBN"
          },
          "countryOfOriginCode": {
            "pattern": "",
            "type": "string",
            "description": "Two-character code (ISO 3166) identifying the default country where the product is produced. This value is inherrited from the assigned goods reception(s). If not country of origin is specified for the goods reception(s), country of origin is retrieved from the product. If assigned to multiple goods receptions with different origin, the field will be empty."
          },
          "package": {
            "type": "object",
            "properties": {
              "packageType": {
                "type": "string",
                "description": "Type of wrapping used for the package"
              },
              "packageQuantity": {
                "type": "number",
                "description": "Total quantity of the product within a package",
                "format": "double"
              }
            }
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              }
            },
            "description": "Manufacturer of the product"
          }
        }
      },
      "NotificationTrigger": {
        "required": ["objectType"],
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "Object type that will trigger the creation of the product notification"
          },
          "objectStatus": {
            "maximum": 3,
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Object status that will trigger the creation of the product notification",
            "format": "int32"
          },
          "notificationType": {
            "required": ["notificationTypeId"],
            "type": "object",
            "properties": {
              "notificationTypeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "The different levels of approval types a file will undergo to be fully approved, eg: Internal, external, document controller",
                "format": "int32"
              }
            }
          },
          "restrictedTo": {
            "type": "object",
            "properties": {
              "objectId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              }
            }
          }
        }
      },
      "Replacement": {
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the product to replace. If a product is specified, this will typically be the name of the product."
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              }
            },
            "description": "Manufacturer of the product"
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "SalesPrice": {
        "required": ["minimumQuantity"],
        "type": "object",
        "properties": {
          "minimumQuantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Minimum quantity for the sales price to be valid",
            "format": "double"
          },
          "currency": {
            "pattern": "",
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "grossPrice": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Gross price pr sales unit",
            "format": "double"
          },
          "grossMargin": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Gross margin of the sales price",
            "format": "double"
          },
          "effectiveDate": {
            "pattern": "",
            "type": "string",
            "description": "The date this sales price is effective from",
            "format": "date"
          },
          "priceList": {
            "type": "object",
            "properties": {
              "priceListId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Price list identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "StandardRecurringPrice1": {
        "required": ["currency"],
        "type": "object",
        "properties": {
          "currency": {
            "pattern": "^[A-Z]{3}$",
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "recurringPrice": {
            "type": "object",
            "properties": {
              "recurringPriceId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Recurring price identifier",
                "format": "int32"
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "priceList": {
            "type": "object",
            "properties": {
              "priceListId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Price list identifier",
                "format": "int32"
              }
            }
          },
          "period": {
            "type": "object",
            "properties": {
              "effectiveDate": {
                "type": "string",
                "description": "Date from standard price is valid (for adding in the future)",
                "format": "date"
              },
              "expirationDate": {
                "type": "string",
                "description": "Date until standard price is valid (for ending in the future)",
                "format": "date"
              }
            }
          },
          "replacedPrice": {
            "type": "object",
            "properties": {
              "standardRecurringPriceId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Identifier of a standard recurring price that is going to be replaced by this price",
                "format": "int32"
              }
            }
          }
        }
      },
      "PlannedFileRequirement": {
        "type": "object",
        "properties": {
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of planned file requirement"
          },
          "requiredForMRB": {
            "pattern": "",
            "type": "boolean",
            "description": "Sets requirements to Manufacturing Record book."
          },
          "fileType": {
            "required": ["fileTypeId"],
            "type": "object",
            "properties": {
              "fileTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Reference to the file type this requirement will be fulfilled by.",
                "format": "int32"
              }
            }
          },
          "productionOperation": {
            "type": "object",
            "properties": {
              "productionOperationId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "Production operation identifier",
                "format": "int32"
              }
            },
            "description": "Originating OPR id from FIT."
          }
        }
      },
      "ParentSection1": {
        "type": "object",
        "properties": {
          "parentSectionId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Book section identifier",
            "format": "int32"
          }
        },
        "description": "Parent chapter item to build a treeview model of the book"
      },
      "OperationSupplier": {
        "type": "object",
        "properties": {
          "standardLeadTime": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Leadtime in days",
            "format": "int32"
          },
          "isPreferred": {
            "pattern": "",
            "type": "boolean",
            "description": "When creating a new structure (KIT) the system will pick values from the preferred supplier and calculate the leadtime for the outsourced operation"
          },
          "confirmArrivalDate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if the supplier confirm when the product is back on the manufacturers premises. False if the supplier confirm when the goods is ready to be shipped from the suppliers premises. "
          },
          "transitDays": {
            "type": "object",
            "properties": {
              "to": {
                "type": "integer",
                "description": "Transporttime in days from manufacturer premises to supplier",
                "format": "int32"
              },
              "from": {
                "type": "integer",
                "description": "Transporttime in days from supplier to manufacturer premises",
                "format": "int32"
              }
            }
          },
          "supplier": {
            "required": ["supplierId"],
            "type": "object",
            "properties": {
              "supplierId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "CapacityPeriod": {
        "type": "object",
        "properties": {
          "utilizationPercent": {
            "maximum": 100,
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Resource utilization for capacity period, given in %.  Capacity = calendar day hours * utilization.",
            "format": "int32"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Note to capacity period, free text."
          },
          "productionWorkingTimeTemplate": {
            "required": ["productionWorkingTimeTemplateId"],
            "type": "object",
            "properties": {
              "productionWorkingTimeTemplateId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Production working time template identification number",
                "format": "int32"
              }
            }
          },
          "validity": {
            "type": "object",
            "properties": {
              "effectiveDate": {
                "type": "string",
                "description": "Valid from",
                "format": "date"
              },
              "expirationDate": {
                "type": "string",
                "description": "Valid to",
                "format": "date"
              }
            }
          }
        }
      },
      "SerialNumberElement": {
        "required": ["orderIndex", "contentType"],
        "type": "object",
        "properties": {
          "orderIndex": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Line number for the serial number template. Is used for ordering the lines when building the serial number template.",
            "format": "int32"
          },
          "contentType": {
            "pattern": "",
            "type": "string",
            "description": "Where this part of the serialno string should come from.\r\n\r\nvalues:\r\n'TEXT' - A fixed text\r\n'DATEFORMAT' -  (YY, WW, MM...)    - (from current date)\r\n'FIELD' - given field from Rambase e.g. Product.\r\n'SEQUENCE' - a system managed counter "
          },
          "content": {
            "pattern": "",
            "type": "string",
            "description": "Dependent of the value of CONTENTTYPE.\r\n\r\nIf 'TEXT' this is a static text.\r\nIf 'DATEFORMAT' one of a set of predefined format parameters (YYYY,MM,DD etc).\r\nIf 'FIELD' one of a predefined list of fields where a value can come from e.g. Product.\r\nIf 'SEQUENCE' - not available."
          },
          "hasSequenceDependence": {
            "pattern": "",
            "type": "boolean",
            "description": "Changes in this value will make the counter cycle back to its STARTWITH value."
          },
          "sequence": {
            "type": "object",
            "properties": {
              "startValue": {
                "type": "integer",
                "description": "The start value if CONTENTTYPE = SEQUENCE.",
                "format": "int32"
              },
              "length": {
                "type": "integer",
                "description": "Only used when contenttype = 'SEQUENCE'.\r\n If > 0 means the sequence will have a fixed length , and filled from the left using the FILLER value.\r\n\r\n",
                "format": "int32"
              },
              "fillerCharacter": {
                "type": "string",
                "description": "the character filled in when this is a sequence with LENGTH field > 0. (Usually '0')."
              }
            }
          }
        }
      },
      "ConsequenceArea2": {
        "type": "object",
        "properties": {
          "lowerThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than or equal to this threshold will have a low risk. Medium or higher risks have risk scores greater than this threshold value",
            "format": "int32"
          },
          "upperThreshold": {
            "type": "integer",
            "description": "Threshold for risk scores. Values less than this threshold will have a low or medium risk. High risks will have risk scores greater than or equal to this threshold value",
            "format": "int32"
          }
        }
      },
      "ConsequenceType1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of quality consequence"
          }
        }
      },
      "CostCategory2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "DirectCauseCategory1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "IssueCategory1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "ReportedBy1": {
        "type": "object",
        "properties": {
          "object": {
            "type": "object",
            "properties": {
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              }
            }
          }
        }
      },
      "Source7": {
        "type": "object",
        "properties": {
          "objectType": {
            "pattern": "",
            "type": "string",
            "description": "The object type name for the archive"
          },
          "objectId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Identifier of the object",
            "format": "int32"
          },
          "itemId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Item-number of the object",
            "format": "int32"
          }
        }
      },
      "Material1": {
        "type": "object",
        "properties": {
          "productId": {
            "pattern": "",
            "type": "integer",
            "description": "Product source id",
            "format": "int32"
          }
        }
      },
      "PurchaseOrder1": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Purchase order identifier",
            "format": "int32"
          }
        }
      },
      "IssueType1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "RiskAssessment2": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the risk assessment"
          },
          "scope": {
            "pattern": "",
            "type": "string",
            "description": "Scope of the risk assessment"
          },
          "nextAssessmentDate": {
            "pattern": "",
            "type": "string",
            "description": "Date when update of the current risk assessment is planned",
            "format": "date"
          },
          "reAssessmentInterval": {
            "pattern": "",
            "type": "integer",
            "description": "Re-assessment interval",
            "format": "int32"
          },
          "limitations": {
            "pattern": "",
            "type": "string",
            "description": "Limitations of the risk assessment"
          },
          "location": {
            "type": "object",
            "properties": {
              "locationId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Location identifier",
                "format": "int32"
              }
            },
            "description": "Location of general ledger posting item."
          },
          "responsible": {
            "type": "object",
            "properties": {
              "employeeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              }
            }
          },
          "context": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  }
                }
              }
            }
          }
        }
      },
      "Risk": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the risk"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the risk"
          },
          "riskAssessment": {
            "type": "object",
            "properties": {
              "riskAssessmentId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Risk assessment identifier",
                "format": "int32"
              }
            }
          },
          "owner": {
            "required": ["employeeId"],
            "type": "object",
            "properties": {
              "employeeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              }
            }
          },
          "context": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "objectId": {
                    "type": "integer",
                    "description": "Identifier of the object",
                    "format": "int32"
                  },
                  "objectType": {
                    "type": "string",
                    "description": "Type of object"
                  },
                  "objectLink": {
                    "type": "string",
                    "description": "API reference to the object"
                  }
                }
              }
            }
          }
        }
      },
      "RootCauseCategory1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "StandardRequirement3": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of a domain value"
          }
        }
      },
      "AreaConsequenceType1": {
        "type": "object",
        "properties": {
          "sortIndex": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Index for sorting in the UI",
            "format": "int32"
          },
          "consequenceType": {
            "required": ["consequenceTypeId"],
            "type": "object",
            "properties": {
              "consequenceTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Likelihood3": {
        "type": "object",
        "properties": {
          "level": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Likelihood level. Values from 1 to X where X is the size of the risk matrix likelihood dimension",
            "format": "int32"
          },
          "label": {
            "pattern": "",
            "type": "string",
            "description": "Label of the likelihood"
          }
        }
      },
      "Severity3": {
        "type": "object",
        "properties": {
          "label": {
            "pattern": "",
            "type": "string",
            "description": "Label of the severity"
          },
          "rating": {
            "pattern": "",
            "type": "integer",
            "description": "A number representing the level of impact this consequence has. Used in calculating a risk score.",
            "format": "int32"
          }
        }
      },
      "Translation13": {
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "QualityIssueAction": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "pattern": "",
            "type": "string",
            "description": "Type of an action. Immediate, corrective or suggested"
          },
          "task": {
            "required": ["taskId"],
            "type": "object",
            "properties": {
              "taskId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Unique task identifier",
                "format": "int32"
              }
            }
          },
          "qualityCause": {
            "type": "object",
            "properties": {
              "qualityCauseId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Reference to the cause of the action.",
                "format": "int32"
              }
            }
          }
        }
      },
      "QualityCause1": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of this cause"
          },
          "directCauseCategory": {
            "pattern": "",
            "type": "integer",
            "description": "Direct cause category.",
            "format": "int32"
          },
          "rootCauseCategory": {
            "pattern": "",
            "type": "integer",
            "description": "Root cause category.",
            "format": "int32"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment to a cause"
          },
          "parentCause": {
            "type": "object",
            "properties": {
              "qualityCauseId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Cause identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "AreaConsequenceType2": {
        "type": "object",
        "properties": {
          "areaConsequenceTypeId": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Identifier for this quality incident consequence.",
            "format": "int32"
          }
        }
      },
      "IssueCost": {
        "required": ["cost"],
        "type": "object",
        "properties": {
          "cost": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Estimated cost of a QHSES issue.",
            "format": "double"
          },
          "costCategory": {
            "required": ["costCategoryId"],
            "type": "object",
            "properties": {
              "costCategoryId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the domain value",
                "format": "int32"
              }
            }
          }
        }
      },
      "Context3": {
        "type": "object",
        "properties": {
          "affectedQuantity": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of affected units",
            "format": "int32"
          },
          "totalQuantity": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Total amount of units",
            "format": "int32"
          },
          "productUnits": {
            "pattern": "",
            "type": "string",
            "description": "String list of product units"
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          },
          "customer": {
            "required": ["customerId"],
            "type": "object",
            "properties": {
              "customerId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              }
            },
            "description": "The customer the bid is placed for"
          },
          "supplier": {
            "required": ["supplierId"],
            "type": "object",
            "properties": {
              "supplierId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "RamBase supplier identifier",
                "format": "int32"
              }
            }
          },
          "productionResource": {
            "type": "object",
            "properties": {
              "productionResourceId": {
                "type": "integer",
                "description": "Production resource identifier",
                "format": "int32"
              }
            }
          },
          "salesOrder": {
            "type": "object",
            "properties": {
              "salesOrderId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Sales order identifier",
                "format": "int32"
              }
            }
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              }
            },
            "description": "Manufacturer of the product"
          },
          "material": {
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product source id",
                "format": "int32"
              }
            }
          },
          "productionWorkOrder": {
            "type": "object",
            "properties": {
              "productionWorkOrderId": {
                "type": "integer",
                "description": "Production work order identifier",
                "format": "int32"
              }
            }
          },
          "purchaseOrder": {
            "type": "object",
            "properties": {
              "purchaseOrderId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Purchase order identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "QualityIssueRisk": {
        "required": ["likelihood"],
        "type": "object",
        "properties": {
          "likelihood": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "The odds of something happening",
            "format": "int32"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment to the risk"
          },
          "consequenceArea": {
            "required": ["consequenceAreaId"],
            "type": "object",
            "properties": {
              "consequenceAreaId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              }
            }
          },
          "consequenceSeverity": {
            "required": ["qualitySeverityId"],
            "type": "object",
            "properties": {
              "qualitySeverityId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Identifier for a consequence severity",
                "format": "int32"
              }
            }
          }
        }
      },
      "QualityIssueSuggestedAction": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of a suggested action."
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of a suggested action."
          }
        }
      },
      "PotentialConsequence1": {
        "type": "object",
        "properties": {
          "consequenceType": {
            "pattern": "",
            "type": "integer",
            "description": "Consequence type is a text that shortly describes the direct consequence of an incidient. I.E \"broken arm\".",
            "format": "int32"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment to the potential consequence"
          },
          "severity": {
            "required": ["severityId"],
            "type": "object",
            "properties": {
              "severityId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Identifier for a consequence severity",
                "format": "int32"
              }
            }
          },
          "likelihood": {
            "required": ["likelihoodId"],
            "type": "object",
            "properties": {
              "likelihoodId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Likelihood identifier",
                "format": "int32"
              }
            }
          },
          "qualityConsequenceArea": {
            "required": ["qualityConsequenceAreaId"],
            "type": "object",
            "properties": {
              "qualityConsequenceAreaId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Quality consequence identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Value2": {
        "type": "object",
        "properties": {
          "currency": {
            "pattern": "",
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "valuePerPeriod": {
            "pattern": "",
            "type": "number",
            "description": "The monetary value per period",
            "format": "double"
          },
          "periodSpecification": {
            "pattern": "",
            "type": "integer",
            "description": "The periodic schedule of the contract. \r\nValues: \r\n- Month = 30 days\r\n- Week = 7 days\r\n- Year = 365 days\r\n- Quarter = 90 days",
            "format": "int32"
          }
        }
      },
      "CustomerGroup": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Customer group name"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the customer group"
          }
        }
      },
      "SalesAssistant1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "Reference to the employee who is sales assistant for the customer."
      },
      "AccountManager1": {
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "Reference to the employee who is responsible for the management of sales, and relationship with the customer."
      },
      "Accounting8": {
        "type": "object",
        "properties": {
          "creditLimit": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The maximum amount that the customer may charge on a credit card or borrow from a financial institution.",
            "format": "double"
          },
          "creditInsuranceAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Credit amount insured for the customer",
            "format": "double"
          },
          "creditInsuranceCompany": {
            "pattern": "",
            "type": "string",
            "description": "Insurance company used by the customer for credit insurance"
          }
        }
      },
      "SalesDeliveryProject1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "pattern": "",
            "type": "string",
            "description": "Name of sales delivery"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of sales delivery"
          },
          "customer": {
            "required": ["customerId"],
            "type": "object",
            "properties": {
              "customerId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              }
            },
            "description": "The customer the bid is placed for"
          },
          "financeProject": {
            "type": "object",
            "properties": {
              "financeProjectId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Finance project identifier",
                "format": "int32"
              }
            },
            "description": "The project related to the budget account item."
          }
        }
      },
      "PolishRequirements2": {
        "type": "object",
        "properties": {
          "eUSaleToNonCompany": {
            "pattern": "",
            "type": "boolean",
            "description": "Sales from Poland to EU country, to natural persons who do not conduct business activity (non company)."
          },
          "thirdPartyTransactionCode": {
            "pattern": "",
            "type": "string",
            "description": "Transaction code used when purchasing goods in the EU by the third largest VAT payer in a triangular transaction. "
          }
        }
      },
      "Totals33": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          },
          "freightAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          },
          "roundOffAmount": {
            "pattern": "",
            "type": "number",
            "description": "Round-off amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "Shipment6": {
        "type": "object",
        "properties": {
          "deliveryTerms": {
            "pattern": "",
            "type": "string",
            "description": "Delivery terms when shipping the goods. The delivery terms is based on the Incoterms rules from ICC (International Chamber of Commerce). The delivery terms is by default retrieved from the customer."
          },
          "deliveryTermPlace": {
            "pattern": "",
            "type": "string",
            "description": "Named place related to delivery terms (Incoterms)"
          }
        }
      },
      "ItemPriceAgreement": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title/name of the item price agreement"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the item price agreement"
          },
          "extractDiscount": {
            "pattern": "",
            "type": "boolean",
            "description": "The discount/surcharge is by default included in the grossprice of the item. If you choose to extract the discount from the price, the discount will be extracted/seperated from the grossprice and shown as a discount in the item. Note that surcharges is always included in the grossprice, and will not show as a discount even if this field is set."
          },
          "minimumQuantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Minimum quantity for this agreement to be valid",
            "format": "double"
          },
          "stackPriority": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "If value is set, agreement is stackable. The stack priority specifies the order of the calculation, and is unique across all item price agreements. Agreement will be calculated in descendent order (highest stacking priority first).",
            "format": "int32"
          },
          "validity": {
            "type": "object",
            "properties": {
              "effectiveAt": {
                "type": "string",
                "description": "The date the agreement takes effect. The agreement will be effective from from and including this date.",
                "format": "date-time"
              },
              "expireAt": {
                "type": "string",
                "description": "The date the agreement expires. The agreement will be active to and including this date.",
                "format": "date-time"
              }
            }
          },
          "appliesTo": {
            "type": "object",
            "properties": {
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              }
            },
            "description": "Who this item price agreement applies to. Can be empty (all), customer or customer group."
          },
          "appliesFor": {
            "type": "object",
            "properties": {
              "objectType": {
                "pattern": "",
                "type": "string",
                "description": "Type of object"
              },
              "objectId": {
                "pattern": "",
                "type": "string",
                "description": "Identifier of the object"
              }
            },
            "description": "Which product, product group or product-classification this item price agreement applies for. Can also be blank to apply for all products."
          },
          "appliesForManufacturer": {
            "type": "object",
            "properties": {
              "manufacturerId": {
                "minimum": 1000,
                "pattern": "",
                "type": "integer",
                "description": "Manufacturer identifier",
                "format": "int32"
              }
            },
            "description": "Which manufacturer this item price agreement applies for. Can also be blank to apply for all manufacturers."
          },
          "priceRoundingRuleset": {
            "type": "object",
            "properties": {
              "priceRoundingRulesetId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Price rounding ruleset identifier",
                "format": "int32"
              }
            }
          },
          "formulaDefinition": {
            "type": "object",
            "properties": {
              "formulaDefinitionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Formula identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Value3": {
        "type": "object",
        "properties": {
          "unweightedAmount": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The unweighted value of this opportunity (amount)",
            "format": "int32"
          },
          "oneTimeRevenueAmount": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "The value of startup/creation of the opportunity",
            "format": "int32"
          },
          "recurringRevenueAmount": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Monthly reccuring value of the opportunity",
            "format": "int32"
          },
          "contractMonths": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Number of months with recurring value",
            "format": "int32"
          }
        }
      },
      "OpportunityStage1": {
        "type": "object",
        "properties": {
          "opportunityStageId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Opportunity stage identifier",
            "format": "int32"
          }
        },
        "description": "The stage this opportunity is currently in. "
      },
      "Totals34": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Fee amount in transaction document's currency",
            "format": "double"
          },
          "freightAmount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Freight amount in transaction document's currency",
            "format": "double"
          }
        }
      },
      "PriceList3": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the price list"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the price list"
          }
        }
      },
      "PriceRoundingRuleset1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name/title of price rounding ruleset"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the price rounding ruleset"
          }
        }
      },
      "SalesOpportunity": {
        "type": "object",
        "properties": {
          "salesOpportunityId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Sales opportunity identifier",
            "format": "int32"
          }
        }
      },
      "Responsible4": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          }
        },
        "description": "Information who is responsible for the budget"
      },
      "RecurringPrice2": {
        "required": ["priceInterval"],
        "type": "object",
        "properties": {
          "currency": {
            "pattern": "^[A-Z]{3}$",
            "type": "string",
            "description": "Three character code following the ISO 4217 standard"
          },
          "priceInterval": {
            "pattern": "",
            "type": "integer",
            "description": "Interval of recurring price",
            "format": "int32"
          },
          "usageInterval": {
            "pattern": "",
            "type": "integer",
            "description": "Interval of usage",
            "format": "int32"
          },
          "usageUnit": {
            "type": "object",
            "properties": {
              "measurementUnitId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Measurement unit identifier",
                "format": "int32"
              }
            }
          },
          "minimumBillingPeriods": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Minimum number of periods customer is going to be charged, even if the actual return of rented objects occurs before",
            "format": "int32"
          }
        }
      },
      "ExchangeRateAgreement": {
        "required": ["salesCurrency", "purchaseCurrency", "exchangeRate"],
        "type": "object",
        "properties": {
          "salesCurrency": {
            "pattern": "^[A-Z]{3}$",
            "type": "string",
            "description": "This exchange rate agreement applies when the customer is ordering/quoting in this currency"
          },
          "purchaseCurrency": {
            "pattern": "^[A-Z]{3}$",
            "type": "string",
            "description": "This exchange rate agreement applies when the company is purchasing in this currency"
          },
          "exchangeRate": {
            "pattern": "",
            "type": "number",
            "description": "The fixed exchange rate for the exchange rate agreeement. This exchange rate will be used as default for all sales orders, sales invoices and sales objects for the given customer, sales currency and purchase currency. ",
            "format": "double"
          }
        }
      },
      "SalesOrderChangeRequestItem": {
        "type": "object",
        "properties": {
          "requestedDeliveryDate": {
            "pattern": "",
            "type": "string",
            "description": "The delivery date as requested by the customer.",
            "format": "date"
          },
          "customersProductName": {
            "pattern": "",
            "type": "string",
            "description": "Customers internal name of the product. Retrieved from the product."
          },
          "equivalentProductName": {
            "pattern": "",
            "type": "string",
            "description": "Name of product with equivalent behavior and attributes. Can be used for same purpose. "
          },
          "requestedProductStructureRevision": {
            "pattern": "",
            "type": "string",
            "description": "The revision will typically be a major change, as opposed to minor changes stored in the version of the product structure."
          },
          "productDescription": {
            "pattern": "",
            "type": "string",
            "description": "Description of the item. If not specified, the description is by default copied from the product."
          },
          "discountPercent": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "The discount in percent for this item.",
            "format": "double"
          },
          "quantity": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Requested quantity. Might be negative if cancelled",
            "format": "double"
          },
          "price": {
            "type": "object",
            "properties": {
              "grossPrice": {
                "pattern": "",
                "type": "number",
                "description": "Represents the price per unit before any discounting is applied.",
                "format": "double"
              },
              "discount": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "The discount for the item.",
                "format": "double"
              }
            }
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "Warranty": {
        "type": "object",
        "properties": {
          "warrantyExpirationDate": {
            "type": "string",
            "description": "Date of warranty expiration.",
            "format": "date"
          },
          "isPaymentCoveredByWarranty": {
            "type": "boolean",
            "description": "True if payment of item will be covered by warranty. For sales order items that are a part of the repair process, it means that these will not be invoiced."
          }
        }
      },
      "RecurringInvoicing1": {
        "type": "object",
        "properties": {
          "priceChangeAgreement": {
            "type": "integer",
            "description": "Defines if and how the recurring price can be updated",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of subscription or rental item",
            "format": "date"
          },
          "expectedEndDate": {
            "type": "string",
            "description": "Expected end date of subscription or rental item",
            "format": "date"
          },
          "recurringPrice": {
            "type": "object",
            "properties": {
              "recurringPriceId": {
                "type": "integer",
                "description": "Recurring price indentifier",
                "format": "int32"
              },
              "recurringPriceLink": {
                "type": "string",
                "description": "Recurring price reference"
              }
            }
          }
        }
      },
      "PriceRoundingRule": {
        "required": ["currency", "roundingType", "roundingParameter"],
        "type": "object",
        "properties": {
          "currency": {
            "pattern": "",
            "type": "string",
            "description": "Currency this price rounding rule is valid for"
          },
          "roundingType": {
            "pattern": "",
            "type": "integer",
            "description": "Type of rounding algorithm to use",
            "format": "int32"
          },
          "roundingParameter": {
            "pattern": "",
            "type": "string",
            "description": "Parameter used in the rounding algorithm speicifed in the RoundingTYpe"
          },
          "minimumPrice": {
            "pattern": "",
            "type": "number",
            "description": "Rule does not apply for prices lower than this value. Note that if a price match several rules, the one with the highest minimum price is chosen.",
            "format": "double"
          }
        }
      },
      "Remaining1": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "pattern": "",
            "type": "number",
            "description": "Remaining estimated quantity is the expected remaining quantity to deliver. Will e.g be reduced when work hours are logged, but can be manually adjusted anytime.",
            "format": "double"
          },
          "price": {
            "pattern": "",
            "type": "number",
            "description": "Estimated sales price for the remaining quantity, in sales currency. May be adjusted during the process.",
            "format": "double"
          }
        }
      },
      "Accrued2": {
        "type": "object",
        "properties": {
          "price": {
            "pattern": "",
            "type": "number",
            "description": "Accrued sales price, in sales currency. Revenues are to be understood as accrued e.g when logged hours have been approved, or when material has been confirmed as consumed.",
            "format": "double"
          }
        }
      },
      "LandedCost4": {
        "type": "object",
        "properties": {
          "purchaseCurrency": {
            "pattern": "",
            "type": "string",
            "description": "Purchase currency is the currency this product normally is purchased in. This is also the base currency used in the gross margin calculation. By default the purchase currency is retrieved from the product."
          },
          "purchaseExchangeRate": {
            "pattern": "",
            "type": "number",
            "description": "Exchange rate between document currency and purchase currency. Used in landed cost calculations.",
            "format": "double"
          },
          "purchasePrice": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Purchase price for each unit",
            "format": "double"
          },
          "derivedFrom": {
            "type": "object",
            "properties": {
              "purchaseQuoteItemId": {
                "minimum": 1,
                "pattern": "",
                "type": "integer",
                "description": "Purchase quote item identifier",
                "format": "int32"
              },
              "purchaseQuote": {
                "type": "object",
                "properties": {
                  "purchaseQuoteId": {
                    "minimum": 100000,
                    "pattern": "",
                    "type": "integer",
                    "description": "Purchase quote identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "OneTimeFee": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "One time fee price",
            "format": "double"
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          },
          "type": {
            "pattern": "",
            "type": "integer",
            "description": "Either start, deposit or end.",
            "format": "int32"
          }
        }
      },
      "PriceStep": {
        "required": ["price", "fromQuantity", "fromInterval"],
        "type": "object",
        "properties": {
          "price": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Value of a price step",
            "format": "double"
          },
          "fromQuantity": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Beginning quantity of the price step",
            "format": "int32"
          },
          "fromInterval": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Beginning day of a price step",
            "format": "int32"
          },
          "applicableDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": { "type": "string", "description": "Date of the day" }
              }
            },
            "description": "Comma separated list defining days of the week (mon, tue, fri etc.). Should only be filled when PRICEINTERVAL is set to \"DAY\""
          }
        }
      },
      "UsageStep": {
        "required": ["fromQuantity", "price"],
        "type": "object",
        "properties": {
          "fromQuantity": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Beginning quantity of the usage step",
            "format": "int32"
          },
          "price": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Value of a usage step",
            "format": "double"
          },
          "applicableDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": { "type": "string", "description": "Date of the day" }
              }
            },
            "description": "Comma separated list defining days of the week (mon, tue, fri etc.). Should only be filled when USAGEINTERVAL is set to \"DAY\""
          }
        }
      },
      "WorkLog1": {
        "type": "object",
        "properties": {
          "period": {
            "required": ["startedAt", "totalHours"],
            "type": "object",
            "properties": {
              "startedAt": {
                "pattern": "",
                "type": "string",
                "description": "Start date and time of work log entry",
                "format": "date-time"
              },
              "totalHours": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Total hours of work log entry",
                "format": "double"
              },
              "billableHours": {
                "minLength": 0,
                "pattern": "",
                "type": "number",
                "description": "Billable hours of work log entry",
                "format": "double"
              }
            }
          },
          "employee": {
            "required": ["employeeId"],
            "type": "object",
            "properties": {
              "employeeId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Employee identifier",
                "format": "int32"
              }
            },
            "description": "The employee who aquired the certificate"
          },
          "product": {
            "required": ["productId"],
            "type": "object",
            "properties": {
              "productId": {
                "pattern": "",
                "type": "integer",
                "description": "Product identifier",
                "format": "int32"
              }
            }
          },
          "internalNote": {
            "pattern": "",
            "type": "string",
            "description": "Internal note"
          },
          "externalNote": {
            "pattern": "",
            "type": "string",
            "description": "External note"
          }
        }
      },
      "Discount1": {
        "required": ["reason", "amount"],
        "type": "object",
        "properties": {
          "reason": {
            "pattern": "",
            "type": "string",
            "description": "Reason of a discount (i.e. service)"
          },
          "amount": {
            "minLength": 0,
            "pattern": "",
            "type": "number",
            "description": "Discount amount",
            "format": "double"
          },
          "comment": {
            "pattern": "",
            "type": "string",
            "description": "Comment about a discount"
          }
        }
      },
      "Usage": {
        "required": ["date", "quantity"],
        "type": "object",
        "properties": {
          "date": {
            "pattern": "",
            "type": "string",
            "description": "Date of registered usage",
            "format": "date"
          },
          "quantity": {
            "minimum": 1,
            "pattern": "",
            "type": "integer",
            "description": "Quantity of usage (usage unit defined in referenced RPR)",
            "format": "int32"
          }
        }
      },
      "ServiceInterval1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the service interval"
          },
          "interval": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Length/quantity/value of the interval",
                "format": "double"
              },
              "unit": {
                "type": "string",
                "description": "Unit of the interval"
              }
            }
          }
        }
      },
      "CustomFieldOrder1": {
        "type": "object",
        "properties": {
          "fieldOrder": {
            "type": "string",
            "description": "A json structure describing the field order"
          }
        },
        "description": "It is possible for a customer to rearrange the fields within a component. If they choose to do so for one or more of the components in this application, the fieldorder will contain a json structure that will keep information about the field order they have selected."
      },
      "AutomatedFlowAction": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the action"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the action"
          }
        }
      },
      "AutomatedFlow": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "^(?!.*(href)).*",
            "type": "string",
            "description": "Name of the automated flow"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the automated flow"
          },
          "eventType": {
            "type": "object",
            "properties": {
              "ramBaseEventTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              }
            }
          },
          "action": {
            "type": "object",
            "properties": {
              "automatedFlowActionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Automated flow action identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "AutomatedFlowTemplate": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "^(?!.*(href)).*",
            "type": "string",
            "description": "Name of the automated flow"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the automated flow template"
          },
          "eventType": {
            "type": "object",
            "properties": {
              "ramBaseEventTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              }
            }
          },
          "action": {
            "type": "object",
            "properties": {
              "automatedFlowActionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Automated flow action identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "BatchPrintException": {
        "type": "object",
        "properties": {
          "outputObjectDefinition": {
            "required": ["outputObjectDefinitionId"],
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              }
            }
          },
          "redirectTo": {
            "required": ["printConfigurationId"],
            "type": "object",
            "properties": {
              "printConfigurationId": {
                "pattern": "",
                "type": "integer",
                "description": "Print configuration identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "ContextMenuCollection1": {
        "required": ["name", "namespace"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the context menu collection."
          },
          "namespace": {
            "pattern": "",
            "type": "string",
            "description": "Namespace of the context menu collection"
          },
          "repository": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope of the DOV (LOCAL/GLOBAL)"
              }
            }
          }
        }
      },
      "ParentContextMenuItem1": {
        "type": "object",
        "properties": {
          "contextMenuItemId": {
            "pattern": "",
            "type": "integer",
            "description": "Context menu item id",
            "format": "int32"
          }
        },
        "description": "If this field has a value it indicates that this menu item is a child of another menu item. The value of the field will tell what menu item this menu item is a child of."
      },
      "ApiOperation1": {
        "type": "object",
        "properties": {
          "apiOperationId": {
            "pattern": "",
            "type": "integer",
            "description": "Api operation identifiers",
            "format": "int32"
          }
        },
        "description": "If the actiontype is Operation this field will contain the AOP number to execute when clicking this menu item."
      },
      "AccessRule1": {
        "type": "object",
        "properties": {
          "accessRuleId": {
            "pattern": "",
            "type": "integer",
            "description": "Access Rule identifier",
            "format": "int32"
          }
        },
        "description": "Fill this field with a valid ARU (Access rule) number if you want an access rule to be evaluated before showing/executing this menu item."
      },
      "ReducedProductQuality": {
        "type": "object",
        "properties": {
          "severity": {
            "type": "integer",
            "description": "Severity of reduced product quality",
            "format": "int32"
          },
          "likelihood": {
            "type": "integer",
            "description": "Likelihood of reduced product quality",
            "format": "int32"
          }
        }
      },
      "DomainValue2": {
        "required": ["object", "field", "description"],
        "type": "object",
        "properties": {
          "object": {
            "pattern": "",
            "type": "string",
            "description": "Object/archive/context of the DOV"
          },
          "field": {
            "pattern": "",
            "type": "string",
            "description": "Fieldname of the DOV"
          },
          "value": {
            "pattern": "",
            "type": "string",
            "description": "Value of the DOV"
          },
          "priority": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Priority of the domainvalue",
            "format": "int32"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the name/value/code/key"
          },
          "repository": {
            "type": "object",
            "properties": {
              "scope": {
                "pattern": "",
                "type": "string",
                "description": "Scope of the DOV (LOCAL/GLOBAL)"
              },
              "localMode": {
                "pattern": "",
                "type": "string",
                "description": "Defines rules for local editing "
              }
            }
          }
        }
      },
      "DeploymentPackage2": {
        "type": "object",
        "properties": {
          "deploymentPackageId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Deployment package identifier",
            "format": "int32"
          }
        }
      },
      "JobSequence1": {
        "required": ["jobSequenceId"],
        "type": "object",
        "properties": {
          "jobSequenceId": {
            "minimum": 10000,
            "pattern": "",
            "type": "integer",
            "description": "Job sequence identifier",
            "format": "int32"
          }
        },
        "description": "Identifier of the job sequence definition to which the IO extension is related"
      },
      "Module3": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the module"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Descrtiption of the module"
          }
        }
      },
      "PrintConfiguration": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the print configuration"
          },
          "printGroup": {
            "type": "object",
            "properties": {
              "printGroupId": {
                "pattern": "",
                "type": "integer",
                "description": "Link to a print group",
                "format": "int32"
              }
            }
          }
        }
      },
      "InstalledBy1": {
        "required": ["employeeId"],
        "type": "object",
        "properties": {
          "employeeId": {
            "minimum": 100,
            "pattern": "",
            "type": "integer",
            "description": "Employee identifier",
            "format": "int32"
          }
        },
        "description": "The employee that installed the print connector"
      },
      "PrintGroup1": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the print group"
          },
          "parentGroup": {
            "type": "object",
            "properties": {
              "printGroupId": {
                "pattern": "",
                "type": "integer",
                "description": "Print group identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "RamBaseMenuItem1": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "The title of the RamBase Menu Item. This is the title/text that will be displayed in the menu tree."
          },
          "url": {
            "pattern": "",
            "type": "string",
            "description": "The URL we will navigate to when clicking a menu item. This can be either a relative or an absolute URL."
          },
          "iconName": {
            "pattern": "",
            "type": "string",
            "description": "Each RamBase Menu Item can have an icon associated with it.  If your RamBase Menu Item should have an icon this field must contain the name of an icon that exists in the RamBase icon set."
          },
          "permission": {
            "pattern": "",
            "type": "string",
            "description": "RamBase cotain a Role and Permission concept that can restrict what a user can see and do. To restrict users from accessing a menu item that he shouldn't have access to you can require a named permission by specifing an existing permission in this field."
          },
          "orderIndex": {
            "pattern": "",
            "type": "integer",
            "description": "The order of menu items is controlled by this index field. A lower number will mean a higher rank in the menu. Index 0 will be on the top of the menu.",
            "format": "int32"
          },
          "parentMenuItem": {
            "required": ["parentMenuItemId"],
            "type": "object",
            "properties": {
              "parentMenuItemId": {
                "pattern": "",
                "type": "integer",
                "description": "A reference to the parent menu item id. Will contain the RamBaseMenuItemId of the parent menu item.",
                "format": "int32"
              }
            }
          }
        }
      },
      "SystemSettingDefinition": {
        "required": ["key", "name", "dataType"],
        "type": "object",
        "properties": {
          "key": {
            "pattern": "",
            "type": "string",
            "description": "Setting name used to reference the setting"
          },
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Short name/description of the setting definition"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Descrtiption of the setting definition"
          },
          "defaultValue": {
            "pattern": "",
            "type": "string",
            "description": "Default value if setting not set for system"
          },
          "dataType": {
            "pattern": "^(BOOLEAN|STRING|INTEGER|DECIMAL)$",
            "type": "string",
            "description": "Allowed values for setting. Used for validation of input from user."
          },
          "minimumValue": {
            "pattern": "",
            "type": "number",
            "description": "For data type integer or decimal a minimum value can be specified, e.g. if a value range is allowed.",
            "format": "double"
          },
          "maximumValue": {
            "pattern": "",
            "type": "number",
            "description": "For data type integer or decimal a maximum value can be specified, e.g. if a value range is allowed.",
            "format": "double"
          },
          "isRequired": {
            "pattern": "",
            "type": "boolean",
            "description": "Flag if setting is required/must be set before using system. If this is a sub-setting, this settings must be set when the parent setting is turned on. The user must activate this setting (a system setting value must exist for this setting). If a default value is also specified, that will actually be a suggested value, the setting must still be activated."
          },
          "module": {
            "required": ["moduleId"],
            "type": "object",
            "properties": {
              "moduleId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Module identifier",
                "format": "int32"
              }
            }
          },
          "parentSystemSettingDefinition": {
            "type": "object",
            "properties": {
              "systemSettingDefinitionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "System setting definition identifier",
                "format": "int32"
              }
            }
          },
          "domainValueList": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string",
                "description": "Object/archive/context of the DOV"
              },
              "field": {
                "type": "string",
                "description": "Fieldname of the DOV"
              }
            }
          },
          "viewPermission": {
            "type": "object",
            "properties": {
              "permissionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Permission identifier. Optional. Set this if the setting is secret, e.g. not visible for customers. NOTE: If the setting is read in an application the user must have this permission if assigned.",
                "format": "int32"
              }
            }
          },
          "updatePermission": {
            "type": "object",
            "properties": {
              "permissionId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Permission identifier. Required for active settings. User must have this permission to be allowed to update the value of this setting.",
                "format": "int32"
              }
            }
          }
        }
      },
      "Webhook": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of webhook"
          },
          "format": {
            "pattern": "",
            "type": "string",
            "description": "Format or response type for the webhook (XML / JSON)."
          },
          "parameterFilter": {
            "pattern": "",
            "type": "string",
            "description": "Filter for parameters. Contains one or more expressions. Expressions are in the syntax: parametername operator value. Parametername must be in brackets (ex [SalesOrderId]). Supported operators are '=' and '!='. Value must be inside single quotes.. Several expressions can be combined with AND or OR. "
          },
          "targetUrl": {
            "pattern": "^(http|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?$",
            "type": "string",
            "description": "Target url for POSTing , to which to POST data to. Must include protocol (http:// or https://). Example: http://client.example.com/example-webhook"
          },
          "exclusivelyForCompany": {
            "type": "object",
            "properties": {
              "companyId": {
                "minimum": 100,
                "pattern": "",
                "type": "integer",
                "description": "Company identifier",
                "format": "int32"
              }
            },
            "description": "Company this course belongs to"
          },
          "ramBaseEventType": {
            "required": ["ramBaseEventTypeId"],
            "type": "object",
            "properties": {
              "ramBaseEventTypeId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "RamBase event type identifier",
                "format": "int32"
              }
            }
          },
          "messageAuthentication": {
            "type": "object",
            "properties": {
              "secretToken": {
                "type": "string",
                "description": "Secret token used to sign the webhook"
              },
              "hashFunction": {
                "type": "string",
                "description": "Hash function used to generate the signature used to sign the webhook"
              }
            }
          }
        }
      },
      "Filter1": {
        "type": "object",
        "properties": {
          "alternative": { "type": "string", "description": "Alternative" },
          "source": { "type": "string", "description": "Source" },
          "operator": { "type": "string", "description": "Relation/Operator" },
          "value": {
            "type": "string",
            "description": "Value to compare againts"
          },
          "field": {
            "type": "string",
            "description": "Field from Source to compare"
          }
        }
      },
      "Filter2": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "description": "Scope of the filter line (GLOBAL/LOCAL)"
          },
          "alternative": { "type": "string", "description": "Alternative" },
          "source": { "type": "string", "description": "Source" },
          "operator": { "type": "string", "description": "Relation/Operator" },
          "value": {
            "type": "string",
            "description": "Value to compare againts"
          },
          "field": {
            "type": "string",
            "description": "Field from Source to compare"
          }
        }
      },
      "Translation14": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of the description"
          },
          "description": {
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "TestOutputDesign1": {
        "type": "object",
        "properties": {
          "outputDesignId": {
            "minimum": 100000,
            "pattern": "",
            "type": "integer",
            "description": "Test output design identifier",
            "format": "int32"
          }
        }
      },
      "AutomatedFlowActionParameter1": {
        "required": ["datatype"],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Descriptive name of the parameter"
          },
          "key": {
            "pattern": "",
            "type": "string",
            "description": "Key of the parameter. The key used to reference the value when the action is executed."
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the parameter"
          },
          "datatype": {
            "pattern": "",
            "type": "string",
            "description": "Datatype of the parameter."
          },
          "defaultValue": {
            "pattern": "",
            "type": "string",
            "description": "Default value of the parameter"
          },
          "isOptional": {
            "pattern": "",
            "type": "boolean",
            "description": "True if the parameter is optional, meaning it is not required for the action to run"
          },
          "sortIndex": {
            "minimum": 0,
            "pattern": "",
            "type": "integer",
            "description": "Sort order of the parameter",
            "format": "int32"
          },
          "valueRestrictions": {
            "type": "object",
            "properties": {
              "minimumValue": {
                "pattern": "",
                "type": "number",
                "description": "Minimum allowed value of parameter. This field can only be set on datatype with a numeric type.",
                "format": "double"
              },
              "maximumValue": {
                "pattern": "",
                "type": "number",
                "description": "Maximum allowed value of parameter. This field can only be set on datatype with a numeric type.",
                "format": "double"
              },
              "domainValueList": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "description": "Object/archive/context of the DOV"
                  },
                  "field": {
                    "type": "string",
                    "description": "Fieldname of the DOV"
                  }
                }
              }
            }
          }
        }
      },
      "AutomatedFlowFilter": {
        "required": ["field", "operator", "condition"],
        "type": "object",
        "properties": {
          "field": {
            "pattern": "",
            "type": "string",
            "description": "Automated flow filter field"
          },
          "operator": {
            "pattern": "",
            "type": "string",
            "description": "Automated filter operator"
          },
          "condition": {
            "pattern": "",
            "type": "string",
            "description": "Automated flow filter condition"
          }
        }
      },
      "AutomatedFlowTemplateFilter": {
        "required": ["field", "operator", "condition"],
        "type": "object",
        "properties": {
          "field": {
            "pattern": "",
            "type": "string",
            "description": "Automated flow template filter field"
          },
          "operator": {
            "pattern": "",
            "type": "string",
            "description": "Automated flow template filter operator"
          },
          "condition": {
            "pattern": "",
            "type": "string",
            "description": "Automated flow template filter condition"
          }
        }
      },
      "ExtensionVersion": {
        "required": ["version", "releasedAt"],
        "type": "object",
        "properties": {
          "version": {
            "pattern": "",
            "type": "string",
            "description": "Version number for extension version (ex \"1.0.0\")"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of what changes has been done in extension version"
          },
          "releasedAt": {
            "pattern": "",
            "type": "string",
            "description": "Release date and time of given extension version",
            "format": "date-time"
          }
        }
      },
      "JobSequenceExtensionStep": {
        "required": ["assemblyName"],
        "type": "object",
        "properties": {
          "assemblyName": {
            "pattern": "",
            "type": "string",
            "description": "Name of assembly"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the IOX step"
          },
          "companySettingDefinitions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Setting name used to reference the setting"
                }
              }
            },
            "description": "Settings of the IOX step"
          }
        }
      },
      "OutputDesignVersion": {
        "required": ["designType"],
        "type": "object",
        "properties": {
          "designType": {
            "pattern": "",
            "type": "string",
            "description": "This is the various types the output design can be"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of this output design version"
          },
          "hashCode": {
            "pattern": "",
            "type": "string",
            "description": "This is the generated hashcode of the report file. This uniquely identifies the output design."
          },
          "outputType": {
            "pattern": "",
            "type": "string",
            "description": "This defines the type of the output will be.\r\nExamples: pdf, docx, xls, ...\r\n\r\nMore can be added if they are made available through the output designer."
          },
          "externalFilePath": {
            "pattern": "",
            "type": "string",
            "description": "ExternalFilePath is for TYPE eq FILE.\r\nIt is will be an optional field and will contain a path to an external file.\r\nEx: C:\\NiceLabel\\Return label 1\\"
          },
          "legacyDesigns": {
            "type": "object",
            "properties": {
              "layoutId": {
                "type": "integer",
                "description": "The identifier of the legacy layout",
                "format": "int32"
              },
              "logoId": {
                "type": "integer",
                "description": "The identifier of the logo used in the legacy layout",
                "format": "int32"
              },
              "dateFormatId": {
                "type": "integer",
                "description": "The identifier of the date formats used in the legacy layout",
                "format": "int32"
              },
              "barcodeId": {
                "type": "integer",
                "description": "The identifier of the barcodes used in the legacy layout",
                "format": "int32"
              }
            }
          },
          "dataSource": {
            "type": "object",
            "properties": {
              "dataSourceId": {
                "pattern": "",
                "type": "integer",
                "description": "Data source identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "EmailSettings": {
        "type": "object",
        "properties": {
          "fromEmailSource": {
            "type": "string",
            "description": "Default from email type. This could be either User or Company (DOV).\r\n\r\nUser means get the email address from PER and Company from COM."
          },
          "isActivatedManually": {
            "type": "boolean",
            "description": "If set to True this output setting can only be activated manually and not by the turn on all outputs option."
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the output design"
              },
              "outputDesignLink": {
                "type": "string",
                "description": "Output design reference"
              }
            }
          }
        }
      },
      "FTPSettings": {
        "type": "object",
        "properties": {
          "isActivatedManually": {
            "type": "boolean",
            "description": "If set to True this output setting can only be activated manually and not by the turn on all outputs option."
          }
        }
      },
      "PrintSettings": {
        "type": "object",
        "properties": {
          "copies": {
            "type": "integer",
            "description": "Default number of copies to print",
            "format": "int32"
          },
          "collatedKey": {
            "type": "string",
            "description": "Default definition of the order of printing for output objects"
          },
          "isActivatedManually": {
            "type": "boolean",
            "description": "If set to True this output setting can only be activated manually and not by the turn on all outputs option."
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of the output design"
              },
              "outputDesignLink": {
                "type": "string",
                "description": "Output design reference"
              }
            }
          }
        }
      },
      "Exception1": {
        "type": "object",
        "properties": {
          "company": {
            "required": ["database"],
            "type": "object",
            "properties": {
              "database": {
                "pattern": "",
                "type": "string",
                "description": "Abbreviation/code to identify the company"
              }
            }
          },
          "outputObjectDefinition": {
            "required": ["outputObjectDefinitionId"],
            "type": "object",
            "properties": {
              "outputObjectDefinitionId": {
                "minimum": 10000,
                "pattern": "",
                "type": "integer",
                "description": "Output object definition identifier",
                "format": "int32"
              }
            }
          },
          "outputDesign": {
            "type": "object",
            "properties": {
              "outputDesignId": {
                "minimum": 100000,
                "pattern": "",
                "type": "integer",
                "description": "Output design identifier",
                "format": "int32"
              }
            }
          },
          "redirectTo": {
            "type": "object",
            "properties": {
              "printerId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the printer",
                "format": "int32"
              },
              "printConnector": {
                "required": ["printConnectorId"],
                "type": "object",
                "properties": {
                  "printConnectorId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Print connector identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "PrioritizedPrinter": {
        "type": "object",
        "properties": {
          "priority": {
            "pattern": "",
            "type": "integer",
            "description": "The order the printeres will be checked for a match",
            "format": "int32"
          },
          "paperSize": {
            "pattern": "",
            "type": "string",
            "description": "Size of paper used by the printer"
          },
          "printer": {
            "required": ["printerId"],
            "type": "object",
            "properties": {
              "printerId": {
                "pattern": "",
                "type": "integer",
                "description": "Identifier of the printer",
                "format": "int32"
              },
              "printConnector": {
                "required": ["printConnectorId"],
                "type": "object",
                "properties": {
                  "printConnectorId": {
                    "pattern": "",
                    "type": "integer",
                    "description": "Print connector identifier",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "Printer2": {
        "required": ["name", "port"],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the printer"
          },
          "status": {
            "pattern": "",
            "type": "string",
            "description": "Status of the printer"
          },
          "deviceStatus": {
            "pattern": "",
            "type": "string",
            "description": "Status of the printer"
          },
          "port": {
            "pattern": "",
            "type": "string",
            "description": "The port of the printer"
          },
          "driver": {
            "pattern": "",
            "type": "string",
            "description": "The driver of the printer"
          }
        }
      },
      "RamBaseEventTypeParameter": {
        "required": ["key", "datatype"],
        "type": "object",
        "properties": {
          "key": {
            "pattern": "",
            "type": "string",
            "description": "Name of the parameter"
          },
          "datatype": {
            "pattern": "",
            "type": "string",
            "description": "The datatype of the parameter"
          },
          "isRequired": {
            "pattern": "",
            "type": "boolean",
            "description": "Determines whether or not this parameter is required for all Events of this Event Type (Y / N)"
          }
        }
      },
      "Portal": {
        "type": "object",
        "properties": {
          "contact": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "integer",
                "description": "Contact identifier",
                "format": "int32"
              },
              "contactLink": {
                "type": "string",
                "description": "Contact reference"
              }
            }
          },
          "representing": {
            "type": "object",
            "properties": {
              "objectId": {
                "type": "integer",
                "description": "Identifier of the object",
                "format": "int32"
              },
              "objectType": {
                "type": "string",
                "description": "Type of object"
              },
              "ramBaseKey": {
                "type": "string",
                "description": "Internal RamBase identifier of the object/item"
              },
              "objectLink": {
                "type": "string",
                "description": "API reference to the object"
              }
            },
            "description": "The customer or supplier represented by the portal user."
          }
        }
      },
      "Filter3": {
        "type": "object",
        "properties": {
          "filterGroup": {
            "pattern": "",
            "type": "string",
            "description": "Value or field to compare with"
          },
          "source": {
            "pattern": "",
            "type": "string",
            "description": "Source object type "
          },
          "field": {
            "pattern": "",
            "type": "string",
            "description": "Field to compare"
          },
          "operator": {
            "pattern": "",
            "type": "string",
            "description": "Relationship operator (eq=equal, le=less or equal, lt=less than, ge=greater or equal, gt=greater than)"
          },
          "value": {
            "pattern": "",
            "type": "string",
            "description": "Alternative Code ( A-Z and * )"
          }
        }
      },
      "ProjectFolder3": {
        "type": "object",
        "properties": {
          "name": {
            "pattern": "",
            "type": "string",
            "description": "Name of the project folder"
          },
          "parentProjectFolderId": {
            "pattern": "",
            "type": "string",
            "description": "Parent project folder identifier"
          }
        }
      },
      "Paste": {
        "type": "object",
        "properties": {
          "title": {
            "pattern": "",
            "type": "string",
            "description": "Title of the project note"
          },
          "isPrivate": {
            "pattern": "",
            "type": "boolean",
            "description": "True if the project note is only readable for the creator"
          },
          "format": {
            "pattern": "",
            "type": "string",
            "description": "Format/syntax of the project note"
          },
          "text": {
            "pattern": "",
            "type": "string",
            "description": "Text of the note"
          },
          "projectFolderId": {
            "pattern": "",
            "type": "integer",
            "description": "Project folder identifier",
            "format": "int32"
          }
        }
      },
      "Cos3": {
        "required": ["cosNo"],
        "type": "object",
        "properties": {
          "cosNo": {
            "pattern": "",
            "type": "integer",
            "description": "The COS number to add to the Library",
            "format": "int32"
          }
        }
      },
      "AdditionalText1": {
        "type": "object",
        "properties": {
          "text": {
            "pattern": "",
            "type": "string",
            "description": "Addition text of the output"
          }
        }
      },
      "APIResourceDependency1": {
        "required": ["verb", "uri"],
        "type": "object",
        "properties": {
          "verb": {
            "pattern": "^(GET|PUT|POST|DELETE){1}$",
            "type": "string",
            "description": "Verb of the API resource"
          },
          "uri": {
            "pattern": "",
            "type": "string",
            "description": "API resource URI"
          },
          "aPIResource": {
            "type": "object",
            "properties": {
              "aPIResourceId": {
                "type": "integer",
                "description": "API resource identifier",
                "format": "int32"
              }
            }
          }
        }
      },
      "RequiredDomainValue1": {
        "required": ["value", "description"],
        "type": "object",
        "properties": {
          "value": {
            "pattern": "",
            "type": "string",
            "description": "Value of the DOV"
          },
          "priority": {
            "pattern": "",
            "type": "integer",
            "description": "Priority of the domainvalue",
            "format": "int32"
          },
          "description": {
            "pattern": "",
            "type": "string",
            "description": "Description of the name/value/code/key"
          }
        }
      },
      "Content2": {
        "type": "object",
        "properties": {
          "subject": {
            "pattern": "",
            "type": "string",
            "description": "Subject of the content"
          },
          "body": {
            "pattern": "",
            "type": "string",
            "description": "Body of the content"
          },
          "filename": {
            "pattern": "^([\\{\\}\\(\\)\\. A-ZØÆÅa-zøæå0-9_-]+)$",
            "type": "string",
            "description": "Filename for the content"
          }
        }
      },
      "RamBaseSystem5": {
        "type": "object",
        "properties": {
          "ramBaseSystemId": {
            "type": "integer",
            "description": "RamBase system identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the rambasesystem."
          },
          "isTestSystem": {
            "type": "boolean",
            "description": "A boolean that indicates if the system is a test-system."
          }
        }
      },
      "Product26": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the product" },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "type": { "type": "string", "description": "Type of product" }
        }
      },
      "PickOperation1": {
        "type": "object",
        "properties": {
          "pickOperationId": {
            "type": "integer",
            "description": "Pick operation identifier",
            "format": "int32"
          },
          "pickedQuantity": {
            "type": "number",
            "description": "Quantity picked",
            "format": "double"
          },
          "pickOperationLink": {
            "type": "string",
            "description": "Pick operation reference"
          }
        }
      },
      "ServiceOrder": {
        "type": "object",
        "properties": {
          "serviceOrderId": {
            "type": "integer",
            "description": "Service order identifier\r\n",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Status of service order",
            "format": "int32"
          },
          "customersReferenceNumber": {
            "type": "string",
            "description": "Customers reference number. E.g. the internal sales order id the customer use in their own system."
          },
          "customer": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "integer",
                "description": "Customer identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "Name of customer (name of company or surname/familyname/lastname of a person)"
              },
              "firstname": {
                "type": "string",
                "description": "Secondary name of a company or firstname of a person"
              },
              "customerLink": {
                "type": "string",
                "description": "Customer reference"
              }
            }
          },
          "serviceOrderLink": {
            "type": "string",
            "description": "Service order reference"
          }
        }
      },
      "SarIvlError": {
        "type": "object",
        "properties": {
          "ramBaseSystem": {
            "type": "object",
            "properties": {
              "ramBaseSystemId": {
                "type": "integer",
                "description": "RamBase system identifier",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The name of the rambasesystem."
              },
              "isTestSystem": {
                "type": "boolean",
                "description": "A boolean that indicates if the system is a test-system."
              }
            }
          },
          "errorCount": {
            "type": "integer",
            "description": "Number of errors found",
            "format": "int32"
          }
        }
      }
    },
    "parameters": {
      "select": {
        "name": "$select",
        "in": "query",
        "description": "Limit the number of fields in the response",
        "style": "form",
        "explode": false,
        "schema": { "type": "array", "items": { "type": "string" } }
      },
      "pagekey": {
        "name": "$pageKey",
        "in": "query",
        "description": "Navigate to first-, previous, next- or last page in list",
        "style": "form",
        "schema": { "type": "string" }
      },
      "db": {
        "name": "$db",
        "in": "query",
        "description": "Database of the company to request",
        "style": "form",
        "schema": { "maximum": 5, "type": "string" }
      },
      "useMinimumVersion": {
        "name": "$useMinimumVersion",
        "in": "query",
        "description": "Used to run a new version of an API resource when your API client is running a deprecated API resource.",
        "style": "form",
        "schema": { "type": "integer" }
      },
      "inlineCount": {
        "name": "$inlineCount",
        "in": "query",
        "description": "Set to 'allpages' to include total number of rows in the response.",
        "style": "form",
        "schema": { "enum": ["none", "allpages"], "type": "string" }
      },
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Specifies number of rows to return in each page.",
        "style": "form",
        "schema": { "type": "integer", "format": "int32" }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter the result",
        "style": "form",
        "schema": { "type": "string" }
      },
      "orderBy": {
        "name": "$orderBy",
        "in": "query",
        "description": "Order the result",
        "style": "form",
        "schema": { "type": "string" }
      },
      "format": {
        "name": "$format",
        "in": "query",
        "description": "Format of the response",
        "required": true,
        "style": "form",
        "schema": { "enum": ["json", "xml"], "type": "string" }
      },
      "lang": {
        "name": "$lang",
        "in": "query",
        "description": "Language to use in the response. 3-letter language code.",
        "style": "form",
        "schema": { "maximum": 3, "type": "string" }
      },
      "showCustomFields": {
        "name": "$showCustomFields",
        "in": "query",
        "description": "Set to true to include/use custom fields. Default value is false.",
        "style": "form",
        "schema": { "type": "boolean" }
      },
      "showDomainValues": {
        "name": "$showCustomFields",
        "in": "query",
        "description": "Set to true to include domain descriptions for fields using domain values. Default value is false.",
        "style": "form",
        "schema": { "type": "boolean" }
      },
      "formulaDefinitionId": {
        "name": "formulaDefinitionId",
        "in": "path",
        "description": "Formula identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "parameterId": {
        "name": "parameterId",
        "in": "path",
        "description": "Parameter identifier",
        "required": true,
        "style": "simple",
        "schema": { "minLength": 1, "pattern": "", "type": "string" }
      },
      "translationId": {
        "name": "translationId",
        "in": "path",
        "description": "Translation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "notificationTypeId": {
        "name": "notificationTypeId",
        "in": "path",
        "description": "Notification type identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "approvalRuleId": {
        "name": "approvalRuleId",
        "in": "path",
        "description": "Approval rule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "roomId": {
        "name": "roomId",
        "in": "path",
        "description": "Identifier of the room",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "printDestinationId": {
        "name": "printDestinationId",
        "in": "path",
        "description": "Identifier of printer-link of a room",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "settingDefinitionId": {
        "name": "settingDefinitionId",
        "in": "path",
        "description": "Company setting definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "tagId": {
        "name": "tagId",
        "in": "path",
        "description": "Company setting definition tag identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "contactId": {
        "name": "contactId",
        "in": "path",
        "description": "Contact identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fileFolderId": {
        "name": "fileFolderId",
        "in": "path",
        "description": "File folder id for a spesific file container or forlder.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fileFolderTypeId": {
        "name": "fileFolderTypeId",
        "in": "path",
        "description": "Unique identificator for a folder type",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fileRequirementId": {
        "name": "fileRequirementId",
        "in": "path",
        "description": "Unique identifier for Requirements",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fileTypeId": {
        "name": "fileTypeId",
        "in": "path",
        "description": "Unique identifier for a file type",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "notebookId": {
        "name": "notebookId",
        "in": "path",
        "description": "Notebook identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "noteId": {
        "name": "noteId",
        "in": "path",
        "description": "Note identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "processId": {
        "name": "processId",
        "in": "path",
        "description": "Unique identifier for Process",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskProcessTemplateId": {
        "name": "taskProcessTemplateId",
        "in": "path",
        "description": "Unique identifier for task process template",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskId": {
        "name": "taskId",
        "in": "path",
        "description": "Unique task identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskTemplateId": {
        "name": "taskTemplateId",
        "in": "path",
        "description": "TaskTemplate unique identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "addressId": {
        "name": "addressId",
        "in": "path",
        "description": "Address identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "emailId": {
        "name": "emailId",
        "in": "path",
        "description": "Email identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "phoneId": {
        "name": "phoneId",
        "in": "path",
        "description": "Phone identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "recipientId": {
        "name": "recipientId",
        "in": "path",
        "description": "Recipient identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicableObjectTypeId": {
        "name": "applicableObjectTypeId",
        "in": "path",
        "description": "Item id for object names",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fileId": {
        "name": "fileId",
        "in": "path",
        "description": "File identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "filePermissionId": {
        "name": "filePermissionId",
        "in": "path",
        "description": "Full id reference and object name to this permission",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "checklistId": {
        "name": "checklistId",
        "in": "path",
        "description": "Unique identifier for a file type approval checklist",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "approvalMetaDataId": {
        "name": "approvalMetaDataId",
        "in": "path",
        "description": "Unique identifier for a file type meta data source",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "filenamePatternId": {
        "name": "filenamePatternId",
        "in": "path",
        "description": "Unique identifier for file type filname patterns",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "triggerId": {
        "name": "triggerId",
        "in": "path",
        "description": "Unique identifier for file type requirement triggers",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "sectionId": {
        "name": "sectionId",
        "in": "path",
        "description": "Unique id reference to a section in a notebook",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "mentionId": {
        "name": "mentionId",
        "in": "path",
        "description": "Note mention identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskProcessPermissionId": {
        "name": "taskProcessPermissionId",
        "in": "path",
        "description": "Uniqe identificator for a task process permission.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "companyId": {
        "name": "companyId",
        "in": "path",
        "description": "Company identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskChecklistItemId": {
        "name": "taskChecklistItemId",
        "in": "path",
        "description": "Checklist item unique id",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskPermissionId": {
        "name": "taskPermissionId",
        "in": "path",
        "description": "Uniqe identificator for a task permission.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workPeriodId": {
        "name": "workPeriodId",
        "in": "path",
        "description": "Registered time unique id",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "taskTemplateChecklistItemId": {
        "name": "taskTemplateChecklistItemId",
        "in": "path",
        "description": "Unique item identifier for the task template checklist item",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "versionId": {
        "name": "versionId",
        "in": "path",
        "description": "Version of the file ",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "checkListItemId": {
        "name": "checkListItemId",
        "in": "path",
        "description": "ItemId for a checklist item",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "approvalId": {
        "name": "approvalId",
        "in": "path",
        "description": "Item id for approval items",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "objectReferenceId": {
        "name": "objectReferenceId",
        "in": "path",
        "description": "Docref item id",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "assetId": {
        "name": "assetId",
        "in": "path",
        "description": "Asset identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "departmentId": {
        "name": "departmentId",
        "in": "path",
        "description": "Department identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "depreciationRuleId": {
        "name": "depreciationRuleId",
        "in": "path",
        "description": "Depreciation rule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "generalLedgerAccountGroupId": {
        "name": "generalLedgerAccountGroupId",
        "in": "path",
        "description": "General ledger account group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "generalLedgerAccountId": {
        "name": "generalLedgerAccountId",
        "in": "path",
        "description": "General ledger account identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "financeProjectId": {
        "name": "financeProjectId",
        "in": "path",
        "description": "Finance project identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "budgetAccountId": {
        "name": "budgetAccountId",
        "in": "path",
        "description": "Budget account identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "budgetAmountId": {
        "name": "budgetAmountId",
        "in": "path",
        "description": "Budget amount identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dimensionDefinitionId": {
        "name": "dimensionDefinitionId",
        "in": "path",
        "description": "Dimension identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "maximum": 10,
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customValueId": {
        "name": "customValueId",
        "in": "path",
        "description": "Dimension value identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "generalLedgerPostingId": {
        "name": "generalLedgerPostingId",
        "in": "path",
        "description": "General ledger posting identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accountingLineId": {
        "name": "accountingLineId",
        "in": "path",
        "description": "Accounting line identifier of the general ledger posting",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "reportAccountGroupId": {
        "name": "reportAccountGroupId",
        "in": "path",
        "description": "Report account group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "generalLedgerDefaultAccountId": {
        "name": "generalLedgerDefaultAccountId",
        "in": "path",
        "description": "General ledger default account identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "sAFTStandardCodeId": {
        "name": "sAFTStandardCodeId",
        "in": "path",
        "description": "SAF-T standard code identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiClientId": {
        "name": "apiClientId",
        "in": "path",
        "description": "API client identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiDescriptionTemplateId": {
        "name": "apiDescriptionTemplateId",
        "in": "path",
        "description": "API description template identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "treeNodeId": {
        "name": "treeNodeId",
        "in": "path",
        "description": "API documentation tree node identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiResourceId": {
        "name": "apiResourceId",
        "in": "path",
        "description": "API resource identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "developmentProjectId": {
        "name": "developmentProjectId",
        "in": "path",
        "description": "Development project identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "otpExceptionId": {
        "name": "otpExceptionId",
        "in": "path",
        "description": "A one-time-password-exception id",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deprecatedResourceVersionId": {
        "name": "deprecatedResourceVersionId",
        "in": "path",
        "description": "Deprecated resource version identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "uriPermissionId": {
        "name": "uriPermissionId",
        "in": "path",
        "description": "URI permission identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "language": {
        "name": "language",
        "in": "path",
        "description": "Language of the translation",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "version": {
        "name": "version",
        "in": "path",
        "description": "Version of the resource",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "codeReviewId": {
        "name": "codeReviewId",
        "in": "path",
        "description": "Code review identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "codeReviewCommentId": {
        "name": "codeReviewCommentId",
        "in": "path",
        "description": "Identifier of code review comment",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "projectFolderId": {
        "name": "projectFolderId",
        "in": "path",
        "description": "Project folder identifier",
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "projectItemId": {
        "name": "projectItemId",
        "in": "path",
        "description": "Project item identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "projectNoteId": {
        "name": "projectNoteId",
        "in": "path",
        "description": "Identifier of the project note",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "description": "User identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiDocumentationTreeNodeId": {
        "name": "apiDocumentationTreeNodeId",
        "in": "path",
        "description": "API documentation tree node identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "absenceStatisticsJobId": {
        "name": "absenceStatisticsJobId",
        "in": "path",
        "description": "TEST",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "certificateId": {
        "name": "certificateId",
        "in": "path",
        "description": "Certificate identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "competenceId": {
        "name": "competenceId",
        "in": "path",
        "description": "Competence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "courseId": {
        "name": "courseId",
        "in": "path",
        "description": "Course identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "laborGroupId": {
        "name": "laborGroupId",
        "in": "path",
        "description": "Labor group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "selfCertificationId": {
        "name": "selfCertificationId",
        "in": "path",
        "description": "Self certificate identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "shortTermAbsenceId": {
        "name": "shortTermAbsenceId",
        "in": "path",
        "description": "Short-term absence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workAgreementId": {
        "name": "workAgreementId",
        "in": "path",
        "description": "Work agreement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "issuedCertificateId": {
        "name": "issuedCertificateId",
        "in": "path",
        "description": "Issued certificate item identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "roleExpectationId": {
        "name": "roleExpectationId",
        "in": "path",
        "description": "Role expectation identifier for competence",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "diplomaId": {
        "name": "diplomaId",
        "in": "path",
        "description": "Course diplomas identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "employeeId": {
        "name": "employeeId",
        "in": "path",
        "description": "Employee identifier",
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "bookmarkId": {
        "name": "bookmarkId",
        "in": "path",
        "description": "A unique identifier for a RamBase Bookmark Item",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "competenceScoreId": {
        "name": "competenceScoreId",
        "in": "path",
        "description": "Competence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "degreeId": {
        "name": "degreeId",
        "in": "path",
        "description": "Employee education degree identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "languageProficiencyId": {
        "name": "languageProficiencyId",
        "in": "path",
        "description": "Language proficiency identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workExperienceId": {
        "name": "workExperienceId",
        "in": "path",
        "description": "Employee work experience identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "laborCostId": {
        "name": "laborCostId",
        "in": "path",
        "description": "Labor cost identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workDayId": {
        "name": "workDayId",
        "in": "path",
        "description": "Workday identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workAllowanceId": {
        "name": "workAllowanceId",
        "in": "path",
        "description": "Work allowance identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "arrivingWaybillId": {
        "name": "arrivingWaybillId",
        "in": "path",
        "description": "Arriving waybill identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "carrierId": {
        "name": "carrierId",
        "in": "path",
        "description": "Carrier identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "goodsReceptionId": {
        "name": "goodsReceptionId",
        "in": "path",
        "description": "Goods reception identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "shippingAdviceId": {
        "name": "shippingAdviceId",
        "in": "path",
        "description": "Shipping advice identifier\r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "shippingServiceId": {
        "name": "shippingServiceId",
        "in": "path",
        "description": "Shipping service identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockAdjustmentId": {
        "name": "stockAdjustmentId",
        "in": "path",
        "description": "Stock correction identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockLocationId": {
        "name": "stockLocationId",
        "in": "path",
        "description": "Stock location identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockTakingId": {
        "name": "stockTakingId",
        "in": "path",
        "description": "Stock taking identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "trackingNumberSeriesId": {
        "name": "trackingNumberSeriesId",
        "in": "path",
        "description": "Tracking number series identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "carrierServiceId": {
        "name": "carrierServiceId",
        "in": "path",
        "description": "Shipping service identifier from arhive for shipping services",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "itemId": {
        "name": "itemId",
        "in": "path",
        "description": "Item-/line-number of the goods reception",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "notificationId": {
        "name": "notificationId",
        "in": "path",
        "description": "Notification identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "goodsTransferId": {
        "name": "goodsTransferId",
        "in": "path",
        "description": "Goods transfer identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "shipmentId": {
        "name": "shipmentId",
        "in": "path",
        "description": "Shipment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000000000,
          "pattern": "",
          "type": "number",
          "format": "int64"
        }
      },
      "objectId": {
        "name": "objectId",
        "in": "path",
        "description": "Identifier of the object",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "packageId": {
        "name": "packageId",
        "in": "path",
        "description": "Package identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "countryId": {
        "name": "countryId",
        "in": "path",
        "description": "Country identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "specialContentTypeId": {
        "name": "specialContentTypeId",
        "in": "path",
        "description": "Special content type identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "goodsReceptionCountId": {
        "name": "goodsReceptionCountId",
        "in": "path",
        "description": "Goods reception count identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productUnitId": {
        "name": "productUnitId",
        "in": "path",
        "description": "Product unit identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseOrderChangeRequestId": {
        "name": "purchaseOrderChangeRequestId",
        "in": "path",
        "description": "Purchase order change request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierCreditNoteId": {
        "name": "supplierCreditNoteId",
        "in": "path",
        "description": "Supplier credit note identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierInvoiceId": {
        "name": "supplierInvoiceId",
        "in": "path",
        "description": "Supplier invoice identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseOrderResponseId": {
        "name": "purchaseOrderResponseId",
        "in": "path",
        "description": "Purchase order response identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseOrderId": {
        "name": "purchaseOrderId",
        "in": "path",
        "description": "Purchase order identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseQuoteRequestId": {
        "name": "purchaseQuoteRequestId",
        "in": "path",
        "description": "Purchase quote request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseQuoteId": {
        "name": "purchaseQuoteId",
        "in": "path",
        "description": "Purchase quote identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierReturnId": {
        "name": "supplierReturnId",
        "in": "path",
        "description": "Supplier return identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierId": {
        "name": "supplierId",
        "in": "path",
        "description": "RamBase supplier identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "changeId": {
        "name": "changeId",
        "in": "path",
        "description": "Change identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseContractId": {
        "name": "purchaseContractId",
        "in": "path",
        "description": "Purchase contract identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "notificationRuleId": {
        "name": "notificationRuleId",
        "in": "path",
        "description": "The unique notification identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "importedSupplierInvoiceId": {
        "name": "importedSupplierInvoiceId",
        "in": "path",
        "description": "Imported supplier invoice identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierBankAccountId": {
        "name": "supplierBankAccountId",
        "in": "path",
        "description": "Supplier bank account identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "outputConditionId": {
        "name": "outputConditionId",
        "in": "path",
        "description": "Output condition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicableInvoiceId": {
        "name": "applicableInvoiceId",
        "in": "path",
        "description": "Applicable invoice identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productGroupId": {
        "name": "productGroupId",
        "in": "path",
        "description": "Product group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productId": {
        "name": "productId",
        "in": "path",
        "description": "Product identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProductionCostId": {
        "name": "additionalProductionCostId",
        "in": "path",
        "description": "Additional production cost identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "manufacturingAreaId": {
        "name": "manufacturingAreaId",
        "in": "path",
        "description": "Manufacturing area identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "manufacturingMaterialLocationId": {
        "name": "manufacturingMaterialLocationId",
        "in": "path",
        "description": "Manufacturing material location identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "mrbSpecificationId": {
        "name": "mrbSpecificationId",
        "in": "path",
        "description": "MRB specification identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionOperationId": {
        "name": "productionOperationId",
        "in": "path",
        "description": "Production operation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productMarkingTemplateId": {
        "name": "productMarkingTemplateId",
        "in": "path",
        "description": "Product marking template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionResourceCategoryId": {
        "name": "productionResourceCategoryId",
        "in": "path",
        "description": "Production resource category identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionResourceGroupId": {
        "name": "productionResourceGroupId",
        "in": "path",
        "description": "Production resource group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionResourceId": {
        "name": "productionResourceId",
        "in": "path",
        "description": "Production resource identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "jobId": {
        "name": "jobId",
        "in": "path",
        "description": "Scheduled production job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "serialNumberTemplateId": {
        "name": "serialNumberTemplateId",
        "in": "path",
        "description": "Serial number template identifer",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionTaskTriggerId": {
        "name": "productionTaskTriggerId",
        "in": "path",
        "description": "Production task trigger id",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workOrderOperationGroupId": {
        "name": "workOrderOperationGroupId",
        "in": "path",
        "description": "Work order operation group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accessoryId": {
        "name": "accessoryId",
        "in": "path",
        "description": "Accessory identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customersProductId": {
        "name": "customersProductId",
        "in": "path",
        "description": "Customer product identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "classificationId": {
        "name": "classificationId",
        "in": "path",
        "description": "Customs tariff classification identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "detailedDescriptionId": {
        "name": "detailedDescriptionId",
        "in": "path",
        "description": "Detailed description identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "externalMaterialOwnerId": {
        "name": "externalMaterialOwnerId",
        "in": "path",
        "description": "External material owner identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "manufacturerProductId": {
        "name": "manufacturerProductId",
        "in": "path",
        "description": "Manufacturer product identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "notificationTriggerId": {
        "name": "notificationTriggerId",
        "in": "path",
        "description": "Notification trigger identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchasePriceId": {
        "name": "purchasePriceId",
        "in": "path",
        "description": "Purchase price identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "replacementId": {
        "name": "replacementId",
        "in": "path",
        "description": "Identifier of the product to replace",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "replacementProductId": {
        "name": "replacementProductId",
        "in": "path",
        "description": "Product identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "replenishmentConfigurationId": {
        "name": "replenishmentConfigurationId",
        "in": "path",
        "description": "Stock location replinishment configuration identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesPriceId": {
        "name": "salesPriceId",
        "in": "path",
        "description": "Sales price identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "standardRecurringPriceId": {
        "name": "standardRecurringPriceId",
        "in": "path",
        "description": "Identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productSupplierId": {
        "name": "productSupplierId",
        "in": "path",
        "description": "Product supplier identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productStructureVersionId": {
        "name": "productStructureVersionId",
        "in": "path",
        "description": "Product structure identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalCostId": {
        "name": "additionalCostId",
        "in": "path",
        "description": "Additional production cost identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "operationSupplierId": {
        "name": "operationSupplierId",
        "in": "path",
        "description": "Operation supplier identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "capacityPeriodId": {
        "name": "capacityPeriodId",
        "in": "path",
        "description": "Sequence number of production resource's capacity period",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "manHourRateId": {
        "name": "manHourRateId",
        "in": "path",
        "description": "Id of man hour rate",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "appliedProductId": {
        "name": "appliedProductId",
        "in": "path",
        "description": "Serial number template product identifer.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "serialNumberElementId": {
        "name": "serialNumberElementId",
        "in": "path",
        "description": "Serialnumber Template Element identifer.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionWorkOrderId": {
        "name": "productionWorkOrderId",
        "in": "path",
        "description": "Production work order identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "contentId": {
        "name": "contentId",
        "in": "path",
        "description": "Identifier for section content",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "filetypeId": {
        "name": "filetypeId",
        "in": "path",
        "description": "Unique identifier for a file type connected to a content",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "consequenceTypeId": {
        "name": "consequenceTypeId",
        "in": "path",
        "description": "Quality consequence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "costCategoryId": {
        "name": "costCategoryId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "directCauseCategoryId": {
        "name": "directCauseCategoryId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "issueCategoryId": {
        "name": "issueCategoryId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "qualityIssueId": {
        "name": "qualityIssueId",
        "in": "path",
        "description": "QHSES issue identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "issueTypeId": {
        "name": "issueTypeId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "riskAssessmentId": {
        "name": "riskAssessmentId",
        "in": "path",
        "description": "Risk assessment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "riskId": {
        "name": "riskId",
        "in": "path",
        "description": "Identifier of the risk",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "rootCauseCategoryId": {
        "name": "rootCauseCategoryId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "consequenceAreaId": {
        "name": "consequenceAreaId",
        "in": "path",
        "description": "Quality consequence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "areaConsequenceTypeId": {
        "name": "areaConsequenceTypeId",
        "in": "path",
        "description": "Identifier for this quality incident consequence.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "qualityControlId": {
        "name": "qualityControlId",
        "in": "path",
        "description": "Identifier of the quality control",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "actionId": {
        "name": "actionId",
        "in": "path",
        "description": "Action identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "qualityCauseId": {
        "name": "qualityCauseId",
        "in": "path",
        "description": "Cause identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "consequenceId": {
        "name": "consequenceId",
        "in": "path",
        "description": "Quality issue consequence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "costId": {
        "name": "costId",
        "in": "path",
        "description": "QHSES issue cost identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "externalCorrespondenceId": {
        "name": "externalCorrespondenceId",
        "in": "path",
        "description": "External correspondence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "otherRelationId": {
        "name": "otherRelationId",
        "in": "path",
        "description": "Relation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "relatedIssueId": {
        "name": "relatedIssueId",
        "in": "path",
        "description": "Relation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "standardRequirementId": {
        "name": "standardRequirementId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "suggestedActionId": {
        "name": "suggestedActionId",
        "in": "path",
        "description": "Suggested action identifier.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "participantId": {
        "name": "participantId",
        "in": "path",
        "description": "Identifier of participant",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "controlId": {
        "name": "controlId",
        "in": "path",
        "description": "Identifier of the control",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "potentialConsequenceId": {
        "name": "potentialConsequenceId",
        "in": "path",
        "description": "Potential consequence identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "likelihoodId": {
        "name": "likelihoodId",
        "in": "path",
        "description": "Likelihood identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "severityId": {
        "name": "severityId",
        "in": "path",
        "description": "Identifier for a consequence severity",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesCreditNoteId": {
        "name": "salesCreditNoteId",
        "in": "path",
        "description": "Sales credit note identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customerGroupId": {
        "name": "customerGroupId",
        "in": "path",
        "description": "Customer group identificator",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customerId": {
        "name": "customerId",
        "in": "path",
        "description": "Customer identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesDeliveryProjectId": {
        "name": "salesDeliveryProjectId",
        "in": "path",
        "description": "Sales delivery project identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesForecastId": {
        "name": "salesForecastId",
        "in": "path",
        "description": "Sales forecast identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesInvoiceId": {
        "name": "salesInvoiceId",
        "in": "path",
        "description": "Sales invoice identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "itemPriceAgreementId": {
        "name": "itemPriceAgreementId",
        "in": "path",
        "description": "Item price agreement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesOpportunityId": {
        "name": "salesOpportunityId",
        "in": "path",
        "description": "Sales opportunity identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "opportunityStageId": {
        "name": "opportunityStageId",
        "in": "path",
        "description": "Opportunity stage identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesOrderChangeRequestId": {
        "name": "salesOrderChangeRequestId",
        "in": "path",
        "description": "Sales order change request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesOrderRequestId": {
        "name": "salesOrderRequestId",
        "in": "path",
        "description": "Sales order request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesOrderId": {
        "name": "salesOrderId",
        "in": "path",
        "description": "Sales order identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "priceListId": {
        "name": "priceListId",
        "in": "path",
        "description": "Price list identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "priceRoundingRulesetId": {
        "name": "priceRoundingRulesetId",
        "in": "path",
        "description": "Price rounding ruleset identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "projectOrderId": {
        "name": "projectOrderId",
        "in": "path",
        "description": "Project order identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesQuoteRequestId": {
        "name": "salesQuoteRequestId",
        "in": "path",
        "description": "Sales quote request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesQuoteId": {
        "name": "salesQuoteId",
        "in": "path",
        "description": "Sales quote identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "recurringInvoicePlanId": {
        "name": "recurringInvoicePlanId",
        "in": "path",
        "description": "Recurring invoice plan identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "recurringPriceId": {
        "name": "recurringPriceId",
        "in": "path",
        "description": "Recurring price indentifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesContractId": {
        "name": "salesContractId",
        "in": "path",
        "description": "Customer sales contract identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customerBankAccountId": {
        "name": "customerBankAccountId",
        "in": "path",
        "description": "Customer bank account identifer",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "exchangeRateAgreementId": {
        "name": "exchangeRateAgreementId",
        "in": "path",
        "description": "Exchange rate agreement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "lotId": {
        "name": "lotId",
        "in": "path",
        "description": "Lot identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "ruleId": {
        "name": "ruleId",
        "in": "path",
        "description": "Price rounding rule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "billableSaleId": {
        "name": "billableSaleId",
        "in": "path",
        "description": "The billing basis sequence number",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "relatedProductUnitId": {
        "name": "relatedProductUnitId",
        "in": "path",
        "description": "The identifier of a relation between project order item and product unit",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "oneTimeFeeId": {
        "name": "oneTimeFeeId",
        "in": "path",
        "description": "Unique one time fee identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "priceStepId": {
        "name": "priceStepId",
        "in": "path",
        "description": "Unique price step identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "usageStepId": {
        "name": "usageStepId",
        "in": "path",
        "description": "Usage entry identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workLogId": {
        "name": "workLogId",
        "in": "path",
        "description": "Work log identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "recurringInvoicePeriodId": {
        "name": "recurringInvoicePeriodId",
        "in": "path",
        "description": "Recurring invoice period identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "discountId": {
        "name": "discountId",
        "in": "path",
        "description": "Discount identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "usageId": {
        "name": "usageId",
        "in": "path",
        "description": "Usage identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "serviceIntervalId": {
        "name": "serviceIntervalId",
        "in": "path",
        "description": "Service interval identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicationVersionId": {
        "name": "applicationVersionId",
        "in": "path",
        "description": "Application version identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "automatedFlowActionId": {
        "name": "automatedFlowActionId",
        "in": "path",
        "description": "Automated flow action identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "automatedFlowId": {
        "name": "automatedFlowId",
        "in": "path",
        "description": "Automated flow identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "automatedFlowTemplateId": {
        "name": "automatedFlowTemplateId",
        "in": "path",
        "description": "Automated flow template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "batchPrintExceptionId": {
        "name": "batchPrintExceptionId",
        "in": "path",
        "description": "Batch print exception identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "contextMenuCollectionId": {
        "name": "contextMenuCollectionId",
        "in": "path",
        "description": "Context menu collection id. A unique Id representing a single context menu collection.",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "contextMenuItemId": {
        "name": "contextMenuItemId",
        "in": "path",
        "description": "Translation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "cosId": {
        "name": "cosId",
        "in": "path",
        "description": "COS identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dataSourceId": {
        "name": "dataSourceId",
        "in": "path",
        "description": "Data source identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deploymentPackageId": {
        "name": "deploymentPackageId",
        "in": "path",
        "description": "Deployment package identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "domainValueId": {
        "name": "domainValueId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "jobSequenceExtensionId": {
        "name": "jobSequenceExtensionId",
        "in": "path",
        "description": "Job sequence extension identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "outputDesignId": {
        "name": "outputDesignId",
        "in": "path",
        "description": "Output design identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "outputObjectDefinitionId": {
        "name": "outputObjectDefinitionId",
        "in": "path",
        "description": "Output object definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "permissionId": {
        "name": "permissionId",
        "in": "path",
        "description": "Permission identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "printConfigurationId": {
        "name": "printConfigurationId",
        "in": "path",
        "description": "Print configuration identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "printConnectorId": {
        "name": "printConnectorId",
        "in": "path",
        "description": "Print connector identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "rambaseEventTypeId": {
        "name": "rambaseEventTypeId",
        "in": "path",
        "description": "RamBase event type identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "RamBaseMenuItemId": {
        "name": "RamBaseMenuItemId",
        "in": "path",
        "description": "A unique RamBase menu item id.",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "webhookId": {
        "name": "webhookId",
        "in": "path",
        "description": "Webhook identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "projectId": {
        "name": "projectId",
        "in": "path",
        "description": "Project identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "archiveTemplateId": {
        "name": "archiveTemplateId",
        "in": "path",
        "description": "Archive template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "archiveClassId": {
        "name": "archiveClassId",
        "in": "path",
        "description": "Archive class identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "aNo;CompanyId": {
        "name": "aNo;CompanyId",
        "in": "path",
        "description": "ANo;CopmanyId as key for combined primary key",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "customFieldId": {
        "name": "customFieldId",
        "in": "path",
        "description": "Custom field identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fieldId": {
        "name": "fieldId",
        "in": "path",
        "description": "Field identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicationId": {
        "name": "applicationId",
        "in": "path",
        "description": "Application version identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "automatedFlowActionParameterId": {
        "name": "automatedFlowActionParameterId",
        "in": "path",
        "description": "Automated flow action parameter identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "filterId": {
        "name": "filterId",
        "in": "path",
        "description": "Automated flow filter identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "debugConfigurationId": {
        "name": "debugConfigurationId",
        "in": "path",
        "description": "Debug configuration identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "cosVersionId": {
        "name": "cosVersionId",
        "in": "path",
        "description": "COS version identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deploymentFolderId": {
        "name": "deploymentFolderId",
        "in": "path",
        "description": "Deployment folder identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deploymentObjectId": {
        "name": "deploymentObjectId",
        "in": "path",
        "description": "Deployment object identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "riskControlId": {
        "name": "riskControlId",
        "in": "path",
        "description": "Risk control identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dutyId": {
        "name": "dutyId",
        "in": "path",
        "description": "Duty identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "privilegeId": {
        "name": "privilegeId",
        "in": "path",
        "description": "Privilege identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "extensionId": {
        "name": "extensionId",
        "in": "path",
        "description": "Extension identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "mediumId": {
        "name": "mediumId",
        "in": "path",
        "description": "Identifier of media",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "requiredCustomFieldId": {
        "name": "requiredCustomFieldId",
        "in": "path",
        "description": "Identifier of custom field",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "extensionVersionId": {
        "name": "extensionVersionId",
        "in": "path",
        "description": "Unique identifier for extension version",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "jobSequenceExtensionStepId": {
        "name": "jobSequenceExtensionStepId",
        "in": "path",
        "description": "IOX step identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "libraryId": {
        "name": "libraryId",
        "in": "path",
        "description": "Library identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "moduleId": {
        "name": "moduleId",
        "in": "path",
        "description": "Module identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "exceptionId": {
        "name": "exceptionId",
        "in": "path",
        "description": "Print configuration exception identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "prioritizedPrinterId": {
        "name": "prioritizedPrinterId",
        "in": "path",
        "description": "Print configuration printer identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "printerId": {
        "name": "printerId",
        "in": "path",
        "description": "Identifier of the printer",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "reportId": {
        "name": "reportId",
        "in": "path",
        "description": "Report definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "columnDefinitionId": {
        "name": "columnDefinitionId",
        "in": "path",
        "description": "Report Definition column line identifier\r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "roleId": {
        "name": "roleId",
        "in": "path",
        "description": "Role identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "submoduleId": {
        "name": "submoduleId",
        "in": "path",
        "description": "Submodule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "subscribingCompanyId": {
        "name": "subscribingCompanyId",
        "in": "path",
        "description": "Submodule reference of the company",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicationComponentFilterId": {
        "name": "applicationComponentFilterId",
        "in": "path",
        "description": "Unique identifier for user-defined filter",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "systemPermissionId": {
        "name": "systemPermissionId",
        "in": "path",
        "description": "Unique identifier for a users system permission",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "resourceId": {
        "name": "resourceId",
        "in": "path",
        "description": "API resource identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "pasteId": {
        "name": "pasteId",
        "in": "path",
        "description": "Identifier of the project note",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "username": {
        "name": "username",
        "in": "path",
        "description": "Username to remove from project",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "viewId": {
        "name": "viewId",
        "in": "path",
        "description": "SQL view identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiResourceDependencyId": {
        "name": "apiResourceDependencyId",
        "in": "path",
        "description": "API resource dependency identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "textTemplateId": {
        "name": "textTemplateId",
        "in": "path",
        "description": "Text template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "cosDependencyId": {
        "name": "cosDependencyId",
        "in": "path",
        "description": "COS identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fieldAdmittanceId": {
        "name": "fieldAdmittanceId",
        "in": "path",
        "description": "Field admittance identifier of a privilege on a duty",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "requiredDomainValueId": {
        "name": "requiredDomainValueId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "cosno": {
        "name": "cosno",
        "in": "path",
        "description": "COS identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dashboardName": {
        "name": "dashboardName",
        "in": "path",
        "description": "The module based dashboard name used as a witdget container",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "widgetId": {
        "name": "widgetId",
        "in": "path",
        "description": "A unique id that  will indentify a specific widget on a dashboard",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "auctionId": {
        "name": "auctionId",
        "in": "path",
        "description": "Auction identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "bidId": {
        "name": "bidId",
        "in": "path",
        "description": "Bid identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "currencyCode": {
        "name": "currencyCode",
        "in": "path",
        "description": "Three character code following the ISO 4217 standard",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "^[A-Z]{3}$", "type": "string" }
      },
      "dayDetailId": {
        "name": "dayDetailId",
        "in": "path",
        "description": "Day detail identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "groupId": {
        "name": "groupId",
        "in": "path",
        "description": "Group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "postalCodeDefinitionId": {
        "name": "postalCodeDefinitionId",
        "in": "path",
        "description": "Postal code definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "settingId": {
        "name": "settingId",
        "in": "path",
        "description": "Company setting identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "approverAssignmentId": {
        "name": "approverAssignmentId",
        "in": "path",
        "description": "Approver identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "communicationId": {
        "name": "communicationId",
        "in": "path",
        "description": "Communication identifier",
        "required": true,
        "style": "simple",
        "schema": { "minimum": 1, "type": "integer", "format": "int32" }
      },
      "fileFolderShareId": {
        "name": "fileFolderShareId",
        "in": "path",
        "description": "Unique identifier for a public share",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accountAdjustmentPlanId": {
        "name": "accountAdjustmentPlanId",
        "in": "path",
        "description": "Account adjustment plan identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accountsPayableTransactionId": {
        "name": "accountsPayableTransactionId",
        "in": "path",
        "description": "Accounts payable transaction identifier\r\n\r\n \r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accountsReceivableTransactionsId": {
        "name": "accountsReceivableTransactionsId",
        "in": "path",
        "description": "Accounts receivable transaction identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "bankAccountId": {
        "name": "bankAccountId",
        "in": "path",
        "description": "Bank account identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "bankStatementId": {
        "name": "bankStatementId",
        "in": "path",
        "description": "Bank statement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "creditCardTransactionId": {
        "name": "creditCardTransactionId",
        "in": "path",
        "description": "Credit card transaction identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customerLegalEntityId": {
        "name": "customerLegalEntityId",
        "in": "path",
        "description": "Customer legal entity identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "depreciationTemplateId": {
        "name": "depreciationTemplateId",
        "in": "path",
        "description": "Depriciation template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dunningJobId": {
        "name": "dunningJobId",
        "in": "path",
        "description": "Dunning job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fixedAssetId": {
        "name": "fixedAssetId",
        "in": "path",
        "description": "Fixed asset identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "generalLedgerAccountAssignmentId": {
        "name": "generalLedgerAccountAssignmentId",
        "in": "path",
        "description": "General ledger account assignment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "inventoryValueId": {
        "name": "inventoryValueId",
        "in": "path",
        "description": "",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "payableJournalEntryId": {
        "name": "payableJournalEntryId",
        "in": "path",
        "description": "Payable journal entry identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "paymentId": {
        "name": "paymentId",
        "in": "path",
        "description": "Payment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "periodId": {
        "name": "periodId",
        "in": "path",
        "description": "Accounting period identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "maximum": 299999,
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "year": {
        "name": "year",
        "in": "path",
        "description": "Year of accounting period",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "receivableJournalEntryId": {
        "name": "receivableJournalEntryId",
        "in": "path",
        "description": "Receivable journal entry identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesPostingAdjustmentId": {
        "name": "salesPostingAdjustmentId",
        "in": "path",
        "description": "Sales posting adjustment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockAccrualId": {
        "name": "stockAccrualId",
        "in": "path",
        "description": "Stock accrual identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierPostingAdjustmentId": {
        "name": "supplierPostingAdjustmentId",
        "in": "path",
        "description": "Supplier posting adjustment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "vatCodeDefinitionId": {
        "name": "vatCodeDefinitionId",
        "in": "path",
        "description": "VAT code identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "vatPostingId": {
        "name": "vatPostingId",
        "in": "path",
        "description": "VAT Posting identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "dunningId": {
        "name": "dunningId",
        "in": "path",
        "description": "Item-/linenumber of dunning",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "assignmentId": {
        "name": "assignmentId",
        "in": "path",
        "description": "General ledger account assignment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "percentValidityId": {
        "name": "percentValidityId",
        "in": "path",
        "description": "Percent validity identifier of the VAT code",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accountingPeriodId": {
        "name": "accountingPeriodId",
        "in": "path",
        "description": "Accounting period",
        "required": true,
        "style": "simple",
        "schema": {
          "maximum": 299912,
          "minimum": 199000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiRequestId": {
        "name": "apiRequestId",
        "in": "path",
        "description": "Api request identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "number",
          "format": "int64"
        }
      },
      "currencyId": {
        "name": "currencyId",
        "in": "path",
        "description": "Currency identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "exchangeRateSourceId": {
        "name": "exchangeRateSourceId",
        "in": "path",
        "description": "Exchange rate source identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "ramBaseSystemId": {
        "name": "ramBaseSystemId",
        "in": "path",
        "description": "RamBase system identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "systemSetupJob": {
        "name": "systemSetupJob",
        "in": "path",
        "description": "RamBase system job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "number",
          "format": "int64"
        }
      },
      "apiDescriptionTemplate": {
        "name": "apiDescriptionTemplate",
        "in": "path",
        "description": "API description template identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "exchangeRateId": {
        "name": "exchangeRateId",
        "in": "path",
        "description": "Exchange rate identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "timeTypeId": {
        "name": "timeTypeId",
        "in": "path",
        "description": "Time type identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workMonthId": {
        "name": "workMonthId",
        "in": "path",
        "description": "Work month identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workScheduleId": {
        "name": "workScheduleId",
        "in": "path",
        "description": "Work schedule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workAdjustmentId": {
        "name": "workAdjustmentId",
        "in": "path",
        "description": "Work adjustment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "scheduledWorkPeriodId": {
        "name": "scheduledWorkPeriodId",
        "in": "path",
        "description": "Scheduled work period identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "assignmentRegisterId": {
        "name": "assignmentRegisterId",
        "in": "path",
        "description": "Assignment register identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customsExportDeclarationId": {
        "name": "customsExportDeclarationId",
        "in": "path",
        "description": "Customs export declaration identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customsImportDeclarationId": {
        "name": "customsImportDeclarationId",
        "in": "path",
        "description": "Customs import declaration identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customsTariffId": {
        "name": "customsTariffId",
        "in": "path",
        "description": "Customs tariff identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "departingWaybillId": {
        "name": "departingWaybillId",
        "in": "path",
        "description": "Departing waybill identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "freightTableId": {
        "name": "freightTableId",
        "in": "path",
        "description": "Freight table identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "locationId": {
        "name": "locationId",
        "in": "path",
        "description": "Location identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "pickListId": {
        "name": "pickListId",
        "in": "path",
        "description": "Pick list identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "pickOperationId": {
        "name": "pickOperationId",
        "in": "path",
        "description": "Pick operation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "specialHandlingId": {
        "name": "specialHandlingId",
        "in": "path",
        "description": "Special handling identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockItemId": {
        "name": "stockItemId",
        "in": "path",
        "description": "Stock item identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockEntryId": {
        "name": "stockEntryId",
        "in": "path",
        "description": "Stock entry identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockLocationAssignmentId": {
        "name": "stockLocationAssignmentId",
        "in": "path",
        "description": "Stock location assignment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockQueueItemId": {
        "name": "stockQueueItemId",
        "in": "path",
        "description": "Stock queue item identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "assignmentEventId": {
        "name": "assignmentEventId",
        "in": "path",
        "description": "Change identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "stockLocationCountId": {
        "name": "stockLocationCountId",
        "in": "path",
        "description": "Stock location count identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "supplierCreditClaimId": {
        "name": "supplierCreditClaimId",
        "in": "path",
        "description": "Supplier credit claim identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseOrderSuggestionId": {
        "name": "purchaseOrderSuggestionId",
        "in": "path",
        "description": "Purchase order suggestion identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseProductId": {
        "name": "purchaseProductId",
        "in": "path",
        "description": "Expanded product identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "purchaseGroupId": {
        "name": "purchaseGroupId",
        "in": "path",
        "description": "Purchase group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "purchaseRequirementId": {
        "name": "purchaseRequirementId",
        "in": "path",
        "description": "Purchase requirement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "sopProcessId": {
        "name": "sopProcessId",
        "in": "path",
        "description": "S&OP (sales and operation planning) process identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "memberId": {
        "name": "memberId",
        "in": "path",
        "description": "Member identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "documentTransactionId": {
        "name": "documentTransactionId",
        "in": "path",
        "description": "Document transaction identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "manufacturerId": {
        "name": "manufacturerId",
        "in": "path",
        "description": "Manufacturer identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "measurementUnitId": {
        "name": "measurementUnitId",
        "in": "path",
        "description": "Measurement unit identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "priceAgreementId": {
        "name": "priceAgreementId",
        "in": "path",
        "description": "Price structure identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "priceTemplateId": {
        "name": "priceTemplateId",
        "in": "path",
        "description": "Price template identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productStructureId": {
        "name": "productStructureId",
        "in": "path",
        "description": "Product structure identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000000000000,
          "pattern": "",
          "type": "number",
          "format": "int64"
        }
      },
      "productionDeliverySnapshotId": {
        "name": "productionDeliverySnapshotId",
        "in": "path",
        "description": "Production delivery snapshot identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "measurementId": {
        "name": "measurementId",
        "in": "path",
        "description": "Measurement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "measurementStandardId": {
        "name": "measurementStandardId",
        "in": "path",
        "description": "Measurement standard identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "measurementToolId": {
        "name": "measurementToolId",
        "in": "path",
        "description": "Measurement tool identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "plannedOperationId": {
        "name": "plannedOperationId",
        "in": "path",
        "description": "Planned work order operation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productionRequirementId": {
        "name": "productionRequirementId",
        "in": "path",
        "description": "Production requirement identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workingTimeTemplateId": {
        "name": "workingTimeTemplateId",
        "in": "path",
        "description": "Production working time template identification number",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "workOrderOperationId": {
        "name": "workOrderOperationId",
        "in": "path",
        "description": "Production work order operation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "expandedProductId": {
        "name": "expandedProductId",
        "in": "path",
        "description": "Expanded product identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "reopenReasonId": {
        "name": "reopenReasonId",
        "in": "path",
        "description": "Identifier of the domain value",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productRevisionId": {
        "name": "productRevisionId",
        "in": "path",
        "description": "Product revision identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productStructureMaterialId": {
        "name": "productStructureMaterialId",
        "in": "path",
        "description": "Product structure material identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productStructureOperationId": {
        "name": "productStructureOperationId",
        "in": "path",
        "description": "Product structure operation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "wbsElementId": {
        "name": "wbsElementId",
        "in": "path",
        "description": "Work breakdown structure element identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "hourRateId": {
        "name": "hourRateId",
        "in": "path",
        "description": "Id of production's resource hour rate",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "restrictedStockLocationId": {
        "name": "restrictedStockLocationId",
        "in": "path",
        "description": "Production resource restricted stock location item identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "operatorId": {
        "name": "operatorId",
        "in": "path",
        "description": "Identifier of restricted operator",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "sequenceCounterId": {
        "name": "sequenceCounterId",
        "in": "path",
        "description": "Sequence counter identifer",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "productOperationId": {
        "name": "productOperationId",
        "in": "path",
        "description": "Production work order product operation",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "qualityAssuranceEventId": {
        "name": "qualityAssuranceEventId",
        "in": "path",
        "description": "Quality assurance event identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "scoreLogEntryId": {
        "name": "scoreLogEntryId",
        "in": "path",
        "description": "Score log entry identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "rentalCalendarId": {
        "name": "rentalCalendarId",
        "in": "path",
        "description": "Rental calendar identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "rentalOrderId": {
        "name": "rentalOrderId",
        "in": "path",
        "description": "Rental order identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "advanceInvoicePlanId": {
        "name": "advanceInvoicePlanId",
        "in": "path",
        "description": "Advance invoice plan identifier\r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deviationId": {
        "name": "deviationId",
        "in": "path",
        "description": "Deviation identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deviationWorkflowId": {
        "name": "deviationWorkflowId",
        "in": "path",
        "description": "Deviation definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "salesProductId": {
        "name": "salesProductId",
        "in": "path",
        "description": "Expanded product identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "recurringSalesQuoteId": {
        "name": "recurringSalesQuoteId",
        "in": "path",
        "description": "Recurring sales quote identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "subscriptionId": {
        "name": "subscriptionId",
        "in": "path",
        "description": "Subscription identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "customerSubscriptionId": {
        "name": "customerSubscriptionId",
        "in": "path",
        "description": "Customer subscription identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "pricingParameterId": {
        "name": "pricingParameterId",
        "in": "path",
        "description": "Pricing parameter identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "serviceOrderId": {
        "name": "serviceOrderId",
        "in": "path",
        "description": "Service order identifier\r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "accessRuleId": {
        "name": "accessRuleId",
        "in": "path",
        "description": "Access Rule identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "applicationMatch": {
        "name": "applicationMatch",
        "in": "path",
        "description": "Matching Keyword",
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "bulkJobDefinitionId": {
        "name": "bulkJobDefinitionId",
        "in": "path",
        "description": "Bulk job definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "errorMessageId": {
        "name": "errorMessageId",
        "in": "path",
        "description": "Error message identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "exportAPIId": {
        "name": "exportAPIId",
        "in": "path",
        "description": "Export API identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "importJobDefinitionId": {
        "name": "importJobDefinitionId",
        "in": "path",
        "description": "Import job definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "systemJobDefinitionId": {
        "name": "systemJobDefinitionId",
        "in": "path",
        "description": "System job definition identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "systemJobLogId": {
        "name": "systemJobLogId",
        "in": "path",
        "description": "System log identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "jobSequenceId": {
        "name": "jobSequenceId",
        "in": "path",
        "description": "Job sequence identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "outputLogoId": {
        "name": "outputLogoId",
        "in": "path",
        "description": "The logo identifiter",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "outputThemeId": {
        "name": "outputThemeId",
        "in": "path",
        "description": "Output theme identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "printGroupId": {
        "name": "printGroupId",
        "in": "path",
        "description": "Print group identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "publisherId": {
        "name": "publisherId",
        "in": "path",
        "description": "Publisher identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "ramBaseEventId": {
        "name": "ramBaseEventId",
        "in": "path",
        "description": "Identifier of the event",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "ramBaseMenuItemId": {
        "name": "ramBaseMenuItemId",
        "in": "path",
        "description": "A unique identifier for a RamBase Menu Item",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "reportJobId": {
        "name": "reportJobId",
        "in": "path",
        "description": "Report job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "storedProcedureId": {
        "name": "storedProcedureId",
        "in": "path",
        "description": "SQL stored procedure identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "verificationLogId": {
        "name": "verificationLogId",
        "in": "path",
        "description": "Verification log identifier",
        "required": true,
        "style": "simple",
        "schema": { "minimum": 100000, "type": "integer", "format": "int32" }
      },
      "operationId": {
        "name": "operationId",
        "in": "path",
        "description": "Api operation identifiers",
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "fieldname": {
        "name": "fieldname",
        "in": "path",
        "required": true,
        "style": "simple",
        "schema": { "type": "string" }
      },
      "operationInstanceId": {
        "name": "operationInstanceId",
        "in": "path",
        "description": "Operation instance identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "apiOperationId": {
        "name": "apiOperationId",
        "in": "path",
        "description": "Api operation identifiers",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "indexId": {
        "name": "indexId",
        "in": "path",
        "description": "Index identifier",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "batchJobId": {
        "name": "batchJobId",
        "in": "path",
        "description": "Batch job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "importJobId": {
        "name": "importJobId",
        "in": "path",
        "description": "Import job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "outputJobId": {
        "name": "outputJobId",
        "in": "path",
        "description": "Output job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 100000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "licenseId": {
        "name": "licenseId",
        "in": "path",
        "description": "A unique RamBase license number",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "commonArchiveChangeId": {
        "name": "commonArchiveChangeId",
        "in": "path",
        "description": "Identifier of the common archive change",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "cosChangeId": {
        "name": "cosChangeId",
        "in": "path",
        "description": "COS change identifier\r\n",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 0,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "deniedChangeId": {
        "name": "deniedChangeId",
        "in": "path",
        "description": "Denied change identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "number",
          "format": "int64"
        }
      },
      "localChangeId": {
        "name": "localChangeId",
        "in": "path",
        "description": "LocalChangeID\r\n",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "string" }
      },
      "archive": {
        "name": "archive",
        "in": "path",
        "description": "Archive that the ObjectType-Mapping represents",
        "required": true,
        "style": "simple",
        "schema": { "minLength": 3, "pattern": "", "type": "string" }
      },
      "componentid": {
        "name": "componentid",
        "in": "path",
        "description": "",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "automatedFlowParameterId": {
        "name": "automatedFlowParameterId",
        "in": "path",
        "description": "Automated flow action parameter identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "automatedFlowTemplateParameterId": {
        "name": "automatedFlowTemplateParameterId",
        "in": "path",
        "description": "Automated flow template parameter identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "cofNo": {
        "name": "cofNo",
        "in": "path",
        "description": "",
        "style": "simple",
        "schema": { "pattern": "", "type": "" }
      },
      "cosNo": {
        "name": "cosNo",
        "in": "path",
        "description": "COS identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 10000,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "buildJobId": {
        "name": "buildJobId",
        "in": "path",
        "description": "Build job identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "userAssignmentId": {
        "name": "userAssignmentId",
        "in": "path",
        "description": "User assignment identifier",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "resourceno": {
        "name": "resourceno",
        "in": "path",
        "description": "API resource identifier",
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "taskTemplatechecklistItemId": {
        "name": "taskTemplatechecklistItemId",
        "in": "path",
        "description": "Unique item identifier for the task template checklist item",
        "required": true,
        "style": "simple",
        "schema": {
          "minimum": 1,
          "pattern": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "commissionId": {
        "name": "commissionId",
        "in": "path",
        "description": "Suppliers commission code",
        "required": true,
        "style": "simple",
        "schema": { "pattern": "", "type": "integer", "format": "int32" }
      },
      "subName": {
        "name": "subName",
        "in": "path",
        "description": "The sub name identifier used in COS",
        "required": true,
        "style": "simple",
        "schema": { "minLength": 2, "pattern": "", "type": "string" }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "description": "API key to authorize requests",
        "name": "$accessToken",
        "in": "query"
      },
      "oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.rambase.net/oauth2",
            "tokenUrl": "https://api.rambase.net/oauth2/access_token",
            "refreshUrl": "https://api.rambase.net/oauth2/access_token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [{ "api_key": [], "oauth": [] }]
}
